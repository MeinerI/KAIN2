#ifndef THISDUST_H
#define THISDUST_H

extern struct _Normal _Normal_a00c9154;

extern struct _Normal _Normal_a00c915c;

extern struct _Normal _Normal_a00c91a4;

extern struct _Normal _Normal_a00c925c;

extern struct _Normal _Normal_a00c9304;

extern struct _Normal _Normal_a00c9344;

extern struct _Normal _Normal_a00c936c;

extern struct _Normal _Normal_a00c93a4;

extern struct _Normal _Normal_a00c93b4;

extern struct _Normal _Normal_a00c947c;

extern struct _Normal _Normal_a00c9504;

extern struct _Normal _Normal_a00c9664;

extern struct _Normal _Normal_a00c96bc;

extern struct _Normal _Normal_a00c96c4;

extern struct _Normal _Normal_a00c970c;

extern struct _Normal _Normal_a00c9734;

extern struct _Normal _Normal_a00c97b4;

extern struct _Normal _Normal_a00c9834;

extern struct _Normal _Normal_a00c988c;

extern _Normal[2] _Normal_ARRAY_a00c9774;

extern undefined * 32 PTR_a00d0dc8;

extern undefined * 32 PTR_a00d0dcc;

extern undefined * 32 PTR_a00d0dd0;

extern undefined * 32 PTR_a00d0dd4;

extern undefined * 32 PTR_a00d0dd8;

extern undefined * 32 PTR_a00d0ddc;

extern undefined * 32 PTR_a00d0de0;

extern undefined * 32 PTR_a00d0de4;

extern undefined * 32 [17] PTR_ARRAY_a0010000;

extern undefined * 32 [2] PTR_ARRAY_a0010054;

extern undefined * 32 [2] PTR_ARRAY_a0010070;

extern undefined * 32 [9] PTR_ARRAY_a001007c;

extern undefined * 32 [5] PTR_ARRAY_a00100a8;

extern undefined * 32 [2] PTR_ARRAY_a00100c0;

extern undefined * 32 [4] PTR_ARRAY_a00100cc;

extern undefined * 32 [3] PTR_ARRAY_a00100e8;

extern undefined * 32 [2] PTR_ARRAY_a0010108;

extern undefined * 32 [15] PTR_ARRAY_a0010118;

extern undefined * 32 [40] PTR_ARRAY_a0010158;

extern undefined * 32 [3] PTR_ARRAY_a0010200;

extern undefined * 32 [10] PTR_ARRAY_a0010210;

extern undefined * 32 [3] PTR_ARRAY_a0010240;

extern undefined * 32 [3] PTR_ARRAY_a0010250;

extern undefined * 32 [4] PTR_ARRAY_a0010260;

extern undefined * 32 [3] PTR_ARRAY_a0010278;

extern undefined * 32 [4] PTR_ARRAY_a0010288;

extern undefined * 32 [15] PTR_ARRAY_a001029c;

extern undefined * 32 [12] PTR_ARRAY_a00102e0;

extern undefined * 32 [7] PTR_ARRAY_a0010314;

extern undefined * 32 [4] PTR_ARRAY_a00103d0;

extern undefined * 32 [2] PTR_ARRAY_a00103e4;

extern undefined * 32 [4] PTR_ARRAY_a00103f8;

extern undefined * 32 [4] PTR_ARRAY_a001041c;

extern undefined * 32 [2] PTR_ARRAY_a0010454;

extern undefined * 32 [4] PTR_ARRAY_a0010464;

extern undefined * 32 [7] PTR_ARRAY_a00104a0;

extern undefined * 32 [3] PTR_ARRAY_a00104cc;

extern undefined * 32 [6] PTR_ARRAY_a0010500;

extern undefined * 32 [3] PTR_ARRAY_a0010520;

extern undefined * 32 [2] PTR_ARRAY_a0010540;

extern undefined * 32 [2] PTR_ARRAY_a001054c;

extern undefined * 32 [4] PTR_ARRAY_a0010584;

extern undefined * 32 [6] PTR_ARRAY_a00105b8;

extern undefined * 32 [5] PTR_ARRAY_a00105f8;

extern undefined * 32 [2] PTR_ARRAY_a0010610;

extern undefined * 32 [3] PTR_ARRAY_a0010650;

extern undefined * 32 [5] PTR_ARRAY_a0010660;

extern undefined * 32 [2] PTR_ARRAY_a0010678;

extern undefined * 32 [2] PTR_ARRAY_a0010684;

extern undefined * 32 [2] PTR_ARRAY_a00106d0;

extern undefined * 32 [2] PTR_ARRAY_a00107c4;

extern undefined * 32 [3] PTR_ARRAY_a00107e0;

extern undefined * 32 [4] PTR_ARRAY_a0010830;

extern undefined * 32 [3] PTR_ARRAY_a0010858;

extern undefined * 32 [4] PTR_ARRAY_a0010898;

extern undefined * 32 [5] PTR_ARRAY_a00108e8;

extern undefined * 32 [183] PTR_ARRAY_a0010920;

extern undefined * 32 [2] PTR_ARRAY_a0010c00;

extern undefined * 32 [4] PTR_ARRAY_a0010c78;

extern undefined * 32 [2] PTR_ARRAY_a0010cf0;

extern undefined * 32 [2] PTR_ARRAY_a0010e4c;

extern undefined * 32 [2] PTR_ARRAY_a0010ec8;

extern undefined * 32 [2] PTR_ARRAY_a0010f50;

extern undefined * 32 [5] PTR_ARRAY_a0010f88;

extern undefined * 32 [3] PTR_ARRAY_a0010fe8;

extern undefined * 32 [2] PTR_ARRAY_a0010ff8;

extern undefined * 32 [3] PTR_ARRAY_a0011008;

extern undefined * 32 [2] PTR_ARRAY_a0011028;

extern undefined * 32 [4] PTR_ARRAY_a001106c;

extern undefined * 32 [2] PTR_ARRAY_a00110a8;

extern undefined * 32 [2] PTR_ARRAY_a00110ec;

extern undefined * 32 [3] PTR_ARRAY_a001114c;

extern undefined * 32 [7] PTR_ARRAY_a001123c;

extern undefined * 32 [2] PTR_ARRAY_a00112d0;

extern undefined * 32 [14] PTR_ARRAY_a00112e0;

extern undefined * 32 [5] PTR_ARRAY_a001131c;

extern undefined * 32 [2] PTR_ARRAY_a0011338;

extern undefined * 32 [4] PTR_ARRAY_a0011344;

extern undefined * 32 [2] PTR_ARRAY_a0011358;

extern undefined * 32 [2] PTR_ARRAY_a001136c;

extern undefined * 32 [13] PTR_ARRAY_a0011378;

extern undefined * 32 [6] PTR_ARRAY_a00113b8;

extern undefined * 32 [2] PTR_ARRAY_a00113fc;

extern undefined * 32 [2] PTR_ARRAY_a0011420;

extern undefined * 32 [2] PTR_ARRAY_a0011460;

extern undefined * 32 [2] PTR_ARRAY_a001160c;

extern undefined * 32 [2] PTR_ARRAY_a0011668;

extern undefined * 32 [2] PTR_ARRAY_a0011698;

extern undefined * 32 [2] PTR_ARRAY_a00116c0;

extern undefined * 32 [4] PTR_ARRAY_a0011700;

extern undefined * 32 [2] PTR_ARRAY_a0011740;

extern undefined * 32 [2] PTR_ARRAY_a00117dc;

extern undefined * 32 [2] PTR_ARRAY_a00118ac;

extern undefined * 32 [5] PTR_ARRAY_a00118ec;

extern undefined * 32 [2] PTR_ARRAY_a0011958;

extern undefined * 32 [2] PTR_ARRAY_a0011a08;

extern undefined * 32 [3] PTR_ARRAY_a0011a4c;

extern undefined * 32 [2] PTR_ARRAY_a0011ab8;

extern undefined * 32 [4] PTR_ARRAY_a0011ac4;

extern undefined * 32 [2] PTR_ARRAY_a0011ae8;

extern undefined * 32 [2] PTR_ARRAY_a0011b0c;

extern undefined * 32 [2] PTR_ARRAY_a0011b18;

extern undefined * 32 [8] PTR_ARRAY_a0011b24;

extern undefined * 32 [2] PTR_ARRAY_a0011b58;

extern undefined * 32 [2] PTR_ARRAY_a0011b7c;

extern undefined * 32 [2] PTR_ARRAY_a0011b8c;

extern undefined * 32 [36] PTR_ARRAY_a0011b98;

extern undefined * 32 [25] PTR_ARRAY_a0011c2c;

extern undefined * 32 [3] PTR_ARRAY_a0011c94;

extern undefined * 32 [2] PTR_ARRAY_a0011ca4;

extern undefined * 32 [11] PTR_ARRAY_a0011cc4;

extern undefined * 32 [6] PTR_ARRAY_a0011cf4;

extern undefined * 32 [6] PTR_ARRAY_a0011d14;

extern undefined * 32 [3] PTR_ARRAY_a0011d34;

extern undefined * 32 [6] PTR_ARRAY_a0011d48;

extern undefined * 32 [8] PTR_ARRAY_a0011d6c;

extern undefined * 32 [106] PTR_ARRAY_a0011d98;

extern undefined * 32 [3] PTR_ARRAY_a0011f68;

extern undefined * 32 [6] PTR_ARRAY_a00120ac;

extern undefined * 32 [2] PTR_ARRAY_a00120c8;

extern undefined * 32 [12] PTR_ARRAY_a00120d4;

extern undefined * 32 [2] PTR_ARRAY_a0012108;

extern undefined * 32 [3] PTR_ARRAY_a0012114;

extern undefined * 32 [8] PTR_ARRAY_a0012124;

extern undefined * 32 [2] PTR_ARRAY_a0012158;

extern undefined * 32 [3] PTR_ARRAY_a0012164;

extern undefined * 32 [2] PTR_ARRAY_a0012174;

extern undefined * 32 [5] PTR_ARRAY_a0012180;

extern undefined * 32 [2] PTR_ARRAY_a001219c;

extern undefined * 32 [3] PTR_ARRAY_a00121b4;

extern undefined * 32 [3] PTR_ARRAY_a00121c4;

extern undefined * 32 [17] PTR_ARRAY_a00121d4;

extern undefined * 32 [56] PTR_ARRAY_a001221c;

extern undefined * 32 [5] PTR_ARRAY_a001263c;

extern undefined * 32 [16] PTR_ARRAY_a001289c;

extern undefined * 32 [5] PTR_ARRAY_a0012adc;

extern undefined * 32 [2] PTR_ARRAY_a0012e28;

extern undefined * 32 [2] PTR_ARRAY_a0013c30;

extern undefined * 32 [2] PTR_ARRAY_a0013c54;

extern undefined * 32 [3] PTR_ARRAY_a0014750;

extern undefined * 32 [2] PTR_ARRAY_a001480c;

extern undefined * 32 [2] PTR_ARRAY_a00148b4;

extern undefined * 32 [2] PTR_ARRAY_a001495c;

extern undefined * 32 [2] PTR_ARRAY_a0014a04;

extern undefined * 32 [2] PTR_ARRAY_a0014d04;

extern undefined * 32 [2] PTR_ARRAY_a0015120;

extern undefined * 32 [2] PTR_ARRAY_a0015440;

extern undefined * 32 [2] PTR_ARRAY_a00154f8;

extern undefined * 32 [2] PTR_ARRAY_a001550c;

extern undefined * 32 [2] PTR_ARRAY_a0015708;

extern undefined * 32 [2] PTR_ARRAY_a0015a84;

extern undefined * 32 [2] PTR_ARRAY_a0015bc4;

extern undefined * 32 [2] PTR_ARRAY_a0015bec;

extern undefined * 32 [3] PTR_ARRAY_a00163d0;

extern undefined * 32 [2] PTR_ARRAY_a00163e4;

extern undefined * 32 [2] PTR_ARRAY_a00164f4;

extern undefined * 32 [2] PTR_ARRAY_a0016504;

extern undefined * 32 [2] PTR_ARRAY_a0016510;

extern undefined * 32 [2] PTR_ARRAY_a0016544;

extern undefined * 32 [2] PTR_ARRAY_a0016a08;

extern undefined * 32 [2] PTR_ARRAY_a0016b38;

extern undefined * 32 [3] PTR_ARRAY_a0016be8;

extern undefined * 32 [2] PTR_ARRAY_a0016bf8;

extern undefined * 32 [2] PTR_ARRAY_a0016d4c;

extern undefined * 32 [2] PTR_ARRAY_a0016dac;

extern undefined * 32 [5] PTR_ARRAY_a0016db8;

extern undefined * 32 [2] PTR_ARRAY_a0016e60;

extern undefined * 32 [4] PTR_ARRAY_a0016ef0;

extern undefined * 32 [2] PTR_ARRAY_a0016f2c;

extern undefined * 32 [3] PTR_ARRAY_a0016f58;

extern undefined * 32 [2] PTR_ARRAY_a0017180;

extern undefined * 32 [2] PTR_ARRAY_a00172b4;

extern undefined * 32 [2] PTR_ARRAY_a00173b4;

extern undefined * 32 [2] PTR_ARRAY_a00173cc;

extern undefined * 32 [2] PTR_ARRAY_a00174f0;

extern undefined * 32 [2] PTR_ARRAY_a00176c8;

extern undefined * 32 [2] PTR_ARRAY_a0018358;

extern undefined * 32 [2] PTR_ARRAY_a0018374;

extern undefined * 32 [3] PTR_ARRAY_a0018570;

extern undefined * 32 [2] PTR_ARRAY_a00185a4;

extern undefined * 32 [2] PTR_ARRAY_a0018960;

extern undefined * 32 [2] PTR_ARRAY_a00189c8;

extern undefined * 32 [2] PTR_ARRAY_a0018fb0;

extern undefined * 32 [2] PTR_ARRAY_a00193b4;

extern undefined * 32 [2] PTR_ARRAY_a00194d4;

extern undefined * 32 [2] PTR_ARRAY_a0019654;

extern undefined * 32 [4] PTR_ARRAY_a00196cc;

extern undefined * 32 [2] PTR_ARRAY_a0019728;

extern undefined * 32 [2] PTR_ARRAY_a0019748;

extern undefined * 32 [4] PTR_ARRAY_a0019758;

extern undefined * 32 [4] PTR_ARRAY_a00197bc;

extern undefined * 32 [2] PTR_ARRAY_a00197fc;

extern undefined * 32 [3] PTR_ARRAY_a0019828;

extern undefined * 32 [2] PTR_ARRAY_a0019864;

extern undefined * 32 [4] PTR_ARRAY_a0019878;

extern undefined * 32 [4] PTR_ARRAY_a00198b0;

extern undefined * 32 [2] PTR_ARRAY_a00198dc;

extern undefined * 32 [2] PTR_ARRAY_a0019aa8;

extern undefined * 32 [2] PTR_ARRAY_a0019adc;

extern undefined * 32 [2] PTR_ARRAY_a0019ba4;

extern undefined * 32 [4] PTR_ARRAY_a0019d54;

extern undefined * 32 [2] PTR_ARRAY_a0019e74;

extern undefined * 32 [2] PTR_ARRAY_a0019e80;

extern undefined * 32 [2] PTR_ARRAY_a001a1c8;

extern undefined * 32 [2] PTR_ARRAY_a001a23c;

extern undefined * 32 [3] PTR_ARRAY_a001a294;

extern undefined * 32 [3] PTR_ARRAY_a001a2d4;

extern undefined * 32 [3] PTR_ARRAY_a001a45c;

extern undefined * 32 [2] PTR_ARRAY_a001a6b0;

extern undefined * 32 [2] PTR_ARRAY_a001a6d0;

extern undefined * 32 [2] PTR_ARRAY_a001a6f0;

extern undefined * 32 [2] PTR_ARRAY_a001a710;

extern undefined * 32 [2] PTR_ARRAY_a001aa88;

extern undefined * 32 [2] PTR_ARRAY_a001af84;

extern undefined * 32 [3] PTR_ARRAY_a001b024;

extern undefined * 32 [2] PTR_ARRAY_a001b05c;

extern undefined * 32 [2] PTR_ARRAY_a001b374;

extern undefined * 32 [2] PTR_ARRAY_a001b3a0;

extern undefined * 32 [2] PTR_ARRAY_a001b468;

extern undefined * 32 [2] PTR_ARRAY_a001b49c;

extern undefined * 32 [2] PTR_ARRAY_a001b4c0;

extern undefined * 32 [2] PTR_ARRAY_a001b794;

extern undefined * 32 [3] PTR_ARRAY_a001b7b8;

extern undefined * 32 [2] PTR_ARRAY_a001ba94;

extern undefined * 32 [2] PTR_ARRAY_a001bb60;

extern undefined * 32 [2] PTR_ARRAY_a001bb80;

extern undefined * 32 [2] PTR_ARRAY_a001bc18;

extern undefined * 32 [2] PTR_ARRAY_a001bc3c;

extern undefined * 32 [2] PTR_ARRAY_a001bcf8;

extern undefined * 32 [2] PTR_ARRAY_a001bd38;

extern undefined * 32 [2] PTR_ARRAY_a001bdfc;

extern undefined * 32 [2] PTR_ARRAY_a001c3d8;

extern undefined * 32 [2] PTR_ARRAY_a001c3fc;

extern undefined * 32 [2] PTR_ARRAY_a001c4b0;

extern undefined * 32 [2] PTR_ARRAY_a001c510;

extern undefined * 32 [2] PTR_ARRAY_a001c548;

extern undefined * 32 [2] PTR_ARRAY_a001c76c;

extern undefined * 32 [3] PTR_ARRAY_a001c7b4;

extern undefined * 32 [2] PTR_ARRAY_a001c874;

extern undefined * 32 [3] PTR_ARRAY_a001ca94;

extern undefined * 32 [3] PTR_ARRAY_a001cb14;

extern undefined * 32 [2] PTR_ARRAY_a001cb4c;

extern undefined * 32 [2] PTR_ARRAY_a001cd2c;

extern undefined * 32 [3] PTR_ARRAY_a001cd54;

extern undefined * 32 [2] PTR_ARRAY_a001cd98;

extern undefined * 32 [2] PTR_ARRAY_a001cdcc;

extern undefined * 32 [2] PTR_ARRAY_a001ce14;

extern undefined * 32 [2] PTR_ARRAY_a001ce28;

extern undefined * 32 [2] PTR_ARRAY_a001d0e0;

extern undefined * 32 [2] PTR_ARRAY_a001d128;

extern undefined * 32 [2] PTR_ARRAY_a001d150;

extern undefined * 32 [2] PTR_ARRAY_a001d2d0;

extern undefined * 32 [2] PTR_ARRAY_a001d394;

extern undefined * 32 [3] PTR_ARRAY_a001d584;

extern undefined * 32 [2] PTR_ARRAY_a001d69c;

extern undefined * 32 [2] PTR_ARRAY_a001d6ec;

extern undefined * 32 [2] PTR_ARRAY_a001df44;

extern undefined * 32 [2] PTR_ARRAY_a001e5dc;

extern undefined * 32 [2] PTR_ARRAY_a001e5ec;

extern undefined * 32 [2] PTR_ARRAY_a001e764;

extern undefined * 32 [2] PTR_ARRAY_a001e7ac;

extern undefined * 32 [2] PTR_ARRAY_a001e7d8;

extern undefined * 32 [3] PTR_ARRAY_a001e904;

extern undefined * 32 [2] PTR_ARRAY_a001e928;

extern undefined * 32 [2] PTR_ARRAY_a001e948;

extern undefined * 32 [4] PTR_ARRAY_a001eca4;

extern undefined * 32 [2] PTR_ARRAY_a001ecb8;

extern undefined * 32 [2] PTR_ARRAY_a001ece8;

extern undefined * 32 [2] PTR_ARRAY_a001ed08;

extern undefined * 32 [2] PTR_ARRAY_a001ed30;

extern undefined * 32 [5] PTR_ARRAY_a001eef4;

extern undefined * 32 [8] PTR_ARRAY_a001ef78;

extern undefined * 32 [8] PTR_ARRAY_a001f004;

extern undefined * 32 [2] PTR_ARRAY_a001f42c;

extern undefined * 32 [2] PTR_ARRAY_a001f460;

extern undefined * 32 [2] PTR_ARRAY_a001f47c;

extern undefined * 32 [2] PTR_ARRAY_a001f49c;

extern undefined * 32 [2] PTR_ARRAY_a001f4d0;

extern undefined * 32 [2] PTR_ARRAY_a001f4ec;

extern undefined * 32 [2] PTR_ARRAY_a001f50c;

extern undefined * 32 [2] PTR_ARRAY_a001f540;

extern undefined * 32 [2] PTR_ARRAY_a001f5dc;

extern undefined * 32 [2] PTR_ARRAY_a001f670;

extern undefined * 32 [2] PTR_ARRAY_a001f7ac;

extern undefined * 32 [2] PTR_ARRAY_a001f7c4;

extern undefined * 32 [2] PTR_ARRAY_a001f7d4;

extern undefined * 32 [2] PTR_ARRAY_a001f7f4;

extern undefined * 32 [3] PTR_ARRAY_a002012c;

extern undefined * 32 [3] PTR_ARRAY_a002014c;

extern undefined * 32 [2] PTR_ARRAY_a00201c0;

extern undefined * 32 [2] PTR_ARRAY_a0020218;

extern undefined * 32 [2] PTR_ARRAY_a002049c;

extern undefined * 32 [2] PTR_ARRAY_a00204f8;

extern undefined * 32 [2] PTR_ARRAY_a0020554;

extern undefined * 32 [2] PTR_ARRAY_a00205f0;

extern undefined * 32 [2] PTR_ARRAY_a0020608;

extern undefined * 32 [2] PTR_ARRAY_a002079c;

extern undefined * 32 [2] PTR_ARRAY_a00207d0;

extern undefined * 32 [2] PTR_ARRAY_a0020814;

extern undefined * 32 [2] PTR_ARRAY_a0020e10;

extern undefined * 32 [2] PTR_ARRAY_a0020ea4;

extern undefined * 32 [2] PTR_ARRAY_a0020ecc;

extern undefined * 32 [2] PTR_ARRAY_a0020ef4;

extern undefined * 32 [2] PTR_ARRAY_a0021030;

extern undefined * 32 [2] PTR_ARRAY_a0021054;

extern undefined * 32 [2] PTR_ARRAY_a0021078;

extern undefined * 32 [2] PTR_ARRAY_a0021110;

extern undefined * 32 [2] PTR_ARRAY_a0021120;

extern undefined * 32 [2] PTR_ARRAY_a0021138;

extern undefined * 32 [2] PTR_ARRAY_a0021148;

extern undefined * 32 [2] PTR_ARRAY_a0021164;

extern undefined * 32 [2] PTR_ARRAY_a0021374;

extern undefined * 32 [2] PTR_ARRAY_a0021398;

extern undefined * 32 [2] PTR_ARRAY_a00213c0;

extern undefined * 32 [4] PTR_ARRAY_a0021774;

extern undefined * 32 [3] PTR_ARRAY_a00217a4;

extern undefined * 32 [2] PTR_ARRAY_a002185c;

extern undefined * 32 [2] PTR_ARRAY_a0021d58;

extern undefined * 32 [2] PTR_ARRAY_a0021e98;

extern undefined * 32 [2] PTR_ARRAY_a0021eb4;

extern undefined * 32 [2] PTR_ARRAY_a0021ed0;

extern undefined * 32 [2] PTR_ARRAY_a0021eec;

extern undefined * 32 [2] PTR_ARRAY_a0021f08;

extern undefined * 32 [2] PTR_ARRAY_a0021f2c;

extern undefined * 32 [2] PTR_ARRAY_a0022040;

extern undefined * 32 [3] PTR_ARRAY_a00227c8;

extern undefined * 32 [2] PTR_ARRAY_a00227e4;

extern undefined * 32 [2] PTR_ARRAY_a0022810;

extern undefined * 32 [2] PTR_ARRAY_a0022a2c;

extern undefined * 32 [2] PTR_ARRAY_a0022abc;

extern undefined * 32 [2] PTR_ARRAY_a0022af8;

extern undefined * 32 [2] PTR_ARRAY_a0022b20;

extern undefined * 32 [2] PTR_ARRAY_a0022b48;

extern undefined * 32 [3] PTR_ARRAY_a0022b88;

extern undefined * 32 [2] PTR_ARRAY_a0022ba4;

extern undefined * 32 [2] PTR_ARRAY_a0022bc0;

extern undefined * 32 [2] PTR_ARRAY_a0022de8;

extern undefined * 32 [2] PTR_ARRAY_a0023058;

extern undefined * 32 [2] PTR_ARRAY_a002308c;

extern undefined * 32 [2] PTR_ARRAY_a0023198;

extern undefined * 32 [2] PTR_ARRAY_a002321c;

extern undefined * 32 [2] PTR_ARRAY_a0023e1c;

extern undefined * 32 [2] PTR_ARRAY_a0023f24;

extern undefined * 32 [2] PTR_ARRAY_a0023f3c;

extern undefined * 32 [2] PTR_ARRAY_a0023f4c;

extern undefined * 32 [2] PTR_ARRAY_a0023f6c;

extern undefined * 32 [2] PTR_ARRAY_a0023f9c;

extern undefined * 32 [2] PTR_ARRAY_a0024b4c;

extern undefined * 32 [2] PTR_ARRAY_a0024e34;

extern undefined * 32 [2] PTR_ARRAY_a0024e8c;

extern undefined * 32 [2] PTR_ARRAY_a0024f8c;

extern undefined * 32 [2] PTR_ARRAY_a00250f4;

extern undefined * 32 [2] PTR_ARRAY_a0025258;

extern undefined * 32 [2] PTR_ARRAY_a00252a4;

extern undefined * 32 [2] PTR_ARRAY_a00254fc;

extern undefined * 32 [3] PTR_ARRAY_a00256b0;

extern undefined * 32 [2] PTR_ARRAY_a00256cc;

extern undefined * 32 [3] PTR_ARRAY_a00257b4;

extern undefined * 32 [3] PTR_ARRAY_a0025a6c;

extern undefined * 32 [6] PTR_ARRAY_a0025c6c;

extern undefined * 32 [3] PTR_ARRAY_a0025c94;

extern undefined * 32 [2] PTR_ARRAY_a00261a8;

extern undefined * 32 [2] PTR_ARRAY_a00261e4;

extern undefined * 32 [2] PTR_ARRAY_a0026208;

extern undefined * 32 [2] PTR_ARRAY_a0026370;

extern undefined * 32 [2] PTR_ARRAY_a0026414;

extern undefined * 32 [2] PTR_ARRAY_a002643c;

extern undefined * 32 [2] PTR_ARRAY_a00264e0;

extern undefined * 32 [2] PTR_ARRAY_a0026508;

extern undefined * 32 [2] PTR_ARRAY_a00265ac;

extern undefined * 32 [2] PTR_ARRAY_a0027080;

extern undefined * 32 [4] PTR_ARRAY_a002708c;

extern undefined * 32 [2] PTR_ARRAY_a0027204;

extern undefined * 32 [2] PTR_ARRAY_a0027814;

extern undefined * 32 [4] PTR_ARRAY_a0027820;

extern undefined * 32 [2] PTR_ARRAY_a00279b0;

extern undefined * 32 [2] PTR_ARRAY_a0027a68;

extern undefined * 32 [2] PTR_ARRAY_a0027b74;

extern undefined * 32 [3] PTR_ARRAY_a00280b0;

extern undefined * 32 [3] PTR_ARRAY_a00284d8;

extern undefined * 32 [3] PTR_ARRAY_a0028500;

extern undefined * 32 [2] PTR_ARRAY_a0028510;

extern undefined * 32 [3] PTR_ARRAY_a00285e0;

extern undefined * 32 [3] PTR_ARRAY_a0028a1c;

extern undefined * 32 [3] PTR_ARRAY_a0028f08;

extern undefined * 32 [3] PTR_ARRAY_a0029408;

extern undefined * 32 [3] PTR_ARRAY_a00298f8;

extern undefined * 32 [3] PTR_ARRAY_a0029de4;

extern undefined * 32 [3] PTR_ARRAY_a002a2dc;

extern undefined * 32 [2] PTR_ARRAY_a002a888;

extern undefined * 32 [2] PTR_ARRAY_a002aae4;

extern undefined * 32 [2] PTR_ARRAY_a002ab24;

extern undefined * 32 [2] PTR_ARRAY_a002ab5c;

extern undefined * 32 [2] PTR_ARRAY_a002abd8;

extern undefined * 32 [2] PTR_ARRAY_a002b118;

extern undefined * 32 [2] PTR_ARRAY_a002b4b8;

extern undefined * 32 [2] PTR_ARRAY_a002b5f0;

extern undefined * 32 [2] PTR_ARRAY_a002b620;

extern undefined * 32 [2] PTR_ARRAY_a002b6d8;

extern undefined * 32 [2] PTR_ARRAY_a002b774;

extern undefined * 32 [2] PTR_ARRAY_a002bbf0;

extern undefined * 32 [2] PTR_ARRAY_a002bbfc;

extern undefined * 32 [2] PTR_ARRAY_a002bdb0;

extern undefined * 32 [3] PTR_ARRAY_a002c140;

extern undefined * 32 [4] PTR_ARRAY_a002c1ec;

extern undefined * 32 [4] PTR_ARRAY_a002c220;

extern undefined * 32 [2] PTR_ARRAY_a002c368;

extern undefined * 32 [2] PTR_ARRAY_a002c560;

extern undefined * 32 [4] PTR_ARRAY_a002c5a0;

extern undefined * 32 [3] PTR_ARRAY_a002c5bc;

extern undefined * 32 [2] PTR_ARRAY_a002c5d4;

extern undefined * 32 [2] PTR_ARRAY_a002c610;

extern undefined * 32 [2] PTR_ARRAY_a002c638;

extern undefined * 32 [2] PTR_ARRAY_a002cb9c;

extern undefined * 32 [2] PTR_ARRAY_a002cbcc;

extern undefined * 32 [3] PTR_ARRAY_a002d1c8;

extern undefined * 32 [2] PTR_ARRAY_a002d1fc;

extern undefined * 32 [4] PTR_ARRAY_a002d4dc;

extern undefined * 32 [3] PTR_ARRAY_a002d6bc;

extern undefined * 32 [3] PTR_ARRAY_a002d9c8;

extern undefined * 32 [2] PTR_ARRAY_a002d9f8;

extern undefined * 32 [2] PTR_ARRAY_a002da30;

extern undefined * 32 [2] PTR_ARRAY_a002da44;

extern undefined * 32 [2] PTR_ARRAY_a002dd40;

extern undefined * 32 [2] PTR_ARRAY_a002e214;

extern undefined * 32 [2] PTR_ARRAY_a002e250;

extern undefined * 32 [2] PTR_ARRAY_a002e27c;

extern undefined * 32 [2] PTR_ARRAY_a002e2b8;

extern undefined * 32 [2] PTR_ARRAY_a002e3d4;

extern undefined * 32 [2] PTR_ARRAY_a002e444;

extern undefined * 32 [3] PTR_ARRAY_a002e8dc;

extern undefined * 32 [2] PTR_ARRAY_a002ffc8;

extern undefined * 32 [2] PTR_ARRAY_a0030eb0;

extern undefined * 32 [3] PTR_ARRAY_a0031f3c;

extern undefined * 32 [3] PTR_ARRAY_a0031f5c;

extern undefined * 32 [2] PTR_ARRAY_a0032790;

extern undefined * 32 [2] PTR_ARRAY_a0032818;

extern undefined * 32 [2] PTR_ARRAY_a0032870;

extern undefined * 32 [3] PTR_ARRAY_a0032b80;

extern undefined * 32 [2] PTR_ARRAY_a00333d4;

extern undefined * 32 [2] PTR_ARRAY_a0033558;

extern undefined * 32 [2] PTR_ARRAY_a00339e8;

extern undefined * 32 [2] PTR_ARRAY_a0033d48;

extern undefined * 32 [2] PTR_ARRAY_a0034838;

extern undefined * 32 [2] PTR_ARRAY_a0034e54;

extern undefined * 32 [3] PTR_ARRAY_a0035594;

extern undefined * 32 [2] PTR_ARRAY_a00355cc;

extern undefined * 32 [2] PTR_ARRAY_a00355e4;

extern undefined * 32 [2] PTR_ARRAY_a0035770;

extern undefined * 32 [2] PTR_ARRAY_a0035784;

extern undefined * 32 [3] PTR_ARRAY_a00357c4;

extern undefined * 32 [2] PTR_ARRAY_a00357e8;

extern undefined * 32 [2] PTR_ARRAY_a0035808;

extern undefined * 32 [3] PTR_ARRAY_a0035864;

extern undefined * 32 [2] PTR_ARRAY_a0035880;

extern undefined * 32 [2] PTR_ARRAY_a0035d08;

extern undefined * 32 [2] PTR_ARRAY_a0035ea8;

extern undefined * 32 [2] PTR_ARRAY_a0035ecc;

extern undefined * 32 [2] PTR_ARRAY_a0035f94;

extern undefined * 32 [2] PTR_ARRAY_a0035fd0;

extern undefined * 32 [2] PTR_ARRAY_a003600c;

extern undefined * 32 [2] PTR_ARRAY_a00362e8;

extern undefined * 32 [2] PTR_ARRAY_a0036304;

extern undefined * 32 [2] PTR_ARRAY_a0036320;

extern undefined * 32 [2] PTR_ARRAY_a00366dc;

extern undefined * 32 [2] PTR_ARRAY_a0036700;

extern undefined * 32 [2] PTR_ARRAY_a0036df8;

extern undefined * 32 [3] PTR_ARRAY_a0036e1c;

extern undefined * 32 [3] PTR_ARRAY_a0036e44;

extern undefined * 32 [2] PTR_ARRAY_a0037df4;

extern undefined * 32 [3] PTR_ARRAY_a00380f0;

extern undefined * 32 [2] PTR_ARRAY_a0039b54;

extern undefined * 32 [2] PTR_ARRAY_a0039b98;

extern undefined * 32 [2] PTR_ARRAY_a0039c70;

extern undefined * 32 [2] PTR_ARRAY_a0039cc4;

extern undefined * 32 [3] PTR_ARRAY_a0039db0;

extern undefined * 32 [2] PTR_ARRAY_a0039e58;

extern undefined * 32 [2] PTR_ARRAY_a0039fb8;

extern undefined * 32 [2] PTR_ARRAY_a003a0f4;

extern undefined * 32 [2] PTR_ARRAY_a003a10c;

extern undefined * 32 [2] PTR_ARRAY_a003a3a8;

extern undefined * 32 [4] PTR_ARRAY_a003a4b0;

extern undefined * 32 [2] PTR_ARRAY_a003a5e8;

extern undefined * 32 [2] PTR_ARRAY_a003a5f8;

extern undefined * 32 [2] PTR_ARRAY_a003a630;

extern undefined * 32 [2] PTR_ARRAY_a003a6c8;

extern undefined * 32 [2] PTR_ARRAY_a003a758;

extern undefined * 32 [2] PTR_ARRAY_a003a778;

extern undefined * 32 [2] PTR_ARRAY_a003a7b4;

extern undefined * 32 [2] PTR_ARRAY_a003a988;

extern undefined * 32 [2] PTR_ARRAY_a003a9a4;

extern undefined * 32 [2] PTR_ARRAY_a003a9c0;

extern undefined * 32 [2] PTR_ARRAY_a003a9dc;

extern undefined * 32 [2] PTR_ARRAY_a003a9f8;

extern undefined * 32 [2] PTR_ARRAY_a003aa14;

extern undefined * 32 [2] PTR_ARRAY_a003aa30;

extern undefined * 32 [2] PTR_ARRAY_a003aa4c;

extern undefined * 32 [2] PTR_ARRAY_a003aa64;

extern undefined * 32 [2] PTR_ARRAY_a003b638;

extern undefined * 32 [2] PTR_ARRAY_a003b750;

extern undefined * 32 [2] PTR_ARRAY_a003b7b4;

extern undefined * 32 [2] PTR_ARRAY_a003b8cc;

extern undefined * 32 [2] PTR_ARRAY_a003be98;

extern undefined * 32 [4] PTR_ARRAY_a003ca38;

extern undefined * 32 [4] PTR_ARRAY_a003ca58;

extern undefined * 32 [3] PTR_ARRAY_a003ca84;

extern undefined * 32 [3] PTR_ARRAY_a003cc54;

extern undefined * 32 [2] PTR_ARRAY_a003cc6c;

extern undefined * 32 [3] PTR_ARRAY_a003cc78;

extern undefined * 32 [2] PTR_ARRAY_a003cc90;

extern undefined * 32 [3] PTR_ARRAY_a003cca4;

extern undefined * 32 [3] PTR_ARRAY_a003cdd4;

extern undefined * 32 [2] PTR_ARRAY_a003d540;

extern undefined * 32 [2] PTR_ARRAY_a003d598;

extern undefined * 32 [2] PTR_ARRAY_a003d5b0;

extern undefined * 32 [2] PTR_ARRAY_a003d5f8;

extern undefined * 32 [2] PTR_ARRAY_a003d948;

extern undefined * 32 [2] PTR_ARRAY_a003d990;

extern undefined * 32 [2] PTR_ARRAY_a003da7c;

extern undefined * 32 [2] PTR_ARRAY_a003e108;

extern undefined * 32 [2] PTR_ARRAY_a003e2bc;

extern undefined * 32 [2] PTR_ARRAY_a003e358;

extern undefined * 32 [2] PTR_ARRAY_a003e45c;

extern undefined * 32 [2] PTR_ARRAY_a003f8b0;

extern undefined * 32 [2] PTR_ARRAY_a003fe94;

extern undefined * 32 [2] PTR_ARRAY_a0040514;

extern undefined * 32 [2] PTR_ARRAY_a00406f0;

extern undefined * 32 [2] PTR_ARRAY_a0040738;

extern undefined * 32 [2] PTR_ARRAY_a0040750;

extern undefined * 32 [2] PTR_ARRAY_a0040918;

extern undefined * 32 [2] PTR_ARRAY_a0040960;

extern undefined * 32 [2] PTR_ARRAY_a0040978;

extern undefined * 32 [2] PTR_ARRAY_a0040db4;

extern undefined * 32 [2] PTR_ARRAY_a00414dc;

extern undefined * 32 [2] PTR_ARRAY_a0041600;

extern undefined * 32 [3] PTR_ARRAY_a004161c;

extern undefined * 32 [2] PTR_ARRAY_a004194c;

extern undefined * 32 [2] PTR_ARRAY_a0042388;

extern undefined * 32 [2] PTR_ARRAY_a00424b4;

extern undefined * 32 [3] PTR_ARRAY_a00424d0;

extern undefined * 32 [2] PTR_ARRAY_a00427e8;

extern undefined * 32 [3] PTR_ARRAY_a0042804;

extern undefined * 32 [2] PTR_ARRAY_a0042df4;

extern undefined * 32 [2] PTR_ARRAY_a0042e40;

extern undefined * 32 [2] PTR_ARRAY_a0042e8c;

extern undefined * 32 [2] PTR_ARRAY_a0042e98;

extern undefined * 32 [2] PTR_ARRAY_a0042edc;

extern undefined * 32 [2] PTR_ARRAY_a0042ee8;

extern undefined * 32 [2] PTR_ARRAY_a0042f34;

extern undefined * 32 [2] PTR_ARRAY_a0042f40;

extern undefined * 32 [2] PTR_ARRAY_a004307c;

extern undefined * 32 [2] PTR_ARRAY_a00431f8;

extern undefined * 32 [2] PTR_ARRAY_a0043268;

extern undefined * 32 [2] PTR_ARRAY_a0043694;

extern undefined * 32 [2] PTR_ARRAY_a00436b0;

extern undefined * 32 [2] PTR_ARRAY_a00436d0;

extern undefined * 32 [2] PTR_ARRAY_a00436f4;

extern undefined * 32 [3] PTR_ARRAY_a004371c;

extern undefined * 32 [2] PTR_ARRAY_a0043734;

extern undefined * 32 [2] PTR_ARRAY_a004375c;

extern undefined * 32 [2] PTR_ARRAY_a0043774;

extern undefined * 32 [2] PTR_ARRAY_a0043794;

extern undefined * 32 [2] PTR_ARRAY_a00437cc;

extern undefined * 32 [2] PTR_ARRAY_a00437e0;

extern undefined * 32 [2] PTR_ARRAY_a0043804;

extern undefined * 32 [2] PTR_ARRAY_a0043818;

extern undefined * 32 [2] PTR_ARRAY_a004383c;

extern undefined * 32 [2] PTR_ARRAY_a0043850;

extern undefined * 32 [3] PTR_ARRAY_a0043c48;

extern undefined * 32 [3] PTR_ARRAY_a0043d20;

extern undefined * 32 [2] PTR_ARRAY_a0043d3c;

extern undefined * 32 [2] PTR_ARRAY_a0043d8c;

extern undefined * 32 [2] PTR_ARRAY_a0043dcc;

extern undefined * 32 [2] PTR_ARRAY_a0043fa8;

extern undefined * 32 [2] PTR_ARRAY_a0043fbc;

extern undefined * 32 [2] PTR_ARRAY_a00440ec;

extern undefined * 32 [2] PTR_ARRAY_a004411c;

extern undefined * 32 [2] PTR_ARRAY_a004414c;

extern undefined * 32 [2] PTR_ARRAY_a004417c;

extern undefined * 32 [3] PTR_ARRAY_a00442b8;

extern undefined * 32 [3] PTR_ARRAY_a00442d0;

extern undefined * 32 [2] PTR_ARRAY_a00442e0;

extern undefined * 32 [2] PTR_ARRAY_a00442ec;

extern undefined * 32 [2] PTR_ARRAY_a0044304;

extern undefined * 32 [2] PTR_ARRAY_a0044338;

extern undefined * 32 [2] PTR_ARRAY_a0044344;

extern undefined * 32 [2] PTR_ARRAY_a004438c;

extern undefined * 32 [2] PTR_ARRAY_a0044398;

extern undefined * 32 [2] PTR_ARRAY_a00443c8;

extern undefined * 32 [2] PTR_ARRAY_a00444b0;

extern undefined * 32 [5] PTR_ARRAY_a0044504;

extern undefined * 32 [2] PTR_ARRAY_a0044520;

extern undefined * 32 [3] PTR_ARRAY_a00447e0;

extern undefined * 32 [2] PTR_ARRAY_a004485c;

extern undefined * 32 [2] PTR_ARRAY_a004488c;

extern undefined * 32 [2] PTR_ARRAY_a00448bc;

extern undefined * 32 [3] PTR_ARRAY_a0044930;

extern undefined * 32 [2] PTR_ARRAY_a004494c;

extern undefined * 32 [2] PTR_ARRAY_a0044998;

extern undefined * 32 [2] PTR_ARRAY_a0044c5c;

extern undefined * 32 [2] PTR_ARRAY_a0044c90;

extern undefined * 32 [2] PTR_ARRAY_a00451a4;

extern undefined * 32 [2] PTR_ARRAY_a004555c;

extern undefined * 32 [2] PTR_ARRAY_a0045578;

extern undefined * 32 [2] PTR_ARRAY_a0045594;

extern undefined * 32 [2] PTR_ARRAY_a00455b0;

extern undefined * 32 [2] PTR_ARRAY_a00455cc;

extern undefined * 32 [2] PTR_ARRAY_a00455f8;

extern undefined * 32 [2] PTR_ARRAY_a0046020;

extern undefined * 32 [2] PTR_ARRAY_a0046800;

extern undefined * 32 [2] PTR_ARRAY_a0046974;

extern undefined * 32 [2] PTR_ARRAY_a0046ba4;

extern undefined * 32 [2] PTR_ARRAY_a0046edc;

extern undefined * 32 [2] PTR_ARRAY_a0046ef0;

extern undefined * 32 [2] PTR_ARRAY_a0047080;

extern undefined * 32 [2] PTR_ARRAY_a00470c0;

extern undefined * 32 [2] PTR_ARRAY_a00470d4;

extern undefined * 32 [3] PTR_ARRAY_a00470ec;

extern undefined * 32 [2] PTR_ARRAY_a0047100;

extern undefined * 32 [2] PTR_ARRAY_a004714c;

extern undefined * 32 [2] PTR_ARRAY_a0047158;

extern undefined * 32 [2] PTR_ARRAY_a0047410;

extern undefined * 32 [2] PTR_ARRAY_a0047488;

extern undefined * 32 [3] PTR_ARRAY_a00474b0;

extern undefined * 32 [2] PTR_ARRAY_a00474f8;

extern undefined * 32 [2] PTR_ARRAY_a0047520;

extern undefined * 32 [2] PTR_ARRAY_a0047568;

extern undefined * 32 [2] PTR_ARRAY_a004784c;

extern undefined * 32 [3] PTR_ARRAY_a004793c;

extern undefined * 32 [2] PTR_ARRAY_a00479a0;

extern undefined * 32 [3] PTR_ARRAY_a00479ec;

extern undefined * 32 [3] PTR_ARRAY_a0047a00;

extern undefined * 32 [3] PTR_ARRAY_a0047a64;

extern undefined * 32 [2] PTR_ARRAY_a0047aa8;

extern undefined * 32 [2] PTR_ARRAY_a0047b5c;

extern undefined * 32 [2] PTR_ARRAY_a0047c40;

extern undefined * 32 [2] PTR_ARRAY_a0047c90;

extern undefined * 32 [2] PTR_ARRAY_a0047f08;

extern undefined * 32 [2] PTR_ARRAY_a0047f30;

extern undefined * 32 [4] PTR_ARRAY_a0047fb8;

extern undefined * 32 [3] PTR_ARRAY_a00481a4;

extern undefined * 32 [2] PTR_ARRAY_a0048760;

extern undefined * 32 [2] PTR_ARRAY_a0048be8;

extern undefined * 32 [3] PTR_ARRAY_a0048bf8;

extern undefined * 32 [2] PTR_ARRAY_a0048c14;

extern undefined * 32 [2] PTR_ARRAY_a0048e58;

extern undefined * 32 [2] PTR_ARRAY_a0049090;

extern undefined * 32 [2] PTR_ARRAY_a00492cc;

extern undefined * 32 [2] PTR_ARRAY_a0049368;

extern undefined * 32 [2] PTR_ARRAY_a004957c;

extern undefined * 32 [3] PTR_ARRAY_a00495e0;

extern undefined * 32 [2] PTR_ARRAY_a004965c;

extern undefined * 32 [2] PTR_ARRAY_a00496e4;

extern undefined * 32 [2] PTR_ARRAY_a0049704;

extern undefined * 32 [2] PTR_ARRAY_a004991c;

extern undefined * 32 [2] PTR_ARRAY_a00499ec;

extern undefined * 32 [2] PTR_ARRAY_a0049a20;

extern undefined * 32 [2] PTR_ARRAY_a0049a68;

extern undefined * 32 [2] PTR_ARRAY_a0049a9c;

extern undefined * 32 [2] PTR_ARRAY_a0049cc8;

extern undefined * 32 [2] PTR_ARRAY_a004a1b8;

extern undefined * 32 [2] PTR_ARRAY_a004a1ec;

extern undefined * 32 [2] PTR_ARRAY_a004a220;

extern undefined * 32 [2] PTR_ARRAY_a004a26c;

extern undefined * 32 [2] PTR_ARRAY_a004a2a0;

extern undefined * 32 [2] PTR_ARRAY_a004a2d4;

extern undefined * 32 [2] PTR_ARRAY_a004a648;

extern undefined * 32 [2] PTR_ARRAY_a004a93c;

extern undefined * 32 [2] PTR_ARRAY_a004a958;

extern undefined * 32 [2] PTR_ARRAY_a004ad24;

extern undefined * 32 [2] PTR_ARRAY_a004adac;

extern undefined * 32 [3] PTR_ARRAY_a004aedc;

extern undefined * 32 [2] PTR_ARRAY_a004aef8;

extern undefined * 32 [2] PTR_ARRAY_a004b09c;

extern undefined * 32 [2] PTR_ARRAY_a004b1a0;

extern undefined * 32 [2] PTR_ARRAY_a004b1b4;

extern undefined * 32 [2] PTR_ARRAY_a004b340;

extern undefined * 32 [2] PTR_ARRAY_a004b354;

extern undefined * 32 [2] PTR_ARRAY_a004b37c;

extern undefined * 32 [2] PTR_ARRAY_a004b498;

extern undefined * 32 [2] PTR_ARRAY_a004b4b8;

extern undefined * 32 [2] PTR_ARRAY_a004b560;

extern undefined * 32 [3] PTR_ARRAY_a004b698;

extern undefined * 32 [2] PTR_ARRAY_a004b6d8;

extern undefined * 32 [2] PTR_ARRAY_a004b718;

extern undefined * 32 [2] PTR_ARRAY_a004b740;

extern undefined * 32 [3] PTR_ARRAY_a004b774;

extern undefined * 32 [2] PTR_ARRAY_a004b790;

extern undefined * 32 [2] PTR_ARRAY_a004ca94;

extern undefined * 32 [2] PTR_ARRAY_a004caa8;

extern undefined * 32 [2] PTR_ARRAY_a004cabc;

extern undefined * 32 [2] PTR_ARRAY_a004d4f8;

extern undefined * 32 [3] PTR_ARRAY_a004d524;

extern undefined * 32 [2] PTR_ARRAY_a004da24;

extern undefined * 32 [2] PTR_ARRAY_a004ddb4;

extern undefined * 32 [2] PTR_ARRAY_a004df00;

extern undefined * 32 [2] PTR_ARRAY_a004df5c;

extern undefined * 32 [2] PTR_ARRAY_a004e350;

extern undefined * 32 [2] PTR_ARRAY_a004e370;

extern undefined * 32 [2] PTR_ARRAY_a004e728;

extern undefined * 32 [2] PTR_ARRAY_a004ecbc;

extern undefined * 32 [2] PTR_ARRAY_a004ed10;

extern undefined * 32 [2] PTR_ARRAY_a004eee4;

extern undefined * 32 [3] PTR_ARRAY_a004ef58;

extern undefined * 32 [2] PTR_ARRAY_a004f364;

extern undefined * 32 [2] PTR_ARRAY_a004f37c;

extern undefined * 32 [2] PTR_ARRAY_a004f3fc;

extern undefined * 32 [2] PTR_ARRAY_a004f4b8;

extern undefined * 32 [2] PTR_ARRAY_a004f8c0;

extern undefined * 32 [2] PTR_ARRAY_a004fb90;

extern undefined * 32 [2] PTR_ARRAY_a004fce4;

extern undefined * 32 [2] PTR_ARRAY_a0050048;

extern undefined * 32 [2] PTR_ARRAY_a005006c;

extern undefined * 32 [2] PTR_ARRAY_a0050094;

extern undefined * 32 [2] PTR_ARRAY_a00500c8;

extern undefined * 32 [2] PTR_ARRAY_a0050124;

extern undefined * 32 [4] PTR_ARRAY_a0050154;

extern undefined * 32 [4] PTR_ARRAY_a0050188;

extern undefined * 32 [2] PTR_ARRAY_a005019c;

extern undefined * 32 [2] PTR_ARRAY_a00501ac;

extern undefined * 32 [3] PTR_ARRAY_a00501c0;

extern undefined * 32 [2] PTR_ARRAY_a00501d0;

extern undefined * 32 [3] PTR_ARRAY_a00501dc;

extern undefined * 32 [3] PTR_ARRAY_a00501f0;

extern undefined * 32 [2] PTR_ARRAY_a005022c;

extern undefined * 32 [2] PTR_ARRAY_a0050688;

extern undefined * 32 [2] PTR_ARRAY_a00509b8;

extern undefined * 32 [2] PTR_ARRAY_a00520a0;

extern undefined * 32 [2] PTR_ARRAY_a0052324;

extern undefined * 32 [2] PTR_ARRAY_a00528bc;

extern undefined * 32 [2] PTR_ARRAY_a0052b1c;

extern undefined * 32 [2] PTR_ARRAY_a0052cbc;

extern undefined * 32 [2] PTR_ARRAY_a0054200;

extern undefined * 32 [3] PTR_ARRAY_a0054974;

extern undefined * 32 [2] PTR_ARRAY_a00551f8;

extern undefined * 32 [2] PTR_ARRAY_a0055724;

extern undefined * 32 [2] PTR_ARRAY_a0055740;

extern undefined * 32 [2] PTR_ARRAY_a0055774;

extern undefined * 32 [2] PTR_ARRAY_a0055824;

extern undefined * 32 [2] PTR_ARRAY_a0055858;

extern undefined * 32 [2] PTR_ARRAY_a0055898;

extern undefined * 32 [3] PTR_ARRAY_a00558b8;

extern undefined * 32 [3] PTR_ARRAY_a00558c8;

extern undefined * 32 [3] PTR_ARRAY_a00558f8;

extern undefined * 32 [3] PTR_ARRAY_a0055908;

extern undefined * 32 [3] PTR_ARRAY_a0055940;

extern undefined * 32 [3] PTR_ARRAY_a0055950;

extern undefined * 32 [3] PTR_ARRAY_a0055970;

extern undefined * 32 [2] PTR_ARRAY_a0055a78;

extern undefined * 32 [2] PTR_ARRAY_a0055a94;

extern undefined * 32 [2] PTR_ARRAY_a0055ac8;

extern undefined * 32 [2] PTR_ARRAY_a0055b78;

extern undefined * 32 [2] PTR_ARRAY_a0055bac;

extern undefined * 32 [2] PTR_ARRAY_a0055bf0;

extern undefined * 32 [3] PTR_ARRAY_a0055c10;

extern undefined * 32 [3] PTR_ARRAY_a0055c20;

extern undefined * 32 [2] PTR_ARRAY_a0055c38;

extern undefined * 32 [3] PTR_ARRAY_a0055c50;

extern undefined * 32 [3] PTR_ARRAY_a0055c60;

extern undefined * 32 [2] PTR_ARRAY_a0055c78;

extern undefined * 32 [3] PTR_ARRAY_a0055c98;

extern undefined * 32 [3] PTR_ARRAY_a0055ca8;

extern undefined * 32 [3] PTR_ARRAY_a0055cc8;

extern undefined * 32 [2] PTR_ARRAY_a0055dac;

extern undefined * 32 [2] PTR_ARRAY_a0055e38;

extern undefined * 32 [2] PTR_ARRAY_a0055e74;

extern undefined * 32 [2] PTR_ARRAY_a0056c74;

extern undefined * 32 [3] PTR_ARRAY_a0057138;

extern undefined * 32 [2] PTR_ARRAY_a0057444;

extern undefined * 32 [2] PTR_ARRAY_a00579b0;

extern undefined * 32 [2] PTR_ARRAY_a00579e4;

extern undefined * 32 [2] PTR_ARRAY_a0057a30;

extern undefined * 32 [2] PTR_ARRAY_a0057a78;

extern undefined * 32 [2] PTR_ARRAY_a0057a94;

extern undefined * 32 [2] PTR_ARRAY_a0057ac8;

extern undefined * 32 [2] PTR_ARRAY_a0057b08;

extern undefined * 32 [2] PTR_ARRAY_a0057b58;

extern undefined * 32 [3] PTR_ARRAY_a0057b70;

extern undefined * 32 [3] PTR_ARRAY_a0057b80;

extern undefined * 32 [2] PTR_ARRAY_a0057b98;

extern undefined * 32 [3] PTR_ARRAY_a0057bb0;

extern undefined * 32 [3] PTR_ARRAY_a0057bc0;

extern undefined * 32 [3] PTR_ARRAY_a0057be0;

extern undefined * 32 [2] PTR_ARRAY_a0057cf8;

extern undefined * 32 [2] PTR_ARRAY_a0057d14;

extern undefined * 32 [2] PTR_ARRAY_a0057d48;

extern undefined * 32 [2] PTR_ARRAY_a0057df8;

extern undefined * 32 [2] PTR_ARRAY_a0057e2c;

extern undefined * 32 [2] PTR_ARRAY_a0057e6c;

extern undefined * 32 [2] PTR_ARRAY_a0057ebc;

extern undefined * 32 [3] PTR_ARRAY_a0057ed4;

extern undefined * 32 [3] PTR_ARRAY_a0057ee4;

extern undefined * 32 [3] PTR_ARRAY_a0057f14;

extern undefined * 32 [3] PTR_ARRAY_a0057f24;

extern undefined * 32 [3] PTR_ARRAY_a0057f38;

extern undefined * 32 [2] PTR_ARRAY_a0057f48;

extern undefined * 32 [2] PTR_ARRAY_a0057fd4;

extern undefined * 32 [2] PTR_ARRAY_a0058030;

extern undefined * 32 [2] PTR_ARRAY_a00583b8;

extern undefined * 32 [2] PTR_ARRAY_a00583d4;

extern undefined * 32 [2] PTR_ARRAY_a00583e8;

extern undefined * 32 [2] PTR_ARRAY_a0058404;

extern undefined * 32 [2] PTR_ARRAY_a0058448;

extern undefined * 32 [2] PTR_ARRAY_a00584a4;

extern undefined * 32 [2] PTR_ARRAY_a00584d8;

extern undefined * 32 [3] PTR_ARRAY_a0058528;

extern undefined * 32 [3] PTR_ARRAY_a0058538;

extern undefined * 32 [4] PTR_ARRAY_a0058558;

extern undefined * 32 [4] PTR_ARRAY_a005856c;

extern undefined * 32 [2] PTR_ARRAY_a0058590;

extern undefined * 32 [4] PTR_ARRAY_a00585a4;

extern undefined * 32 [3] PTR_ARRAY_a00585c8;

extern undefined * 32 [2] PTR_ARRAY_a00585d8;

extern undefined * 32 [2] PTR_ARRAY_a0058658;

extern undefined * 32 [2] PTR_ARRAY_a00586ac;

extern undefined * 32 [2] PTR_ARRAY_a00587e0;

extern undefined * 32 [2] PTR_ARRAY_a00587fc;

extern undefined * 32 [2] PTR_ARRAY_a0058810;

extern undefined * 32 [2] PTR_ARRAY_a005882c;

extern undefined * 32 [2] PTR_ARRAY_a0058870;

extern undefined * 32 [2] PTR_ARRAY_a00588cc;

extern undefined * 32 [2] PTR_ARRAY_a0058900;

extern undefined * 32 [3] PTR_ARRAY_a0058950;

extern undefined * 32 [3] PTR_ARRAY_a0058960;

extern undefined * 32 [4] PTR_ARRAY_a0058980;

extern undefined * 32 [4] PTR_ARRAY_a0058994;

extern undefined * 32 [2] PTR_ARRAY_a00589b8;

extern undefined * 32 [4] PTR_ARRAY_a00589cc;

extern undefined * 32 [3] PTR_ARRAY_a00589f0;

extern undefined * 32 [2] PTR_ARRAY_a0058a00;

extern undefined * 32 [2] PTR_ARRAY_a0058a38;

extern undefined * 32 [2] PTR_ARRAY_a0058ad4;

extern undefined * 32 [2] PTR_ARRAY_a0058b20;

extern undefined * 32 [2] PTR_ARRAY_a0058dac;

extern undefined * 32 [2] PTR_ARRAY_a0059644;

extern undefined * 32 [2] PTR_ARRAY_a005980c;

extern undefined * 32 [2] PTR_ARRAY_a0059c64;

extern undefined * 32 [2] PTR_ARRAY_a0059c7c;

extern undefined * 32 [2] PTR_ARRAY_a005ab7c;

extern undefined * 32 [2] PTR_ARRAY_a005b288;

extern undefined * 32 [2] PTR_ARRAY_a005b798;

extern undefined * 32 [2] PTR_ARRAY_a005b7ec;

extern undefined * 32 [2] PTR_ARRAY_a005b870;

extern undefined * 32 [2] PTR_ARRAY_a005c30c;

extern undefined * 32 [3] PTR_ARRAY_a005c9e4;

extern undefined * 32 [2] PTR_ARRAY_a005ca78;

extern undefined * 32 [2] PTR_ARRAY_a005ca88;

extern undefined * 32 [3] PTR_ARRAY_a005caa4;

extern undefined * 32 [2] PTR_ARRAY_a005cae8;

extern undefined * 32 [2] PTR_ARRAY_a005cb0c;

extern undefined * 32 [2] PTR_ARRAY_a005cb1c;

extern undefined * 32 [3] PTR_ARRAY_a005cb38;

extern undefined * 32 [3] PTR_ARRAY_a005cc0c;

extern undefined * 32 [2] PTR_ARRAY_a005d02c;

extern undefined * 32 [2] PTR_ARRAY_a005d048;

extern undefined * 32 [3] PTR_ARRAY_a005d0f8;

extern undefined * 32 [2] PTR_ARRAY_a005d198;

extern undefined * 32 [2] PTR_ARRAY_a005d4e0;

extern undefined * 32 [2] PTR_ARRAY_a005d4fc;

extern undefined * 32 [2] PTR_ARRAY_a005d588;

extern undefined * 32 [2] PTR_ARRAY_a005d5d0;

extern undefined * 32 [2] PTR_ARRAY_a005d5fc;

extern undefined * 32 [3] PTR_ARRAY_a005d630;

extern undefined * 32 [2] PTR_ARRAY_a005d650;

extern undefined * 32 [2] PTR_ARRAY_a005d670;

extern undefined * 32 [2] PTR_ARRAY_a005d694;

extern undefined * 32 [2] PTR_ARRAY_a005d70c;

extern undefined * 32 [2] PTR_ARRAY_a005d724;

extern undefined * 32 [2] PTR_ARRAY_a005d73c;

extern undefined * 32 [2] PTR_ARRAY_a005d7c4;

extern undefined * 32 [2] PTR_ARRAY_a005d7e0;

extern undefined * 32 [3] PTR_ARRAY_a005d87c;

extern undefined * 32 [2] PTR_ARRAY_a005d8d0;

extern undefined * 32 [2] PTR_ARRAY_a005d954;

extern undefined * 32 [2] PTR_ARRAY_a005d99c;

extern undefined * 32 [2] PTR_ARRAY_a005d9d0;

extern undefined * 32 [3] PTR_ARRAY_a005da04;

extern undefined * 32 [2] PTR_ARRAY_a005da24;

extern undefined * 32 [2] PTR_ARRAY_a005da44;

extern undefined * 32 [2] PTR_ARRAY_a005da68;

extern undefined * 32 [2] PTR_ARRAY_a005dae0;

extern undefined * 32 [2] PTR_ARRAY_a005daf8;

extern undefined * 32 [2] PTR_ARRAY_a005db10;

extern undefined * 32 [2] PTR_ARRAY_a005db98;

extern undefined * 32 [2] PTR_ARRAY_a005dbb4;

extern undefined * 32 [3] PTR_ARRAY_a005dc50;

extern undefined * 32 [2] PTR_ARRAY_a005dca4;

extern undefined * 32 [2] PTR_ARRAY_a005e09c;

extern undefined * 32 [2] PTR_ARRAY_a005e0e0;

extern undefined * 32 [3] PTR_ARRAY_a005e3f4;

extern undefined * 32 [2] PTR_ARRAY_a005e454;

extern undefined * 32 [3] PTR_ARRAY_a005e488;

extern undefined * 32 [2] PTR_ARRAY_a005e4c8;

extern undefined * 32 [2] PTR_ARRAY_a005e76c;

extern undefined * 32 [3] PTR_ARRAY_a005e7a0;

extern undefined * 32 [2] PTR_ARRAY_a005e840;

extern undefined * 32 [2] PTR_ARRAY_a005e85c;

extern undefined * 32 [3] PTR_ARRAY_a005e878;

extern undefined * 32 [2] PTR_ARRAY_a005e8a0;

extern undefined * 32 [2] PTR_ARRAY_a005ea40;

extern undefined * 32 [2] PTR_ARRAY_a005eccc;

extern undefined * 32 [2] PTR_ARRAY_a005ece4;

extern undefined * 32 [2] PTR_ARRAY_a005ee0c;

extern undefined * 32 [2] PTR_ARRAY_a005ee24;

extern undefined * 32 [2] PTR_ARRAY_a005f184;

extern undefined * 32 [3] PTR_ARRAY_a005f200;

extern undefined * 32 [2] PTR_ARRAY_a005fad8;

extern undefined * 32 [2] PTR_ARRAY_a005fb5c;

extern undefined * 32 [2] PTR_ARRAY_a005fde8;

extern undefined * 32 [2] PTR_ARRAY_a005fe04;

extern undefined * 32 [2] PTR_ARRAY_a005fe38;

extern undefined * 32 [2] PTR_ARRAY_a005fe78;

extern undefined * 32 [2] PTR_ARRAY_a005fe94;

extern undefined * 32 [2] PTR_ARRAY_a005fec8;

extern undefined * 32 [2] PTR_ARRAY_a00603e4;

extern undefined * 32 [2] PTR_ARRAY_a0060de0;

extern undefined * 32 [2] PTR_ARRAY_a0061078;

extern undefined * 32 [2] PTR_ARRAY_a00610c4;

extern undefined * 32 [2] PTR_ARRAY_a00613e0;

extern undefined * 32 [2] PTR_ARRAY_a0062008;

extern undefined * 32 [3] PTR_ARRAY_a006233c;

extern undefined * 32 [2] PTR_ARRAY_a006234c;

extern undefined * 32 [2] PTR_ARRAY_a0062fb0;

extern undefined * 32 [2] PTR_ARRAY_a00630e0;

extern undefined * 32 [4] PTR_ARRAY_a0063160;

extern undefined * 32 [2] PTR_ARRAY_a00631bc;

extern undefined * 32 [5] PTR_ARRAY_a00635cc;

extern undefined * 32 [3] PTR_ARRAY_a0064344;

extern undefined * 32 [2] PTR_ARRAY_a006438c;

extern undefined * 32 [3] PTR_ARRAY_a00643bc;

extern undefined * 32 [2] PTR_ARRAY_a0065228;

extern undefined * 32 [2] PTR_ARRAY_a0065270;

extern undefined * 32 [2] PTR_ARRAY_a0065980;

extern undefined * 32 [2] PTR_ARRAY_a00659cc;

extern undefined * 32 [2] PTR_ARRAY_a00659f0;

extern undefined * 32 [2] PTR_ARRAY_a0065a3c;

extern undefined * 32 [2] PTR_ARRAY_a0065b0c;

extern undefined * 32 [2] PTR_ARRAY_a0065b18;

extern undefined * 32 [2] PTR_ARRAY_a00665f8;

extern undefined * 32 [2] PTR_ARRAY_a00669d8;

extern undefined * 32 [2] PTR_ARRAY_a00669e4;

extern undefined * 32 [2] PTR_ARRAY_a0066a18;

extern undefined * 32 [2] PTR_ARRAY_a0066a24;

extern undefined * 32 [2] PTR_ARRAY_a0066e48;

extern undefined * 32 [2] PTR_ARRAY_a0067628;

extern undefined * 32 [2] PTR_ARRAY_a0067874;

extern undefined * 32 [2] PTR_ARRAY_a00678ec;

extern undefined * 32 [2] PTR_ARRAY_a006793c;

extern undefined * 32 [2] PTR_ARRAY_a0067f08;

extern undefined * 32 [2] PTR_ARRAY_a00681f0;

extern undefined * 32 [2] PTR_ARRAY_a00685b0;

extern undefined * 32 [2] PTR_ARRAY_a0069398;

extern undefined * 32 [2] PTR_ARRAY_a00694a8;

extern undefined * 32 [2] PTR_ARRAY_a0069eb0;

extern undefined * 32 [2] PTR_ARRAY_a0069f0c;

extern undefined * 32 [2] PTR_ARRAY_a0069f40;

extern undefined * 32 [3] PTR_ARRAY_a0069fa0;

extern undefined * 32 [3] PTR_ARRAY_a0069fd4;

extern undefined * 32 [2] PTR_ARRAY_a006a114;

extern undefined * 32 [2] PTR_ARRAY_a006a148;

extern undefined * 32 [2] PTR_ARRAY_a006a1a0;

extern undefined * 32 [2] PTR_ARRAY_a006a1f8;

extern undefined * 32 [2] PTR_ARRAY_a006a254;

extern undefined * 32 [2] PTR_ARRAY_a006aa54;

extern undefined * 32 [2] PTR_ARRAY_a006ab84;

extern undefined * 32 [2] PTR_ARRAY_a006aba0;

extern undefined * 32 [2] PTR_ARRAY_a006abe4;

extern undefined * 32 [4] PTR_ARRAY_a006abf0;

extern undefined * 32 [2] PTR_ARRAY_a006ac04;

extern undefined * 32 [2] PTR_ARRAY_a006ac34;

extern undefined * 32 [2] PTR_ARRAY_a006ac50;

extern undefined * 32 [2] PTR_ARRAY_a006ac70;

extern undefined * 32 [2] PTR_ARRAY_a006ac8c;

extern undefined * 32 [2] PTR_ARRAY_a006acac;

extern undefined * 32 [2] PTR_ARRAY_a006acc8;

extern undefined * 32 [2] PTR_ARRAY_a006adb0;

extern undefined * 32 [3] PTR_ARRAY_a006b7c8;

extern undefined * 32 [2] PTR_ARRAY_a006b844;

extern undefined * 32 [2] PTR_ARRAY_a006b920;

extern undefined * 32 [2] PTR_ARRAY_a006b9c0;

extern undefined * 32 [2] PTR_ARRAY_a006bdfc;

extern undefined * 32 [2] PTR_ARRAY_a006be0c;

extern undefined * 32 [5] PTR_ARRAY_a006be44;

extern undefined * 32 [2] PTR_ARRAY_a006c1a0;

extern undefined * 32 [2] PTR_ARRAY_a006c1e0;

extern undefined * 32 [2] PTR_ARRAY_a006c1f0;

extern undefined * 32 [2] PTR_ARRAY_a006c1fc;

extern undefined * 32 [3] PTR_ARRAY_a006c21c;

extern undefined * 32 [2] PTR_ARRAY_a006c244;

extern undefined * 32 [3] PTR_ARRAY_a006c258;

extern undefined * 32 [2] PTR_ARRAY_a006cd0c;

extern undefined * 32 [2] PTR_ARRAY_a006d448;

extern undefined * 32 [3] PTR_ARRAY_a006d5cc;

extern undefined * 32 [3] PTR_ARRAY_a006d638;

extern undefined * 32 [2] PTR_ARRAY_a006e424;

extern undefined * 32 [3] PTR_ARRAY_a006e448;

extern undefined * 32 [2] PTR_ARRAY_a006e4e0;

extern undefined * 32 [2] PTR_ARRAY_a006e754;

extern undefined * 32 [2] PTR_ARRAY_a006ed44;

extern undefined * 32 [2] PTR_ARRAY_a006edf8;

extern undefined * 32 [2] PTR_ARRAY_a006eebc;

extern undefined * 32 [2] PTR_ARRAY_a006f044;

extern undefined * 32 [2] PTR_ARRAY_a006f064;

extern undefined * 32 [2] PTR_ARRAY_a006f07c;

extern undefined * 32 [2] PTR_ARRAY_a006f154;

extern undefined * 32 [4] PTR_ARRAY_a006f7e0;

extern undefined * 32 [3] PTR_ARRAY_a006f7f4;

extern undefined * 32 [2] PTR_ARRAY_a006f9b4;

extern undefined * 32 [2] PTR_ARRAY_a006fa44;

extern undefined * 32 [2] PTR_ARRAY_a006fa5c;

extern undefined * 32 [3] PTR_ARRAY_a006fa6c;

extern undefined * 32 [2] PTR_ARRAY_a006fa84;

extern undefined * 32 [2] PTR_ARRAY_a006fab0;

extern undefined * 32 [2] PTR_ARRAY_a006fac0;

extern undefined * 32 [3] PTR_ARRAY_a006fadc;

extern undefined * 32 [2] PTR_ARRAY_a006fb6c;

extern undefined * 32 [2] PTR_ARRAY_a006fe28;

extern undefined * 32 [4] PTR_ARRAY_a00701b0;

extern undefined * 32 [5] PTR_ARRAY_a00701cc;

extern undefined * 32 [3] PTR_ARRAY_a00701ec;

extern undefined * 32 [2] PTR_ARRAY_a0070234;

extern undefined * 32 [2] PTR_ARRAY_a007026c;

extern undefined * 32 [2] PTR_ARRAY_a0070284;

extern undefined * 32 [2] PTR_ARRAY_a00702fc;

extern undefined * 32 [2] PTR_ARRAY_a0070314;

extern undefined * 32 [2] PTR_ARRAY_a007038c;

extern undefined * 32 [2] PTR_ARRAY_a00703a4;

extern undefined * 32 [2] PTR_ARRAY_a0071750;

extern undefined * 32 [2] PTR_ARRAY_a0071848;

extern undefined * 32 [2] PTR_ARRAY_a0071af0;

extern undefined * 32 [2] PTR_ARRAY_a0071c2c;

extern undefined * 32 [2] PTR_ARRAY_a0071d18;

extern undefined * 32 [2] PTR_ARRAY_a0071e68;

extern undefined * 32 [3] PTR_ARRAY_a00720a0;

extern undefined * 32 [3] PTR_ARRAY_a00721a4;

extern undefined * 32 [2] PTR_ARRAY_a0072258;

extern undefined * 32 [2] PTR_ARRAY_a00722f0;

extern undefined * 32 [2] PTR_ARRAY_a0072580;

extern undefined * 32 [6] PTR_ARRAY_a007283c;

extern undefined * 32 [4] PTR_ARRAY_a0072bdc;

extern undefined * 32 [3] PTR_ARRAY_a0072c28;

extern undefined * 32 [2] PTR_ARRAY_a0072d54;

extern undefined * 32 [4] PTR_ARRAY_a0072e10;

extern undefined * 32 [6] PTR_ARRAY_a0072ef4;

extern undefined * 32 [2] PTR_ARRAY_a0072ff4;

extern undefined * 32 [4] PTR_ARRAY_a00730fc;

extern undefined * 32 [3] PTR_ARRAY_a0073110;

extern undefined * 32 [2] PTR_ARRAY_a0073128;

extern undefined * 32 [2] PTR_ARRAY_a0073134;

extern undefined * 32 [4] PTR_ARRAY_a0073154;

extern undefined * 32 [4] PTR_ARRAY_a0073178;

extern undefined * 32 [2] PTR_ARRAY_a007318c;

extern undefined * 32 [2] PTR_ARRAY_a00731dc;

extern undefined * 32 [4] PTR_ARRAY_a0073200;

extern undefined * 32 [2] PTR_ARRAY_a0073214;

extern undefined * 32 [2] PTR_ARRAY_a0073228;

extern undefined * 32 [2] PTR_ARRAY_a0073234;

extern undefined * 32 [4] PTR_ARRAY_a0073244;

extern undefined * 32 [2] PTR_ARRAY_a0073258;

extern undefined * 32 [2] PTR_ARRAY_a0073270;

extern undefined * 32 [2] PTR_ARRAY_a007327c;

extern undefined * 32 [2] PTR_ARRAY_a007328c;

extern undefined * 32 [2] PTR_ARRAY_a00733b4;

extern undefined * 32 [2] PTR_ARRAY_a007397c;

extern undefined * 32 [2] PTR_ARRAY_a0073a90;

extern undefined * 32 [3] PTR_ARRAY_a0073b9c;

extern undefined * 32 [2] PTR_ARRAY_a0073fb4;

extern undefined * 32 [2] PTR_ARRAY_a00748ec;

extern undefined * 32 [2] PTR_ARRAY_a0074924;

extern undefined * 32 [2] PTR_ARRAY_a0074930;

extern undefined * 32 [2] PTR_ARRAY_a0074958;

extern undefined * 32 [2] PTR_ARRAY_a007496c;

extern undefined * 32 [2] PTR_ARRAY_a0074a80;

extern undefined * 32 [2] PTR_ARRAY_a0074b68;

extern undefined * 32 [2] PTR_ARRAY_a0074fcc;

extern undefined * 32 [2] PTR_ARRAY_a007579c;

extern undefined * 32 [2] PTR_ARRAY_a00757b8;

extern undefined * 32 [3] PTR_ARRAY_a00765d0;

extern undefined * 32 [2] PTR_ARRAY_a0076a30;

extern undefined * 32 [3] PTR_ARRAY_a0076ddc;

extern undefined * 32 [2] PTR_ARRAY_a0077228;

extern undefined * 32 [2] PTR_ARRAY_a0077250;

extern undefined * 32 [2] PTR_ARRAY_a0077264;

extern undefined * 32 [2] PTR_ARRAY_a00773f0;

extern undefined * 32 [2] PTR_ARRAY_a0077420;

extern undefined * 32 [2] PTR_ARRAY_a007760c;

extern undefined * 32 [2] PTR_ARRAY_a0077954;

extern undefined * 32 [2] PTR_ARRAY_a00779b4;

extern undefined * 32 [2] PTR_ARRAY_a0077aa4;

extern undefined * 32 [2] PTR_ARRAY_a0077b38;

extern undefined * 32 [2] PTR_ARRAY_a0077b68;

extern undefined * 32 [2] PTR_ARRAY_a0077c30;

extern undefined * 32 [2] PTR_ARRAY_a0077d88;

extern undefined * 32 [3] PTR_ARRAY_a0077dc0;

extern undefined * 32 [4] PTR_ARRAY_a0077e90;

extern undefined * 32 [4] PTR_ARRAY_a0077ea8;

extern undefined * 32 [2] PTR_ARRAY_a0077f78;

extern undefined * 32 [2] PTR_ARRAY_a00782d4;

extern undefined * 32 [2] PTR_ARRAY_a0078308;

extern undefined * 32 [2] PTR_ARRAY_a0078330;

extern undefined * 32 [2] PTR_ARRAY_a00783d8;

extern undefined * 32 [2] PTR_ARRAY_a0078408;

extern undefined * 32 [2] PTR_ARRAY_a0078468;

extern undefined * 32 [2] PTR_ARRAY_a007849c;

extern undefined * 32 [2] PTR_ARRAY_a00784c4;

extern undefined * 32 [2] PTR_ARRAY_a0078558;

extern undefined * 32 [2] PTR_ARRAY_a0078570;

extern undefined * 32 [2] PTR_ARRAY_a00785c8;

extern undefined * 32 [3] PTR_ARRAY_a00785e0;

extern undefined * 32 [3] PTR_ARRAY_a0078604;

extern undefined * 32 [2] PTR_ARRAY_a00786fc;

extern undefined * 32 [3] PTR_ARRAY_a0078714;

extern undefined * 32 [3] PTR_ARRAY_a0078738;

extern undefined * 32 [2] PTR_ARRAY_a0078830;

extern undefined * 32 [6] PTR_ARRAY_a0078840;

extern undefined * 32 [3] PTR_ARRAY_a0078874;

extern undefined * 32 [3] PTR_ARRAY_a00789a8;

extern undefined * 32 [3] PTR_ARRAY_a00789c4;

extern undefined * 32 [2] PTR_ARRAY_a00789e8;

extern undefined * 32 [2] PTR_ARRAY_a0078a24;

extern undefined * 32 [2] PTR_ARRAY_a0078af8;

extern undefined * 32 [2] PTR_ARRAY_a0078b1c;

extern undefined * 32 [2] PTR_ARRAY_a0078dd0;

extern undefined * 32 [3] PTR_ARRAY_a0079000;

extern undefined * 32 [4] PTR_ARRAY_a0079500;

extern undefined * 32 [2] PTR_ARRAY_a0079530;

extern undefined * 32 [2] PTR_ARRAY_a0079558;

extern undefined * 32 [2] PTR_ARRAY_a0079580;

extern undefined * 32 [4] PTR_ARRAY_a00796f8;

extern undefined * 32 [2] PTR_ARRAY_a0079c54;

extern undefined * 32 [2] PTR_ARRAY_a007a3e8;

extern undefined * 32 [2] PTR_ARRAY_a007a6f4;

extern undefined * 32 [2] PTR_ARRAY_a007a72c;

extern undefined * 32 [2] PTR_ARRAY_a007a850;

extern undefined * 32 [2] PTR_ARRAY_a007a868;

extern undefined * 32 [2] PTR_ARRAY_a007a9d8;

extern undefined * 32 [2] PTR_ARRAY_a007aa7c;

extern undefined * 32 [2] PTR_ARRAY_a007aba8;

extern undefined * 32 [2] PTR_ARRAY_a007abb8;

extern undefined * 32 [2] PTR_ARRAY_a007aec8;

extern undefined * 32 [3] PTR_ARRAY_a007aef4;

extern undefined * 32 [2] PTR_ARRAY_a007af88;

extern undefined * 32 [3] PTR_ARRAY_a007afb4;

extern undefined * 32 [2] PTR_ARRAY_a007b010;

extern undefined * 32 [3] PTR_ARRAY_a007b03c;

extern undefined * 32 [2] PTR_ARRAY_a007b0d8;

extern undefined * 32 [3] PTR_ARRAY_a007b104;

extern undefined * 32 [2] PTR_ARRAY_a007ba1c;

extern undefined * 32 [2] PTR_ARRAY_a007ba98;

extern undefined * 32 [2] PTR_ARRAY_a007bdc8;

extern undefined * 32 [4] PTR_ARRAY_a007bf78;

extern undefined * 32 [2] PTR_ARRAY_a007c1cc;

extern undefined * 32 [4] PTR_ARRAY_a007c2b4;

extern undefined * 32 [2] PTR_ARRAY_a007c698;

extern undefined * 32 [2] PTR_ARRAY_a007ca94;

extern undefined * 32 [2] PTR_ARRAY_a007cab8;

extern undefined * 32 [2] PTR_ARRAY_a007caf4;

extern undefined * 32 [3] PTR_ARRAY_a007d204;

extern undefined * 32 [2] PTR_ARRAY_a007d278;

extern undefined * 32 [2] PTR_ARRAY_a007d308;

extern undefined * 32 [2] PTR_ARRAY_a007e238;

extern undefined * 32 [2] PTR_ARRAY_a007e250;

extern undefined * 32 [3] PTR_ARRAY_a007e8e4;

extern undefined * 32 [3] PTR_ARRAY_a007e95c;

extern undefined * 32 [2] PTR_ARRAY_a007ea1c;

extern undefined * 32 [3] PTR_ARRAY_a007ea28;

extern undefined * 32 [2] PTR_ARRAY_a007ea38;

extern undefined * 32 [2] PTR_ARRAY_a007efc8;

extern undefined * 32 [2] PTR_ARRAY_a007fecc;

extern undefined * 32 [3] PTR_ARRAY_a007ff34;

extern undefined * 32 [3] PTR_ARRAY_a007ff60;

extern undefined * 32 [3] PTR_ARRAY_a007ff9c;

extern undefined * 32 [2] PTR_ARRAY_a00803d4;

extern undefined * 32 [2] PTR_ARRAY_a0080650;

extern undefined * 32 [2] PTR_ARRAY_a00806ec;

extern undefined * 32 [4] PTR_ARRAY_a00807f4;

extern undefined * 32 [2] PTR_ARRAY_a00809c0;

extern undefined * 32 [2] PTR_ARRAY_a00809f0;

extern undefined * 32 [2] PTR_ARRAY_a0080a0c;

extern undefined * 32 [4] PTR_ARRAY_a0080aa0;

extern undefined * 32 [2] PTR_ARRAY_a0080adc;

extern undefined * 32 [2] PTR_ARRAY_a0080b18;

extern undefined * 32 [2] PTR_ARRAY_a0080b3c;

extern undefined * 32 [3] PTR_ARRAY_a0080b50;

extern undefined * 32 [2] PTR_ARRAY_a0080ecc;

extern undefined * 32 [2] PTR_ARRAY_a0080ed8;

extern undefined * 32 [2] PTR_ARRAY_a0080fb0;

extern undefined * 32 [2] PTR_ARRAY_a0081988;

extern undefined * 32 [2] PTR_ARRAY_a0081b2c;

extern undefined * 32 [2] PTR_ARRAY_a0081b58;

extern undefined * 32 [3] PTR_ARRAY_a0082248;

extern undefined * 32 [2] PTR_ARRAY_a0082258;

extern undefined * 32 [2] PTR_ARRAY_a00824dc;

extern undefined * 32 [3] PTR_ARRAY_a00824f8;

extern undefined * 32 [2] PTR_ARRAY_a0082508;

extern undefined * 32 [2] PTR_ARRAY_a0082540;

extern undefined * 32 [2] PTR_ARRAY_a0082578;

extern undefined * 32 [2] PTR_ARRAY_a00825a8;

extern undefined * 32 [2] PTR_ARRAY_a0082638;

extern undefined * 32 [2] PTR_ARRAY_a0082660;

extern undefined * 32 [2] PTR_ARRAY_a0082680;

extern undefined * 32 [2] PTR_ARRAY_a00826a0;

extern undefined * 32 [2] PTR_ARRAY_a0083744;

extern undefined * 32 [2] PTR_ARRAY_a0083788;

extern undefined * 32 [2] PTR_ARRAY_a00837fc;

extern undefined * 32 [2] PTR_ARRAY_a0083f28;

extern undefined * 32 [2] PTR_ARRAY_a00840b0;

extern undefined * 32 [2] PTR_ARRAY_a0084214;

extern undefined * 32 [2] PTR_ARRAY_a008423c;

extern undefined * 32 [2] PTR_ARRAY_a0084270;

extern undefined * 32 [2] PTR_ARRAY_a00846f4;

extern undefined * 32 [2] PTR_ARRAY_a00853dc;

extern undefined * 32 [2] PTR_ARRAY_a0085750;

extern undefined * 32 [2] PTR_ARRAY_a00869a8;

extern undefined * 32 [2] PTR_ARRAY_a0086a60;

extern undefined * 32 [3] PTR_ARRAY_a0086aac;

extern undefined * 32 [2] PTR_ARRAY_a0086ad0;

extern undefined * 32 [3] PTR_ARRAY_a0086cdc;

extern undefined * 32 [2] PTR_ARRAY_a0086e74;

extern undefined * 32 [2] PTR_ARRAY_a0086e84;

extern undefined * 32 [2] PTR_ARRAY_a0086f14;

extern undefined * 32 [3] PTR_ARRAY_a0086f30;

extern undefined * 32 [3] PTR_ARRAY_a0086f70;

extern undefined * 32 [3] PTR_ARRAY_a00870dc;

extern undefined * 32 [4] PTR_ARRAY_a0087108;

extern undefined * 32 [2] PTR_ARRAY_a0087270;

extern undefined * 32 [2] PTR_ARRAY_a0089c08;

extern undefined * 32 [2] PTR_ARRAY_a0089df8;

extern undefined * 32 [2] PTR_ARRAY_a008b2d0;

extern undefined * 32 [3] PTR_ARRAY_a008b680;

extern undefined * 32 [3] PTR_ARRAY_a008b6c4;

extern undefined * 32 [3] PTR_ARRAY_a008b6ec;

extern undefined * 32 [3] PTR_ARRAY_a008b71c;

extern undefined * 32 [2] PTR_ARRAY_a008bb40;

extern undefined * 32 [2] PTR_ARRAY_a008d9a4;

extern undefined * 32 [3] PTR_ARRAY_a008dbec;

extern undefined * 32 [2] PTR_ARRAY_a008dc0c;

extern undefined * 32 [3] PTR_ARRAY_a008dc1c;

extern undefined * 32 [2] PTR_ARRAY_a008dc38;

extern undefined * 32 [2] PTR_ARRAY_a008dc60;

extern undefined * 32 [2] PTR_ARRAY_a008dc98;

extern undefined * 32 [2] PTR_ARRAY_a008dcbc;

extern undefined * 32 [2] PTR_ARRAY_a008dce0;

extern undefined * 32 [2] PTR_ARRAY_a008e184;

extern undefined * 32 [2] PTR_ARRAY_a008e194;

extern undefined * 32 [2] PTR_ARRAY_a008e1c8;

extern undefined * 32 [2] PTR_ARRAY_a008e1dc;

extern undefined * 32 [3] PTR_ARRAY_a008e2f0;

extern undefined * 32 [2] PTR_ARRAY_a008e580;

extern undefined * 32 [2] PTR_ARRAY_a008e5a0;

extern undefined * 32 [3] PTR_ARRAY_a008f3ac;

extern undefined * 32 [3] PTR_ARRAY_a008f414;

extern undefined * 32 [2] PTR_ARRAY_a008f8d0;

extern undefined * 32 [3] PTR_ARRAY_a008f960;

extern undefined * 32 [2] PTR_ARRAY_a008faf0;

extern undefined * 32 [2] PTR_ARRAY_a008fbb0;

extern undefined * 32 [2] PTR_ARRAY_a008fc18;

extern undefined * 32 [3] PTR_ARRAY_a008fc24;

extern undefined * 32 [2] PTR_ARRAY_a008fc54;

extern undefined * 32 [2] PTR_ARRAY_a008fc7c;

extern undefined * 32 [2] PTR_ARRAY_a008ff90;

extern undefined * 32 [2] PTR_ARRAY_a0090334;

extern undefined * 32 [3] PTR_ARRAY_a0090370;

extern undefined * 32 [3] PTR_ARRAY_a0091cc8;

extern undefined * 32 [5] PTR_ARRAY_a0092820;

extern undefined * 32 [2] PTR_ARRAY_a00929e0;

extern undefined * 32 [2] PTR_ARRAY_a0092c9c;

extern undefined * 32 [4] PTR_ARRAY_a0092d20;

extern undefined * 32 [2] PTR_ARRAY_a0092d58;

extern undefined * 32 [4] PTR_ARRAY_a0092d70;

extern undefined * 32 [2] PTR_ARRAY_a0093138;

extern undefined * 32 [2] PTR_ARRAY_a0093148;

extern undefined * 32 [2] PTR_ARRAY_a009318c;

extern undefined * 32 [2] PTR_ARRAY_a0093260;

extern undefined * 32 [3] PTR_ARRAY_a009326c;

extern undefined * 32 [2] PTR_ARRAY_a0093364;

extern undefined * 32 [2] PTR_ARRAY_a0093398;

extern undefined * 32 [2] PTR_ARRAY_a00933a4;

extern undefined * 32 [3] PTR_ARRAY_a0093448;

extern undefined * 32 [4] PTR_ARRAY_a00934b0;

extern undefined * 32 [2] PTR_ARRAY_a00934cc;

extern undefined * 32 [4] PTR_ARRAY_a009351c;

extern undefined * 32 [2] PTR_ARRAY_a0093554;

extern undefined * 32 [2] PTR_ARRAY_a0093588;

extern undefined * 32 [2] PTR_ARRAY_a009362c;

extern undefined * 32 [2] PTR_ARRAY_a0093638;

extern undefined * 32 [2] PTR_ARRAY_a0093720;

extern undefined * 32 [4] PTR_ARRAY_a0093790;

extern undefined * 32 [2] PTR_ARRAY_a00937d4;

extern undefined * 32 [2] PTR_ARRAY_a009387c;

extern undefined * 32 [2] PTR_ARRAY_a0093c90;

extern undefined * 32 [2] PTR_ARRAY_a0094438;

extern undefined * 32 [2] PTR_ARRAY_a0094484;

extern undefined * 32 [2] PTR_ARRAY_a009454c;

extern undefined * 32 [3] PTR_ARRAY_a0094620;

extern undefined * 32 [3] PTR_ARRAY_a0094654;

extern undefined * 32 [2] PTR_ARRAY_a0094790;

extern undefined * 32 [2] PTR_ARRAY_a0095528;

extern undefined * 32 [2] PTR_ARRAY_a009553c;

extern undefined * 32 [2] PTR_ARRAY_a0095564;

extern undefined * 32 [3] PTR_ARRAY_a00955b4;

extern undefined * 32 [2] PTR_ARRAY_a00955c4;

extern undefined * 32 [2] PTR_ARRAY_a0095690;

extern undefined * 32 [2] PTR_ARRAY_a00956f0;

extern undefined * 32 [2] PTR_ARRAY_a0095704;

extern undefined * 32 [3] PTR_ARRAY_a0095718;

extern undefined * 32 [2] PTR_ARRAY_a0095ac8;

extern undefined * 32 [2] PTR_ARRAY_a0095ce4;

extern undefined * 32 [2] PTR_ARRAY_a0095dbc;

extern undefined * 32 [3] PTR_ARRAY_a0095dec;

extern undefined * 32 [2] PTR_ARRAY_a0095e14;

extern undefined * 32 [2] PTR_ARRAY_a0095e30;

extern undefined * 32 [2] PTR_ARRAY_a0095e40;

extern undefined * 32 [3] PTR_ARRAY_a0095e50;

extern undefined * 32 [2] PTR_ARRAY_a0095eb8;

extern undefined * 32 [2] PTR_ARRAY_a0095ef8;

extern undefined * 32 [2] PTR_ARRAY_a0095f9c;

extern undefined * 32 [2] PTR_ARRAY_a009623c;

extern undefined * 32 [2] PTR_ARRAY_a00963a4;

extern undefined * 32 [3] PTR_ARRAY_a0096404;

extern undefined * 32 [3] PTR_ARRAY_a0096434;

extern undefined * 32 [2] PTR_ARRAY_a0096618;

extern undefined * 32 [2] PTR_ARRAY_a0096f8c;

extern undefined * 32 [2] PTR_ARRAY_a0096fd8;

extern undefined * 32 [2] PTR_ARRAY_a009700c;

extern undefined * 32 [3] PTR_ARRAY_a00979e4;

extern undefined * 32 [2] PTR_ARRAY_a00983d0;

extern undefined * 32 [2] PTR_ARRAY_a0098848;

extern undefined * 32 [3] PTR_ARRAY_a0098ab0;

extern undefined * 32 [2] PTR_ARRAY_a0098e78;

extern undefined * 32 [2] PTR_ARRAY_a0099028;

extern undefined * 32 [2] PTR_ARRAY_a0099070;

extern undefined * 32 [2] PTR_ARRAY_a00993f8;

extern undefined * 32 [2] PTR_ARRAY_a0099420;

extern undefined * 32 [5] PTR_ARRAY_a00994ac;

extern undefined * 32 [2] PTR_ARRAY_a0099690;

extern undefined * 32 [2] PTR_ARRAY_a00996dc;

extern undefined * 32 [2] PTR_ARRAY_a0099814;

extern undefined * 32 [2] PTR_ARRAY_a0099920;

extern undefined * 32 [2] PTR_ARRAY_a009998c;

extern undefined * 32 [2] PTR_ARRAY_a00999f4;

extern undefined * 32 [3] PTR_ARRAY_a0099a60;

extern undefined * 32 [3] PTR_ARRAY_a0099a84;

extern undefined * 32 [5] PTR_ARRAY_a0099c80;

extern undefined * 32 [2] PTR_ARRAY_a0099cac;

extern undefined * 32 [2] PTR_ARRAY_a0099e14;

extern undefined * 32 [2] PTR_ARRAY_a009a050;

extern undefined * 32 [2] PTR_ARRAY_a009a070;

extern undefined * 32 [2] PTR_ARRAY_a009ae14;

extern undefined * 32 [2] PTR_ARRAY_a009d524;

extern undefined * 32 [2] PTR_ARRAY_a009d9f0;

extern undefined * 32 [2] PTR_ARRAY_a009da98;

extern undefined * 32 [2] PTR_ARRAY_a009e2dc;

extern undefined * 32 [2] PTR_ARRAY_a009f24c;

extern undefined * 32 [2] PTR_ARRAY_a00a06b4;

extern undefined * 32 [2] PTR_ARRAY_a00a0848;

extern undefined * 32 [2] PTR_ARRAY_a00a0cc0;

extern undefined * 32 [2] PTR_ARRAY_a00a1364;

extern undefined * 32 [4] PTR_ARRAY_a00a1650;

extern undefined * 32 [2] PTR_ARRAY_a00a16dc;

extern undefined * 32 [2] PTR_ARRAY_a00a1820;

extern undefined * 32 [2] PTR_ARRAY_a00a1830;

extern undefined * 32 [2] PTR_ARRAY_a00a1840;

extern undefined * 32 [2] PTR_ARRAY_a00a1a5c;

extern undefined * 32 [2] PTR_ARRAY_a00a1ae4;

extern undefined * 32 [2] PTR_ARRAY_a00a1b98;

extern undefined * 32 [2] PTR_ARRAY_a00a1bd4;

extern undefined * 32 [2] PTR_ARRAY_a00a1c04;

extern undefined * 32 [2] PTR_ARRAY_a00a1cbc;

extern undefined * 32 [2] PTR_ARRAY_a00a1d6c;

extern undefined * 32 [2] PTR_ARRAY_a00a1dec;

extern undefined * 32 [3] PTR_ARRAY_a00a1e7c;

extern undefined * 32 [2] PTR_ARRAY_a00a1f50;

extern undefined * 32 [2] PTR_ARRAY_a00a2050;

extern undefined * 32 [2] PTR_ARRAY_a00a2a6c;

extern undefined * 32 [2] PTR_ARRAY_a00a2a84;

extern undefined * 32 [2] PTR_ARRAY_a00a2c28;

extern undefined * 32 [2] PTR_ARRAY_a00a2c40;

extern undefined * 32 [2] PTR_ARRAY_a00a2dc0;

extern undefined * 32 [2] PTR_ARRAY_a00a2e18;

extern undefined * 32 [2] PTR_ARRAY_a00a2e24;

extern undefined * 32 [2] PTR_ARRAY_a00a3714;

extern undefined * 32 [3] PTR_ARRAY_a00a3d18;

extern undefined * 32 [2] PTR_ARRAY_a00a40bc;

extern undefined * 32 [2] PTR_ARRAY_a00a4420;

extern undefined * 32 [2] PTR_ARRAY_a00a4460;

extern undefined * 32 [3] PTR_ARRAY_a00a4584;

extern undefined * 32 [2] PTR_ARRAY_a00a46e8;

extern undefined * 32 [4] PTR_ARRAY_a00a46f4;

extern undefined * 32 [2] PTR_ARRAY_a00a4748;

extern undefined * 32 [2] PTR_ARRAY_a00a4778;

extern undefined * 32 [2] PTR_ARRAY_a00a47d0;

extern undefined * 32 [2] PTR_ARRAY_a00a5178;

extern undefined * 32 [2] PTR_ARRAY_a00a5284;

extern undefined * 32 [2] PTR_ARRAY_a00a53ac;

extern undefined * 32 [2] PTR_ARRAY_a00a53d4;

extern undefined * 32 [4] PTR_ARRAY_a00a5ac0;

extern undefined * 32 [3] PTR_ARRAY_a00a5d6c;

extern undefined * 32 [3] PTR_ARRAY_a00a7e38;

extern undefined * 32 [2] PTR_ARRAY_a00a8f58;

extern undefined * 32 [2] PTR_ARRAY_a00a9140;

extern undefined * 32 [2] PTR_ARRAY_a00a9168;

extern undefined * 32 [2] PTR_ARRAY_a00aa8dc;

extern undefined * 32 [2] PTR_ARRAY_a00ab940;

extern undefined * 32 [2] PTR_ARRAY_a00ac23c;

extern undefined * 32 [2] PTR_ARRAY_a00ac840;

extern undefined * 32 [3] PTR_ARRAY_a00acd64;

extern undefined * 32 [2] PTR_ARRAY_a00acdf8;

extern undefined * 32 [2] PTR_ARRAY_a00ad534;

extern undefined * 32 [2] PTR_ARRAY_a00ae874;

extern undefined * 32 [2] PTR_ARRAY_a00af830;

extern undefined * 32 [2] PTR_ARRAY_a00afb00;

extern undefined * 32 [2] PTR_ARRAY_a00afb24;

extern undefined * 32 [2] PTR_ARRAY_a00b0b70;

extern undefined * 32 [2] PTR_ARRAY_a00b0f88;

extern undefined * 32 [2] PTR_ARRAY_a00b1044;

extern undefined * 32 [2] PTR_ARRAY_a00b10c4;

extern undefined * 32 [2] PTR_ARRAY_a00b11bc;

extern undefined * 32 [2] PTR_ARRAY_a00b21cc;

extern undefined * 32 [2] PTR_ARRAY_a00b25a8;

extern undefined * 32 [2] PTR_ARRAY_a00b3208;

extern undefined * 32 [2] PTR_ARRAY_a00b323c;

extern undefined * 32 [2] PTR_ARRAY_a00b327c;

extern undefined * 32 [3] PTR_ARRAY_a00b32bc;

extern undefined * 32 [3] PTR_ARRAY_a00b3304;

extern undefined * 32 [3] PTR_ARRAY_a00b3350;

extern undefined * 32 [3] PTR_ARRAY_a00b33a4;

extern undefined * 32 [3] PTR_ARRAY_a00b3418;

extern undefined * 32 [2] PTR_ARRAY_a00b3458;

extern undefined * 32 [2] PTR_ARRAY_a00b3634;

extern undefined * 32 [2] PTR_ARRAY_a00b378c;

extern undefined * 32 [2] PTR_ARRAY_a00b3c78;

extern undefined * 32 [2] PTR_ARRAY_a00b404c;

extern undefined * 32 [3] PTR_ARRAY_a00b4080;

extern undefined * 32 [2] PTR_ARRAY_a00b442c;

extern undefined * 32 [2] PTR_ARRAY_a00b4714;

extern undefined * 32 [3] PTR_ARRAY_a00b4a24;

extern undefined * 32 [2] PTR_ARRAY_a00b56b0;

extern undefined * 32 [2] PTR_ARRAY_a00b5828;

extern undefined * 32 [3] PTR_ARRAY_a00b5b28;

extern undefined * 32 [2] PTR_ARRAY_a00b5d44;

extern undefined * 32 [2] PTR_ARRAY_a00b5fb4;

extern undefined * 32 [2] PTR_ARRAY_a00b666c;

extern undefined * 32 [3] PTR_ARRAY_a00b71cc;

extern undefined * 32 [2] PTR_ARRAY_a00b74f0;

extern undefined * 32 [2] PTR_ARRAY_a00b7574;

extern undefined * 32 [3] PTR_ARRAY_a00b75a4;

extern undefined * 32 [2] PTR_ARRAY_a00b7e88;

extern undefined * 32 [3] PTR_ARRAY_a00b8064;

extern undefined * 32 [2] PTR_ARRAY_a00b80c8;

extern undefined * 32 [2] PTR_ARRAY_a00b9670;

extern undefined * 32 [2] PTR_ARRAY_a00b9688;

extern undefined * 32 [2] PTR_ARRAY_a00b96a0;

extern undefined * 32 [2] PTR_ARRAY_a00b96b8;

extern undefined * 32 [2] PTR_ARRAY_a00b97c4;

extern undefined * 32 [2] PTR_ARRAY_a00b97dc;

extern undefined * 32 [2] PTR_ARRAY_a00b97f4;

extern undefined * 32 [2] PTR_ARRAY_a00b980c;

extern undefined * 32 [2] PTR_ARRAY_a00b98fc;

extern undefined * 32 [2] PTR_ARRAY_a00b9c54;

extern undefined * 32 [2] PTR_ARRAY_a00b9cc8;

extern undefined * 32 [2] PTR_ARRAY_a00b9d18;

extern undefined * 32 [2] PTR_ARRAY_a00b9e4c;

extern undefined * 32 [2] PTR_ARRAY_a00b9f2c;

extern undefined * 32 [2] PTR_ARRAY_a00b9f88;

extern undefined * 32 [2] PTR_ARRAY_a00b9ff8;

extern undefined * 32 [2] PTR_ARRAY_a00ba090;

extern undefined * 32 [2] PTR_ARRAY_a00ba180;

extern undefined * 32 [2] PTR_ARRAY_a00ba1a8;

extern undefined * 32 [2] PTR_ARRAY_a00ba3e8;

extern undefined * 32 [2] PTR_ARRAY_a00ba48c;

extern undefined * 32 [2] PTR_ARRAY_a00ba58c;

extern undefined * 32 [2] PTR_ARRAY_a00ba7c0;

extern undefined * 32 [2] PTR_ARRAY_a00bac70;

extern undefined * 32 [2] PTR_ARRAY_a00bb8ac;

extern undefined * 32 [2] PTR_ARRAY_a00bb8dc;

extern undefined * 32 [2] PTR_ARRAY_a00bb964;

extern undefined * 32 [2] PTR_ARRAY_a00bbb40;

extern undefined * 32 [3] PTR_ARRAY_a00bbc94;

extern undefined * 32 [2] PTR_ARRAY_a00bbca8;

extern undefined * 32 [3] PTR_ARRAY_a00bbcbc;

extern undefined * 32 [2] PTR_ARRAY_a00bbcd0;

extern undefined * 32 [3] PTR_ARRAY_a00bbce4;

extern undefined * 32 [2] PTR_ARRAY_a00bbcf8;

extern undefined * 32 [2] PTR_ARRAY_a00bbd40;

extern undefined * 32 [2] PTR_ARRAY_a00bbd4c;

extern undefined * 32 [2] PTR_ARRAY_a00bbd5c;

extern undefined * 32 [2] PTR_ARRAY_a00bbd68;

extern undefined * 32 [2] PTR_ARRAY_a00bbd78;

extern undefined * 32 [2] PTR_ARRAY_a00bbd84;

extern undefined * 32 [3] PTR_ARRAY_a00bbe88;

extern undefined * 32 [3] PTR_ARRAY_a00bccb4;

extern undefined * 32 [2] PTR_ARRAY_a00bcfd4;

extern undefined * 32 [2] PTR_ARRAY_a00bd108;

extern undefined * 32 [2] PTR_ARRAY_a00bd23c;

extern undefined * 32 [3] PTR_ARRAY_a00bd3a4;

extern undefined * 32 [2] PTR_ARRAY_a00bd3f4;

extern undefined * 32 [2] PTR_ARRAY_a00bd404;

extern undefined * 32 [2] PTR_ARRAY_a00bd440;

extern undefined * 32 [2] PTR_ARRAY_a00bd46c;

extern undefined * 32 [3] PTR_ARRAY_a00bd4b4;

extern undefined * 32 [2] PTR_ARRAY_a00bd4e8;

extern undefined * 32 [2] PTR_ARRAY_a00be09c;

extern undefined * 32 [5] PTR_ARRAY_a00bf964;

extern undefined * 32 [4] PTR_ARRAY_a00bf9f4;

extern undefined * 32 [2] PTR_ARRAY_a00c03bc;

extern undefined * 32 [2] PTR_ARRAY_a00c098c;

extern undefined * 32 [2] PTR_ARRAY_a00c09bc;

extern undefined * 32 [2] PTR_ARRAY_a00c2160;

extern undefined * 32 [2] PTR_ARRAY_a00c2220;

extern undefined * 32 [2] PTR_ARRAY_a00c399c;

extern undefined * 32 [2] PTR_ARRAY_a00c39b0;

extern undefined * 32 [2] PTR_ARRAY_a00c39cc;

extern undefined * 32 [2] PTR_ARRAY_a00c447c;

extern undefined * 32 [2] PTR_ARRAY_a00c4f90;

extern undefined * 32 [2] PTR_ARRAY_a00c5ab8;

extern undefined * 32 [3] PTR_ARRAY_a00c5d54;

extern undefined * 32 [3] PTR_ARRAY_a00c5dfc;

extern undefined * 32 [3] PTR_ARRAY_a00c5edc;

extern undefined * 32 [2] PTR_ARRAY_a00c66a8;

extern undefined * 32 [2] PTR_ARRAY_a00c6718;

extern undefined * 32 [2] PTR_ARRAY_a00c6748;

extern undefined * 32 [2] PTR_ARRAY_a00c6778;

extern undefined * 32 [2] PTR_ARRAY_a00c6790;

extern undefined * 32 [3] PTR_ARRAY_a00c67a8;

extern undefined * 32 [2] PTR_ARRAY_a00c67c0;

extern undefined * 32 [2] PTR_ARRAY_a00c6838;

extern undefined * 32 [2] PTR_ARRAY_a00c6850;

extern undefined * 32 [2] PTR_ARRAY_a00c6868;

extern undefined * 32 [2] PTR_ARRAY_a00c6898;

extern undefined * 32 [3] PTR_ARRAY_a00c6928;

extern undefined * 32 [2] PTR_ARRAY_a00c6988;

extern undefined * 32 [3] PTR_ARRAY_a00c69a0;

extern undefined * 32 [3] PTR_ARRAY_a00c69b8;

extern undefined * 32 [3] PTR_ARRAY_a00c69d0;

extern undefined * 32 [3] PTR_ARRAY_a00c69e8;

extern undefined * 32 [3] PTR_ARRAY_a00c6a00;

extern undefined * 32 [2] PTR_ARRAY_a00c6a18;

extern undefined * 32 [2] PTR_ARRAY_a00c6a48;

extern undefined * 32 [3] PTR_ARRAY_a00c6a60;

extern undefined * 32 [2] PTR_ARRAY_a00c6b08;

extern undefined * 32 [2] PTR_ARRAY_a00c6be0;

extern undefined * 32 [2] PTR_ARRAY_a00c6bf8;

extern undefined * 32 [2] PTR_ARRAY_a00c6c10;

extern undefined * 32 [2] PTR_ARRAY_a00c6c28;

extern undefined * 32 [2] PTR_ARRAY_a00c6c40;

extern undefined * 32 [2] PTR_ARRAY_a00c6c58;

extern undefined * 32 [2] PTR_ARRAY_a00c6c70;

extern undefined * 32 [2] PTR_ARRAY_a00c6ca0;

extern undefined * 32 [2] PTR_ARRAY_a00c6cb8;

extern undefined * 32 [3] PTR_ARRAY_a00c6cd0;

extern undefined * 32 [2] PTR_ARRAY_a00c6d18;

extern undefined * 32 [2] PTR_ARRAY_a00c6d30;

extern undefined * 32 [2] PTR_ARRAY_a00c6d48;

extern undefined * 32 [2] PTR_ARRAY_a00c6d60;

extern undefined * 32 [2] PTR_ARRAY_a00c6d78;

extern undefined * 32 [2] PTR_ARRAY_a00c6d90;

extern undefined * 32 [2] PTR_ARRAY_a00c6da8;

extern undefined * 32 [2] PTR_ARRAY_a00c6dc0;

extern undefined * 32 [2] PTR_ARRAY_a00c6dd8;

extern undefined * 32 [2] PTR_ARRAY_a00c6e08;

extern undefined * 32 [2] PTR_ARRAY_a00c6e20;

extern undefined * 32 [2] PTR_ARRAY_a00c6e38;

extern undefined * 32 [2] PTR_ARRAY_a00c6e50;

extern undefined * 32 [2] PTR_ARRAY_a00c6e68;

extern undefined * 32 [2] PTR_ARRAY_a00c6e80;

extern undefined * 32 [2] PTR_ARRAY_a00c6eb0;

extern undefined * 32 [2] PTR_ARRAY_a00c6ec8;

extern undefined * 32 [2] PTR_ARRAY_a00c6ee0;

extern undefined * 32 [2] PTR_ARRAY_a00c6ef8;

extern undefined * 32 [2] PTR_ARRAY_a00c6f10;

extern undefined * 32 [2] PTR_ARRAY_a00c6f28;

extern undefined * 32 [2] PTR_ARRAY_a00c6f40;

extern undefined * 32 [2] PTR_ARRAY_a00c6f58;

extern undefined * 32 [2] PTR_ARRAY_a00c6f70;

extern undefined * 32 [2] PTR_ARRAY_a00c6f88;

extern undefined * 32 [2] PTR_ARRAY_a00c6fb8;

extern undefined * 32 [2] PTR_ARRAY_a00c6fd0;

extern undefined * 32 [2] PTR_ARRAY_a00c6fe8;

extern undefined * 32 [2] PTR_ARRAY_a00c7000;

extern undefined * 32 [2] PTR_ARRAY_a00c7018;

extern undefined * 32 [2] PTR_ARRAY_a00c7030;

extern undefined * 32 [2] PTR_ARRAY_a00c7060;

extern undefined * 32 [2] PTR_ARRAY_a00c70f0;

extern undefined * 32 [2] PTR_ARRAY_a00c74c8;

extern undefined * 32 [2] PTR_ARRAY_a00c74e0;

extern undefined * 32 [2] PTR_ARRAY_a00c7528;

extern undefined * 32 [2] PTR_ARRAY_a00c7570;

extern undefined * 32 [2] PTR_ARRAY_a00c7588;

extern undefined * 32 [2] PTR_ARRAY_a00c75b8;

extern undefined * 32 [2] PTR_ARRAY_a00c75d0;

extern undefined * 32 [2] PTR_ARRAY_a00c75e8;

extern undefined * 32 [2] PTR_ARRAY_a00c7600;

extern undefined * 32 [2] PTR_ARRAY_a00c7618;

extern undefined * 32 [2] PTR_ARRAY_a00c7630;

extern undefined * 32 [2] PTR_ARRAY_a00c7648;

extern undefined * 32 [2] PTR_ARRAY_a00c7660;

extern undefined * 32 [2] PTR_ARRAY_a00c7678;

extern undefined * 32 [2] PTR_ARRAY_a00c76a8;

extern undefined * 32 [2] PTR_ARRAY_a00c76c0;

extern undefined * 32 [2] PTR_ARRAY_a00c76d8;

extern undefined * 32 [2] PTR_ARRAY_a00c76f0;

extern undefined * 32 [2] PTR_ARRAY_a00c7708;

extern undefined * 32 [2] PTR_ARRAY_a00c7720;

extern undefined * 32 [2] PTR_ARRAY_a00c7750;

extern undefined * 32 [2] PTR_ARRAY_a00c7768;

extern undefined * 32 [2] PTR_ARRAY_a00c7780;

extern undefined * 32 [2] PTR_ARRAY_a00c7798;

extern undefined * 32 [2] PTR_ARRAY_a00c77b0;

extern undefined * 32 [2] PTR_ARRAY_a00c77c8;

extern undefined * 32 [2] PTR_ARRAY_a00c77e0;

extern undefined * 32 [2] PTR_ARRAY_a00c77f8;

extern undefined * 32 [2] PTR_ARRAY_a00c7810;

extern undefined * 32 [2] PTR_ARRAY_a00c7840;

extern undefined * 32 [2] PTR_ARRAY_a00c7858;

extern undefined * 32 [2] PTR_ARRAY_a00c7870;

extern undefined * 32 [2] PTR_ARRAY_a00c7888;

extern undefined * 32 [2] PTR_ARRAY_a00c78a0;

extern undefined * 32 [2] PTR_ARRAY_a00c78d0;

extern undefined * 32 [2] PTR_ARRAY_a00c78e8;

extern undefined * 32 [2] PTR_ARRAY_a00c7900;

extern undefined * 32 [2] PTR_ARRAY_a00c7918;

extern undefined * 32 [2] PTR_ARRAY_a00c7930;

extern undefined * 32 [2] PTR_ARRAY_a00c7948;

extern undefined * 32 [2] PTR_ARRAY_a00c7960;

extern undefined * 32 [2] PTR_ARRAY_a00c7978;

extern undefined * 32 [2] PTR_ARRAY_a00c7990;

extern undefined * 32 [2] PTR_ARRAY_a00c79a8;

extern undefined * 32 [2] PTR_ARRAY_a00c79d8;

extern undefined * 32 [2] PTR_ARRAY_a00c79f0;

extern undefined * 32 [2] PTR_ARRAY_a00c7a08;

extern undefined * 32 [2] PTR_ARRAY_a00c7a20;

extern undefined * 32 [2] PTR_ARRAY_a00c7a38;

extern undefined * 32 [2] PTR_ARRAY_a00c7a50;

extern undefined * 32 [2] PTR_ARRAY_a00c7a80;

extern undefined * 32 [2] PTR_ARRAY_a00c7a98;

extern undefined * 32 [2] PTR_ARRAY_a00c7ab0;

extern undefined * 32 [2] PTR_ARRAY_a00c7ac8;

extern undefined * 32 [2] PTR_ARRAY_a00c7af8;

extern undefined * 32 [2] PTR_ARRAY_a00c7b10;

extern undefined * 32 [2] PTR_ARRAY_a00c7b28;

extern undefined * 32 [2] PTR_ARRAY_a00c7b40;

extern undefined * 32 [2] PTR_ARRAY_a00c7b58;

extern undefined * 32 [2] PTR_ARRAY_a00c7b70;

extern undefined * 32 [2] PTR_ARRAY_a00c7ba0;

extern undefined * 32 [2] PTR_ARRAY_a00c7bb8;

extern undefined * 32 [2] PTR_ARRAY_a00c7bd0;

extern undefined * 32 [2] PTR_ARRAY_a00c7be8;

extern undefined * 32 [2] PTR_ARRAY_a00c7c00;

extern undefined * 32 [2] PTR_ARRAY_a00c7c30;

extern undefined * 32 [2] PTR_ARRAY_a00c7c48;

extern undefined * 32 [2] PTR_ARRAY_a00c7c60;

extern undefined * 32 [2] PTR_ARRAY_a00c7c90;

extern undefined * 32 [2] PTR_ARRAY_a00c7ca8;

extern undefined * 32 [2] PTR_ARRAY_a00c7cc0;

extern undefined * 32 [2] PTR_ARRAY_a00c7cd8;

extern undefined * 32 [2] PTR_ARRAY_a00c7cf0;

extern undefined * 32 [2] PTR_ARRAY_a00c7d08;

extern undefined * 32 [2] PTR_ARRAY_a00c7d20;

extern undefined * 32 [2] PTR_ARRAY_a00c7d38;

extern undefined * 32 [2] PTR_ARRAY_a00c7d50;

extern undefined * 32 [2] PTR_ARRAY_a00c7d80;

extern undefined * 32 [2] PTR_ARRAY_a00c7d98;

extern undefined * 32 [2] PTR_ARRAY_a00c7db0;

extern undefined * 32 [2] PTR_ARRAY_a00c7dc8;

extern undefined * 32 [2] PTR_ARRAY_a00c7df8;

extern undefined * 32 [2] PTR_ARRAY_a00c7e10;

extern undefined * 32 [2] PTR_ARRAY_a00c7e40;

extern undefined * 32 [2] PTR_ARRAY_a00c7e58;

extern undefined * 32 [2] PTR_ARRAY_a00c7e88;

extern undefined * 32 [2] PTR_ARRAY_a00c7ea0;

extern undefined * 32 [2] PTR_ARRAY_a00c7ed0;

extern undefined * 32 [2] PTR_ARRAY_a00c7ee8;

extern undefined * 32 [2] PTR_ARRAY_a00c7f00;

extern undefined * 32 [2] PTR_ARRAY_a00c7f18;

extern undefined * 32 [2] PTR_ARRAY_a00c7f48;

extern undefined * 32 [2] PTR_ARRAY_a00c7f60;

extern undefined * 32 [2] PTR_ARRAY_a00c7f90;

extern undefined * 32 [2] PTR_ARRAY_a00c7fa8;

extern undefined * 32 [2] PTR_ARRAY_a00c7fc0;

extern undefined * 32 [2] PTR_ARRAY_a00c7fd8;

extern undefined * 32 [2] PTR_ARRAY_a00c8008;

extern undefined * 32 [2] PTR_ARRAY_a00c8020;

extern undefined * 32 [2] PTR_ARRAY_a00c8038;

extern undefined * 32 [2] PTR_ARRAY_a00c8050;

extern undefined * 32 [2] PTR_ARRAY_a00c8068;

extern undefined * 32 [2] PTR_ARRAY_a00c8080;

extern undefined * 32 [2] PTR_ARRAY_a00c8098;

extern undefined * 32 [2] PTR_ARRAY_a00c80b0;

extern undefined * 32 [2] PTR_ARRAY_a00c80c8;

extern undefined * 32 [2] PTR_ARRAY_a00c80e0;

extern undefined * 32 [2] PTR_ARRAY_a00c80f8;

extern undefined * 32 [2] PTR_ARRAY_a00c8110;

extern undefined * 32 [2] PTR_ARRAY_a00c8128;

extern undefined * 32 [2] PTR_ARRAY_a00c8140;

extern undefined * 32 [2] PTR_ARRAY_a00c8158;

extern undefined * 32 [2] PTR_ARRAY_a00c8188;

extern undefined * 32 [2] PTR_ARRAY_a00c81a0;

extern undefined * 32 [2] PTR_ARRAY_a00c81b8;

extern undefined * 32 [2] PTR_ARRAY_a00c81d0;

extern undefined * 32 [2] PTR_ARRAY_a00c81e8;

extern undefined * 32 [2] PTR_ARRAY_a00c8200;

extern undefined * 32 [2] PTR_ARRAY_a00c8218;

extern undefined * 32 [2] PTR_ARRAY_a00c8230;

extern undefined * 32 [2] PTR_ARRAY_a00c8248;

extern undefined * 32 [2] PTR_ARRAY_a00c8260;

extern undefined * 32 [2] PTR_ARRAY_a00c8278;

extern undefined * 32 [2] PTR_ARRAY_a00c8290;

extern undefined * 32 [2] PTR_ARRAY_a00c82a8;

extern undefined * 32 [2] PTR_ARRAY_a00c82c0;

extern undefined * 32 [2] PTR_ARRAY_a00c82d8;

extern undefined * 32 [2] PTR_ARRAY_a00c82f0;

extern undefined * 32 [2] PTR_ARRAY_a00c8308;

extern undefined * 32 [2] PTR_ARRAY_a00c8338;

extern undefined * 32 [2] PTR_ARRAY_a00c8350;

extern undefined * 32 [2] PTR_ARRAY_a00c8380;

extern undefined * 32 [2] PTR_ARRAY_a00c8398;

extern undefined * 32 [2] PTR_ARRAY_a00c83b0;

extern undefined * 32 [2] PTR_ARRAY_a00c83c8;

extern undefined * 32 [2] PTR_ARRAY_a00c83e0;

extern undefined * 32 [2] PTR_ARRAY_a00c83f8;

extern undefined * 32 [2] PTR_ARRAY_a00c8410;

extern undefined * 32 [2] PTR_ARRAY_a00c8440;

extern undefined * 32 [2] PTR_ARRAY_a00c8458;

extern undefined * 32 [2] PTR_ARRAY_a00c8470;

extern undefined * 32 [2] PTR_ARRAY_a00c8488;

extern undefined * 32 [2] PTR_ARRAY_a00c84a0;

extern undefined * 32 [2] PTR_ARRAY_a00c84b8;

extern undefined * 32 [2] PTR_ARRAY_a00c84d0;

extern undefined * 32 [2] PTR_ARRAY_a00c84e8;

extern undefined * 32 [2] PTR_ARRAY_a00c8518;

extern undefined * 32 [2] PTR_ARRAY_a00c8530;

extern undefined * 32 [2] PTR_ARRAY_a00c8548;

extern undefined * 32 [2] PTR_ARRAY_a00c8560;

extern undefined * 32 [2] PTR_ARRAY_a00c8578;

extern undefined * 32 [2] PTR_ARRAY_a00c8590;

extern undefined * 32 [2] PTR_ARRAY_a00c85a8;

extern undefined * 32 [2] PTR_ARRAY_a00c85c0;

extern undefined * 32 [2] PTR_ARRAY_a00c85d8;

extern undefined * 32 [2] PTR_ARRAY_a00c8608;

extern undefined * 32 [2] PTR_ARRAY_a00c8620;

extern undefined * 32 [2] PTR_ARRAY_a00c8638;

extern undefined * 32 [2] PTR_ARRAY_a00c8650;

extern undefined * 32 [2] PTR_ARRAY_a00c8668;

extern undefined * 32 [2] PTR_ARRAY_a00c8680;

extern undefined * 32 [2] PTR_ARRAY_a00c8698;

extern undefined * 32 [2] PTR_ARRAY_a00c86c8;

extern undefined * 32 [2] PTR_ARRAY_a00c86e0;

extern undefined * 32 [2] PTR_ARRAY_a00c86f8;

extern undefined * 32 [2] PTR_ARRAY_a00c8710;

extern undefined * 32 [2] PTR_ARRAY_a00c8728;

extern undefined * 32 [2] PTR_ARRAY_a00c8740;

extern undefined * 32 [2] PTR_ARRAY_a00c8758;

extern undefined * 32 [2] PTR_ARRAY_a00c8770;

extern undefined * 32 [2] PTR_ARRAY_a00c8788;

extern undefined * 32 [2] PTR_ARRAY_a00c87a0;

extern undefined * 32 [2] PTR_ARRAY_a00c87b8;

extern undefined * 32 [2] PTR_ARRAY_a00c87d0;

extern undefined * 32 [2] PTR_ARRAY_a00c87e8;

extern undefined * 32 [2] PTR_ARRAY_a00c8818;

extern undefined * 32 [2] PTR_ARRAY_a00c8830;

extern undefined * 32 [2] PTR_ARRAY_a00c8848;

extern undefined * 32 [2] PTR_ARRAY_a00c8860;

extern undefined * 32 [2] PTR_ARRAY_a00c8878;

extern undefined * 32 [2] PTR_ARRAY_a00c8890;

extern undefined * 32 [2] PTR_ARRAY_a00c88a8;

extern undefined * 32 [2] PTR_ARRAY_a00c88c0;

extern undefined * 32 [2] PTR_ARRAY_a00c88d8;

extern undefined * 32 [2] PTR_ARRAY_a00c88f0;

extern undefined * 32 [2] PTR_ARRAY_a00c8908;

extern undefined * 32 [2] PTR_ARRAY_a00c8920;

extern undefined * 32 [2] PTR_ARRAY_a00c8938;

extern undefined * 32 [2] PTR_ARRAY_a00c8950;

extern undefined * 32 [2] PTR_ARRAY_a00c8b18;

extern undefined * 32 [2] PTR_ARRAY_a00c8b30;

extern undefined * 32 [2] PTR_ARRAY_a00c8b48;

extern undefined * 32 [10] PTR_ARRAY_a00c8e94;

extern undefined * 32 [6] PTR_ARRAY_a00c8ec8;

extern undefined * 32 [7] PTR_ARRAY_a00c8fbc;

extern undefined * 32 [6] PTR_ARRAY_a00c8fe0;

extern undefined * 32 [2] PTR_ARRAY_a00c9004;

extern undefined * 32 [3] PTR_ARRAY_a00c9010;

extern undefined * 32 [6] PTR_ARRAY_a00c9028;

extern undefined * 32 [10] PTR_ARRAY_a00c904c;

extern undefined * 32 [2] PTR_ARRAY_a00c9094;

extern undefined * 32 [3] PTR_ARRAY_a00c90e0;

extern undefined * 32 [3] PTR_ARRAY_a00c9100;

extern undefined * 32 [14] PTR_ARRAY_a00c9168;

extern undefined * 32 [2] PTR_ARRAY_a00c91ac;

extern undefined * 32 [3] PTR_ARRAY_a00c95c0;

extern undefined * 32 [3] PTR_ARRAY_a00c95e0;

extern undefined * 32 [3] PTR_ARRAY_a00c9620;

extern undefined * 32 [3] PTR_ARRAY_a00c9680;

extern undefined * 32 [3] PTR_ARRAY_a00c9700;

extern undefined * 32 [2] PTR_ARRAY_a00c9898;

extern undefined * 32 [2] PTR_ARRAY_a00ca888;

extern undefined * 32 [5] PTR_ARRAY_a00cb098;

extern undefined * 32 [18] PTR_ARRAY_a00cb0b0;

extern undefined * 32 [2] PTR_ARRAY_a00cb100;

extern undefined * 32 [2] PTR_ARRAY_a00cb10c;

extern undefined * 32 [2] PTR_ARRAY_a00cb118;

extern undefined * 32 [2] PTR_ARRAY_a00cb124;

extern undefined * 32 [2] PTR_ARRAY_a00cb130;

extern undefined * 32 [2] PTR_ARRAY_a00cb148;

extern undefined * 32 [2] PTR_ARRAY_a00cb154;

extern undefined * 32 [2] PTR_ARRAY_a00cb160;

extern undefined * 32 [2] PTR_ARRAY_a00cb16c;

extern undefined * 32 [2] PTR_ARRAY_a00cb178;

extern undefined * 32 [2] PTR_ARRAY_a00cb18c;

extern undefined * 32 [62] PTR_ARRAY_a00cb1fc;

extern undefined * 32 [2] PTR_ARRAY_a00cb2f8;

extern undefined * 32 [2] PTR_ARRAY_a00cb304;

extern undefined * 32 [2] PTR_ARRAY_a00cb310;

extern undefined * 32 [2] PTR_ARRAY_a00cb31c;

extern undefined * 32 [2] PTR_ARRAY_a00cb334;

extern undefined * 32 [2] PTR_ARRAY_a00cb340;

extern undefined * 32 [2] PTR_ARRAY_a00cb34c;

extern undefined * 32 [2] PTR_ARRAY_a00cb364;

extern undefined * 32 [2] PTR_ARRAY_a00cb370;

extern undefined * 32 [2] PTR_ARRAY_a00cb37c;

extern undefined * 32 [2] PTR_ARRAY_a00cb388;

extern undefined * 32 [2] PTR_ARRAY_a00cb394;

extern undefined * 32 [2] PTR_ARRAY_a00cb3a0;

extern undefined * 32 [2] PTR_ARRAY_a00cb3b8;

extern undefined * 32 [2] PTR_ARRAY_a00cb3c4;

extern undefined * 32 [2] PTR_ARRAY_a00cb3d0;

extern undefined * 32 [2] PTR_ARRAY_a00cb3dc;

extern undefined * 32 [2] PTR_ARRAY_a00cb3e8;

extern undefined * 32 [2] PTR_ARRAY_a00cb3f4;

extern undefined * 32 [2] PTR_ARRAY_a00cb40c;

extern undefined * 32 [2] PTR_ARRAY_a00cb418;

extern undefined * 32 [2] PTR_ARRAY_a00cb424;

extern undefined * 32 [2] PTR_ARRAY_a00cb430;

extern undefined * 32 [4] PTR_ARRAY_a00cb5e0;

extern undefined * 32 [3] PTR_ARRAY_a00cc6b8;

extern undefined * 32 [6] PTR_ARRAY_a00cc6c8;

extern undefined * 32 [18] PTR_ARRAY_a00cc6f8;

extern undefined * 32 [3] PTR_ARRAY_a00cc7c0;

extern undefined * 32 [9] PTR_ARRAY_a00cc844;

extern undefined * 32 [4] PTR_ARRAY_a00cc8a4;

extern undefined * 32 [15] PTR_ARRAY_a00cc8b8;

extern undefined * 32 [2] PTR_ARRAY_a00cd0a0;

extern undefined * 32 [2] PTR_ARRAY_a00cd0d8;

extern undefined * 32 [2] PTR_ARRAY_a00cd1a4;

extern undefined * 32 [5] PTR_ARRAY_a00cd4c0;

extern undefined * 32 [18] PTR_ARRAY_a00cd500;

extern undefined * 32 [32] PTR_ARRAY_a00cd550;

extern undefined * 32 [2] PTR_ARRAY_a00cd6a8;

extern undefined * 32 [40] PTR_ARRAY_a00cd6ec;

extern undefined * 32 [6] PTR_ARRAY_a00cd98c;

extern undefined * 32 [11] PTR_ARRAY_a00cd9a8;

extern undefined * 32 [6] PTR_ARRAY_a00cdaa0;

extern undefined * 32 [10] PTR_ARRAY_a00cdb00;

extern undefined * 32 [4] PTR_ARRAY_a00ce1f0;

extern undefined * 32 [5] PTR_ARRAY_a00ce20c;

extern undefined * 32 [4] PTR_ARRAY_a00ce2f8;

extern undefined * 32 [2] PTR_ARRAY_a00cef10;

extern undefined * 32 [2] PTR_ARRAY_a00cf1c8;

extern undefined * 32 [2] PTR_ARRAY_a00cf288;

extern undefined * 32 [12] PTR_ARRAY_a00cf37c;

extern undefined * 32 [3] PTR_ARRAY_a00cf53c;

extern undefined * 32 [4] PTR_ARRAY_a00cf684;

extern undefined * 32 [3] PTR_ARRAY_a00cfca0;

extern undefined * 32 [5] PTR_ARRAY_a00cfd90;

extern undefined * 32 [2] PTR_ARRAY_a00cfda8;

extern undefined * 32 [3] PTR_ARRAY_a00cfdb4;

extern undefined * 32 [2] PTR_ARRAY_a00cfdc4;

extern undefined * 32 [2] PTR_ARRAY_a00cfec4;

extern undefined * 32 [6] PTR_ARRAY_a00cff70;

extern undefined * 32 [111] PTR_ARRAY_a00cff9c;

extern undefined * 32 [47] PTR_ARRAY_a00d0208;

extern undefined * 32 [5] PTR_ARRAY_a00d02c8;

extern undefined * 32 [2] PTR_ARRAY_a00d02e0;

extern undefined * 32 [27] PTR_ARRAY_a00d02f0;

extern undefined * 32 [3] PTR_ARRAY_a00d0360;

extern undefined * 32 [8] PTR_ARRAY_a00d0370;

extern undefined * 32 [2] PTR_ARRAY_a00d0794;

extern undefined * 32 [2] PTR_ARRAY_a00d07a4;

extern undefined * 32 [2] PTR_ARRAY_a00d07b8;

extern undefined * 32 [2] PTR_ARRAY_a00d0828;

extern undefined * 32 [2] PTR_ARRAY_a00d083c;

extern undefined * 32 [2] PTR_ARRAY_a00d0854;

extern undefined * 32 [2] PTR_ARRAY_a00d0868;

extern undefined * 32 [5] PTR_ARRAY_a00d08ec;

extern undefined * 32 [2] PTR_ARRAY_a00d0920;

extern undefined * 32 [2] PTR_ARRAY_a00d0934;

extern undefined * 32 [2] PTR_ARRAY_a00d0940;

extern undefined * 32 [3] PTR_ARRAY_a00d0954;

extern undefined * 32 [2] PTR_ARRAY_a00d0968;

extern undefined * 32 [4] PTR_ARRAY_a00d0974;

extern undefined * 32 [2] PTR_ARRAY_a00d0988;

extern undefined * 32 [2] PTR_ARRAY_a00d0994;

extern undefined * 32 [2] PTR_ARRAY_a00d09a8;

extern undefined * 32 [2] PTR_ARRAY_a00d0a38;

extern undefined * 32 [8] PTR_ARRAY_a00d0a44;

extern undefined * 32 [2] PTR_ARRAY_a00d0a94;

extern undefined * 32 [3] PTR_ARRAY_a00d0aa8;

extern undefined * 32 [5] PTR_ARRAY_a00d0c3c;

extern string s__Game_a00ce3e8;

extern string s__game_a00cfab0;

extern string s_Back____a00cee6c;

extern string s_C_CODE_a00ce524;

extern string s_Cathy_1_a00ce958;

extern string s_Cathy_5_a00ce948;

extern string s_CdlGetlocL_a0012974;

extern string s_CdlGetlocP_a0012968;

extern string s_CdlMute_a00129ac;

extern string s_City____a00ced74;

extern string s_CITY_14_a00cea54;

extern string s_ - DEBUG_CD_a00cf910;

extern string s_demo_2_a00cecbc;

extern string s_demo_3_a00cecb4;

extern string s_demo_4_a00cecac;

extern string s_demo_5_a00ceca4;

extern string s_DEMO_MODE_a00cf578;

extern string s_E_SECOND_KAIN_ENCOUNTER_a00d0b44;

extern string s_etmode_a0012988;

extern string s_FILL_1_a00ce9d8;

extern string s_FORCE_a00ce630;

extern string s_found_a00126c8;

extern string s_found_a0012720;

extern string s_found_a0012800;

extern string s_FRAME_RATE_LOCK_a00ce544;

extern string s_GREEN_a00ce484;

extern string s_HubA____a00ced48;

extern string s_HubB____a00ced40;

extern string s_IC_COMMAND_a00ce794;

extern string s_imeout_a001234c;

extern string s_imeout_a0012664;

extern string s_ - LOADGAME_a00cf91c;

extern string s_Main_Menu_a00ce704;

extern string s_ - MAINMENU_a00cf8f0;

extern string s_morlock_a00d065c;

extern string s_movie_1_a00cecec;

extern string s_movie_2_a00cece4;

extern string s_movie_3_a00cecdc;

extern string s_movie_5_a00ceccc;

extern string s_n_loads_a00ce3b8;

extern string s_nknown_intr_a0012ac4;

extern string s_Push____a00ced7c;

extern string s_Push_1_a00cea4c;

extern string s_Push_4_a00cea3c;

extern string s_Push_7_a00cea24;

extern string s_raziel_a00cf4b0;

extern string s_raziel_a00d06f4;

extern string s_raziel_a00d0b94;

extern string s_ronin_a00d05b4;

extern string s_SCREEN_a00ce510;

extern string s_SHRINK_CELS_a00ce560;

extern string s_SIGNALS_a00ce4dc;

extern string s_skinbos_a00d0620;

extern string s_skinner_a00d0664;

extern string s_SOUL_REAVER_a00ce624;

extern string s_Sound_Glyph_a00ce6a4;

extern string s_spline - numkeysd_a00cfd60;

extern string s_STONE_1_a00ce9a8;

extern string s_STONE_5_a00ce9a0;

extern string s_Stone_Glyph_a00ce6bc;

extern string s_t_Show_a00ce738;

extern string s_te_Info_a00ce34c;

extern string s_TOMB_1_a00ce9f4;

extern string s_TOWER_1_a00cea0c;

extern string s_Train_1_a00ceab8;

extern string s_Train_7_a00ceab0;

extern string s_Train_9_a00ceaa8;

extern string s_TRICT_a00ce614;

extern string s_UNDER_1_a00cea74;

extern string s_WALL_CRAWLING_a00ce638;

extern Alignment UNK_a001a6ac;

extern Alignment UNK_a00261a4;

extern Alignment UNK_a00541fd;

extern Alignment UNK_a00748e8;

extern Alignment UNK_a0074fc8;

extern Alignment UNK_a007741d;

extern Alignment UNK_a0077608;

extern Alignment UNK_a009e2d8;

extern Alignment UNK_a00a5174;

extern Alignment UNK_a00c8a4c;

extern Alignment UNK_a00caf81;

extern Alignment UNK_a00cca55;

extern void FUN_000000b0(void);
;

extern void FUN_00012c2c(int param_1, u_short *param_2, u_short *param_3);
;

extern void FUN_00012cac(int param_1);
;

extern void FUN_00012cf8(int param_1);
;

extern void FUN_00012d44(int param_1);
;

extern void FUN_00012d90(int *param_1);
;

extern void FUN_00012ddc(void);
;

extern void FUN_00013030(int param_1, u_int *param_2);
;

extern void FUN_000130d0(int param_1, u_char param_2, byte *param_3);
;

extern void FUN_0001327c(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern int FUN_000132c4(int *param_1);
;

extern void FUN_000132f0(void);
;

extern int *FUN_00013388(int *param_1);
;

extern int FUN_000133b8(int *param_1);
;

extern void FUN_000133e8(int param_1, int *param_2);
;

extern void FUN_00013714(u_char param_1, int param_2);
;

extern u_char FUN_00013778(int param_1);
;

extern void FUN_000137a0(int param_1, DebugMenuLine *param_2);
;

extern void FUN_00013844(void);
;

extern void FUN_0001385c(void);
;

extern u_int FUN_00013874(char param_1);
;

extern void FUN_00013884(byte *param_1, int *param_2, u_char param_3, u_char param_4);
;

extern void FUN_00013a2c(char *param_1);
;

extern void FUN_00013a64(u_char param_1, u_short *param_2, byte *param_3, u_char param_4);
;

extern void FUN_00013b64(u_char param_1, int *param_2, byte *param_3);
;

extern void FUN_00013d70(int param_1, u_char param_2, byte *param_3);
;

extern void FUN_00013e84(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_000140ec(void);
;

extern void FUN_0001410c(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_000142bc(void);
;

extern void FUN_00014314(int param_1);
;

extern void FUN_0001443c(void);
;

extern void FUN_00014444(void);
;

extern void FUN_00014550(byte *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_000145a4(void);
;

extern void FUN_000145ac(int param_1);
;

extern void FUN_00014720(int param_1);
;

extern void FUN_00014a5c(u_char *param_1);
;

extern void FUN_00014b7c(int param_1);
;

extern void FUN_00014ba8(int param_1, u_char param_2);
;

extern void FUN_00014c50(short *param_1);
;

extern void FUN_00014cf4(u_int param_1, int param_2);
;

extern void FUN_0001502c(Camera *param_1);
;

extern void FUN_000154d8(int param_1, u_int param_2);
;

extern void FUN_000155a8(Camera *param_1, u_int param_2);
;

extern undefined *FUN_00015664(int *param_1, short *param_2, u_char param_3, u_char param_4);
;

extern void FUN_000156c8(Camera *param_1, int param_2);
;

extern void FUN_00015b48(undefined *param_1);
;

extern void FUN_00015e50(int param_1, int param_2);
;

extern void FUN_00015eb0(int param_1, undefined2 param_2);
;

extern void FUN_00015ed4(short *param_1);
;

extern void FUN_00015f28(int param_1, int param_2, u_char param_3);
;

extern int FUN_00016354(u_int param_1, u_int param_2);
;

extern int FUN_000163cc(short param_1, short param_2);
;

extern u_int FUN_000163fc(int param_1);
;

extern void FUN_00016498(int param_1);
;

extern void FUN_000165a4(short *param_1, short *param_2);
;

extern void FUN_00016620(short *param_1, short *param_2, short *param_3, short param_4);
;

extern void FUN_00016748(int param_1, short *param_2);
;

extern void FUN_000169c4(int param_1, u_int param_2);
;

extern void FUN_000169d8(int param_1, u_int param_2);
;

extern void FUN_000169ec(int param_1, int param_2, u_int param_3);
;

extern void FUN_00016a3c(int param_1);
;

extern void FUN_00016a5c(int param_1, u_short param_2);
;

extern void FUN_00016a98(int param_1, short param_2);
;

extern void FUN_00016b14(int param_1, short param_2);
;

extern void FUN_00016b98(u_int param_1, int param_2);
;

extern void FUN_00016c1c(int param_1, u_int param_2);
;

extern void FUN_00016cdc(int param_1, u_char param_2);
;

extern void FUN_00016ce4(int param_1, int param_2, int param_3);
;

extern void FUN_00016d94(short *param_1, short param_2);
;

extern void FUN_00016de4(int param_1, u_short *param_2, int param_3, u_short *param_4, u_short *param_5, u_short param_6);
;

extern void FUN_00016f98(int param_1, u_short *param_2, u_short *param_3, _SVector *param_4, short *param_5, short param_6);
;

extern void FUN_0001765c(int param_1, u_short *param_2, u_int param_3, u_short *param_4, u_short *param_5, u_short param_6);
;

extern void FUN_000176fc(short *param_1, short *param_2);
;

extern void FUN_00017774(u_char param_1, short *param_2, short *param_3);
;

extern void FUN_00017810(u_char param_1, u_char param_2, short *param_3, short *param_4);
;

extern void FUN_000178bc(short *param_1, short *param_2, int param_3);
;

extern int FUN_00017a08(int param_1, int *param_2, int param_3);
;

extern void FUN_00018550(u_char param_1, short param_2);
;

extern void FUN_000185c4(int param_1, u_int param_2);
;

extern void FUN_0001860c(int param_1, undefined2 *param_2, undefined2 param_3);
;

extern void FUN_00018634(undefined2 *param_1);
;

extern void FUN_00018888(short *param_1);
;

extern void FUN_00018900(int param_1);
;

extern void FUN_00018ab4(undefined2 *param_1, int param_2);
;

extern void FUN_00018b68(undefined2 *param_1, int param_2);
;

extern int FUN_00018bd4(short *param_1, u_char param_2, u_char param_3, short *param_4, short *param_5);
;

extern int FUN_00018cc8(u_char param_1, int param_2, short *param_3, int param_4);
;

extern void FUN_00018e90(u_char param_1, int param_2);
;

extern void FUN_00018f60(int param_1, short param_2);
;

extern int FUN_00018fd0(short param_1);
;

extern u_char FUN_00019088(int param_1, int param_2);
;

extern u_char FUN_00019594(int param_1, int param_2);
;

extern int FUN_000196bc(int param_1, u_short param_2, short param_3);
;

extern void FUN_00019934(int param_1);
;

extern void FUN_00019bf8(short *param_1);
;

extern void FUN_0001a074(u_short *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern int FUN_0001a590(short *param_1, short *param_2);
;

extern void FUN_0001a60c(short *param_1, short *param_2, short *param_3, undefined2 *param_4);
;

extern u_char FUN_0001a738(int param_1, int param_2, int param_3);
;

extern u_int FUN_0001a77c(short *param_1, short *param_2, short *param_3);
;

extern u_char FUN_0001a80c(undefined2 *param_1, short *param_2, short *param_3, int param_4);
;

extern void FUN_0001a9d0(undefined2 *param_1, int *param_2, u_char param_3, int *param_4, undefined2 *param_5);
;

extern void FUN_0001abb8(int *param_1, u_int *param_2, int *param_3, u_int param_4);
;

extern void FUN_0001af50(int param_1);
;

extern void FUN_0001b0c4(undefined2 *param_1);
;

extern void FUN_0001b418(short *param_1);
;

extern void FUN_0001b504(int *param_1);
;

extern void FUN_0001b750(int param_1);
;

extern void FUN_0001b838(int param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_0001b844(int param_1, u_char param_2, u_int param_3, u_int param_4);
;

extern void FUN_0001b8d4(int param_1, u_char param_2, u_int param_3, u_int param_4);
;

extern void FUN_0001b914(Camera *param_1, u_int param_2, u_int param_3);
;

extern void FUN_0001b938(Camera *param_1, u_int param_2, u_int param_3);
;

extern void FUN_0001b974(Camera *param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void FUN_0001bec4(Camera *param_1, u_int param_2, u_int param_3);
;

extern void FUN_0001bf84(short *param_1, int param_2);
;

extern void FUN_0001c030(int param_1, int param_2);
;

extern void FUN_0001c0a4(int param_1);
;

extern void FUN_0001c174(int param_1);
;

extern void FUN_0001c240(int param_1);
;

extern void FUN_0001c35c(int param_1);
;

extern void FUN_0001c448(int param_1, int param_2);
;

extern void FUN_0001c6c0(int param_1, int param_2);
;

extern void FUN_0001c8b0(int param_1);
;

extern void FUN_0001c9ac(int param_1);
;

extern void FUN_0001c9e8(int param_1);
;

extern void FUN_0001cb90(u_int param_1, undefined2 *param_2);
;

extern void FUN_0001ce84(int param_1, int param_2, undefined2 *param_3);
;

extern void FUN_0001cf44(int param_1, int *param_2, int param_3, undefined2 *param_4, short *param_5);
;

extern void FUN_0001d014(int param_1, short param_2);
;

extern u_char FUN_0001d1c4(int param_1, undefined2 *param_2, int param_3);
;

extern u_char FUN_0001d7b4(int param_1);
;

extern void FUN_0001dff0(int param_1, u_int *param_2, int param_3);
;

extern u_int FUN_0001e0f8(int param_1);
;

extern u_char FUN_0001e158(u_int *param_1, u_char *param_2);
;

extern void FUN_0001e234(int param_1, u_int *param_2);
;

extern u_int *FUN_0001e258(int *param_1, u_char param_2);
;

extern u_int *FUN_0001e338(int param_1, int param_2);
;

extern void FUN_0001e3ec(int param_1);
;

extern void FUN_0001e43c(int param_1);
;

extern u_int FUN_0001e48c(u_char *param_1, u_char *param_2, undefined2 *param_3, short *param_4, short *param_5);
;

extern void FUN_0001e718(u_char *param_1, u_char *param_2, undefined2 *param_3, short *param_4);
;

extern int FUN_0001e764(short param_1, int param_2, u_short *param_3);
;

extern void FUN_0001e7fc(int param_1, u_short *param_2, undefined2 *param_3);
;

extern void FUN_0001e9d4(int param_1, short *param_2);
;

extern void FUN_0001eaa4(int param_1, short *param_2);
;

extern void FUN_0001ec88(short param_1, int param_2, short param_3, short *param_4, int *param_5, u_char param_6, undefined *param_7, undefined2 *param_8);
;

extern u_int FUN_0001ee34(u_char param_1, u_char param_2, u_char param_3, u_char param_4, short *param_5, short *param_6, int param_7);
;

extern void FUN_0001f0b0(u_char param_1, u_char param_2, u_char param_3);
;

extern u_short *FUN_0001f0e0(u_short *param_1, int param_2, u_int param_3, undefined2 *param_4, u_int param_5, u_int param_6, u_short **param_7);
;

extern u_char FUN_0001fc60(u_char *param_1, short *param_2, short *param_3, int param_4, undefined2 *param_5);
;

extern void FUN_0001fea8(undefined2 *param_1, int param_2);
;

extern void FUN_000206dc(int param_1, int param_2);
;

extern void FUN_00020860(undefined2 *param_1, int *param_2);
;

extern u_char FUN_00020c58(short *param_1, int param_2, short *param_3);
;

extern u_char FUN_00020d2c(short *param_1, short *param_2);
;

extern u_int FUN_00020f70(int param_1, u_short *param_2, short *param_3, short *param_4);
;

extern void FUN_000213f4(int param_1, int param_2);
;

extern void FUN_0002215c(int param_1, int param_2);
;

extern void FUN_000222a4(int param_1);
;

extern u_char FUN_00022558(u_int *param_1, short *param_2, int param_3, undefined2 *param_4, u_char *param_5);
;

extern void FUN_00022c34(int *param_1, int *param_2);
;

extern u_char FUN_0002370c(int *param_1, Level *param_2);
;

extern void FUN_000237f8(int param_1, Level *param_2);
;

extern int FUN_00023a20(u_int param_1, u_int param_2, int param_3, int param_4, int *param_5);
;

extern void FUN_000241e4(int param_1, u_char param_2);
;

extern STracker *FUN_00024398(u_int param_1);
;

extern void FUN_00024608(int param_1);
;

extern void FUN_0002467c(int param_1);
;

extern void FUN_0002472c(int param_1, u_int param_2);
;

extern void FUN_000247a4(int param_1, u_int param_2);
;

extern u_char FUN_00024840(int **param_1, u_short *param_2);
;

extern int FUN_0002497c(int **param_1);
;

extern void FUN_000249a4(int **param_1, u_short param_2);
;

extern u_char FUN_000249d8(int param_1, int param_2, short *param_3, short *param_4, u_short *param_5, u_int param_6, u_int param_7);
;

extern void FUN_00024d14(void);
;

extern u_char FUN_00024d78(u_char param_1);
;

extern u_char FUN_00025994(u_char param_1, u_int param_2, int param_3);
;

extern void FUN_00026164(int *param_1, int param_2);
;

extern u_int FUN_00026cd8(int param_1, u_char *param_2, u_int param_3, u_char *param_4, u_short *param_5, u_char *param_6, u_int *param_7, u_int *param_8);
;

extern void FUN_00027b10(u_char param_1, u_char param_2);
;

extern u_int FUN_000282f4(int param_1, u_char param_2, int param_3, u_char *param_4, int param_5);
;

extern void FUN_0002a478(short *param_1, short *param_2, short *param_3);
;

extern void FUN_0002a4f4(void);
;

extern u_int *FUN_0002a5c0(u_int *param_1, u_char param_2, int param_3, int param_4);
;

extern void FUN_0002a788(u_int *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7, undefined2 param_8, undefined2 param_9, int *param_10, u_int *param_11);
;

extern void FUN_0002a830(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7, undefined2 param_8, undefined param_9, undefined param_10, undefined param_11, int param_12, int *param_13, u_int *param_14);
;

extern void FUN_0002a914(undefined2 *param_1, short param_2, short param_3, u_int *param_4);
;

extern void FUN_0002aa74(int param_1, u_short *param_2);
;

extern void FUN_0002ac14(char *param_1, u_short *param_2);
;

extern void FUN_0002ac64(int param_1);
;

extern void FUN_0002ac88(int param_1, int param_2, u_int param_3);
;

extern void FUN_0002adb8(void);
;

extern u_long *FUN_0002aec8(int param_1, int param_2, u_char *param_3, _PrimPool *param_4, u_long **param_5, long param_6, int param_7);
;

extern void FUN_0002b1e4(int *param_1, int param_2, int param_3, u_int param_4, undefined2 *param_5, undefined2 *param_6, undefined2 *param_7, undefined2 *param_8);
;

extern void FUN_0002b448(int param_1, int param_2, u_char param_3, u_char param_4, int param_5);
;

extern u_char FUN_0002b9f4(u_char param_1, u_char param_2, u_char param_3, int param_4);
;

extern u_char FUN_0002bb60(u_char param_1, u_char param_2, int param_3, u_char param_4);
;

extern u_char FUN_0002bc30(u_char *param_1, u_char *param_2, u_char *param_3, u_int *param_4, u_int *param_5, u_int *param_6, u_int param_7, u_char param_8, u_int param_9, int *param_10, int param_11, int param_12);
;

extern u_char FUN_0002c470(int param_1, u_char param_2, int param_3);
;

extern void FUN_0002c974(void);
;

extern void FUN_0002ca94(int param_1, int param_2);
;

extern void FUN_0002cb18(void);
;

extern void FUN_0002cc38(void);
;

extern void FUN_0002cc9c(short *param_1);
;

extern u_int FUN_0002ccd0(u_int param_1);
;

extern void FUN_0002ccec(int param_1, short param_2, short param_3);
;

extern void FUN_0002cef8(byte param_1, short param_2, short param_3);
;

extern int FUN_0002d12c(u_int param_1, int param_2);
;

extern void FUN_0002d270(char param_1, u_short param_2, u_short param_3);
;

extern void FUN_0002d2e0(byte *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_0002d37c(byte *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern int FUN_0002d3d4(byte *param_1);
;

extern void FUN_0002d448(void);
;

extern void FUN_0002d4fc(byte *param_1);
;

extern void FUN_0002d694(byte *param_1, short param_2);
;

extern void FUN_0002d6ec(undefined param_1);
;

extern void FUN_0002d6f8(void);
;

extern void FUN_0002d7e8(void);
;

extern void FUN_0002d8e8(void);
;

extern void FUN_0002d920(void);
;

extern void FUN_0002d940(void);
;

extern void FUN_0002d970(void);
;

extern void FUN_0002da1c(int param_1);
;

extern u_char FUN_0002dab0(void);
;

extern void FUN_0002db40(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern STracker *FUN_0002db78(byte *param_1, int param_2, u_char param_3, u_char param_4);
;

extern void FUN_0002dd74(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_0002ddcc(byte *param_1, int param_2, u_char param_3, u_char param_4);
;

extern void FUN_0002e0f0(byte *param_1, int param_2, u_char param_3, u_char param_4);
;

extern void FUN_0002e110(undefined2 param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_0002e124(u_int *param_1);
;

extern void FUN_0002e590(int param_1, int param_2);
;

extern u_char FUN_0002e6b8(byte *param_1);
;

extern void FUN_0002e700(u_char *param_1, byte *param_2, u_char *param_3);
;

extern void FUN_0002e7f4(int *param_1, int param_2);
;

extern void FUN_0002ed64(u_char *param_1);
;

extern u_char FUN_0002eda4(int *param_1, u_char param_2, int param_3, int param_4);
;

extern void FUN_0002f130(int param_1, int param_2);
;

extern void FUN_0002f1e8(int param_1);
;

extern void FUN_0002f290(int param_1);
;

extern void FUN_0002f314(int param_1);
;

extern STracker *FUN_0002f330(void);
;

extern void FUN_0002f3f4(int param_1, u_char param_2, STracker *param_3, STracker *param_4);
;

extern void FUN_0002fa1c(int param_1);
;

extern void FUN_0002fb98(void);
;

extern void FUN_0002fc44(void);
;

extern void FUN_0002fde4(void);
;

extern void FUN_0002fe24(void);
;

extern void FUN_0002fe34(void);
;

extern void FUN_0002fe40(void);
;

extern void FUN_00030044(u_int param_1, undefined *param_2, u_int param_3, _func_67 *param_4);
;

extern void FUN_00030708(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_000307e0(void);
;

extern void FUN_000308b4(void);
;

extern void FUN_000308cc(u_int param_1, undefined *param_2, u_int param_3);
;

extern void FUN_00030c80(char *param_1, u_char param_2, u_int param_3);
;

extern void FUN_00030d00(u_int param_1, char *param_2, u_int param_3, _func_67 *param_4);
;

extern int FUN_00030d2c(int param_1);
;

extern void FUN_00030d70(int param_1, int param_2, int param_3);
;

extern u_char FUN_00031140(void);
;

extern int FUN_0003114c(void);
;

extern void FUN_00031158(void);
;

extern void FUN_00031198(void);
;

extern void FUN_000311a8(void);
;

extern void FUN_000312a0(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_000312e4(u_char param_1, u_char param_2);
;

extern void FUN_00031320(u_char param_1, u_char param_2);
;

extern void FUN_0003135c(void);
;

extern void FUN_00031440(void);
;

extern void FUN_000314dc(char *param_1, int param_2);
;

extern void FUN_00031544(void);
;

extern void FUN_000315b0(u_int *param_1, u_short param_2, u_short param_3);
;

extern u_int FUN_000316d4(u_int param_1);
;

extern void FUN_00031720(u_int *param_1);
;

extern void FUN_00031a00(int param_1);
;

extern void FUN_00031a60(int param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_00031afc(void);
;

extern void FUN_00031bb0(void);
;

extern void FUN_00031c84(int param_1);
;

extern void FUN_00031d34(int param_1);
;

extern void FUN_00031dcc(int param_1);
;

extern void FUN_00031e00(void);
;

extern void FUN_00031e08(int param_1);
;

extern void FUN_00032074(u_char *param_1, u_char *param_2);
;

extern int FUN_00032114(int *param_1);
;

extern u_int FUN_000321a0(int param_1);
;

extern void FUN_000322bc(int param_1, int *param_2);
;

extern void FUN_00032304(int *param_1, _Instance *param_2, u_int param_3);
;

extern void FUN_00032574(int *param_1, u_int param_2);
;

extern int FUN_00032630(int param_1);
;

extern short *FUN_000326e8(short *param_1, int param_2);
;

extern void FUN_00032738(int param_1, int param_2);
;

extern void FUN_0003275c(int param_1);
;

extern void FUN_000327d8(_Instance *param_1, int param_2);
;

extern _Instance *FUN_00032860(Intro *param_1, short param_2, int param_3, int param_4);
;

extern void FUN_00032f90(int param_1);
;

extern void FUN_000330bc(int param_1, int param_2);
;

extern void FUN_000330f4(int param_1);
;

extern _Instance *FUN_000338d4(_Instance *param_1, u_int *param_2, int param_3, u_int param_4);
;

extern void FUN_00033b44(void);
;

extern void FUN_00033b4c(int param_1, u_int *param_2, int param_3);
;

extern void FUN_00033f04(int param_1);
;

extern void FUN_0003402c(int param_1);
;

extern u_char FUN_00034060(int param_1);
;

extern void FUN_0003409c(int param_1, u_char param_2, u_char param_3);
;

extern void FUN_00034100(int param_1, u_int param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_000341ac(int param_1, int param_2);
;

extern u_char FUN_00034208(int param_1);
;

extern int FUN_00034248(int param_1, byte *param_2, int param_3);
;

extern Intro *FUN_0003431c(int param_1, int param_2);
;

extern int FUN_000343a0(int param_1);
;

extern _Instance *FUN_000343e0(SavedBasic *param_1, int param_2, int param_3, int param_4);
;

extern _Instance *FUN_00034800(SavedBasic *param_1, long *param_2, int param_3, int param_4);
;

extern void FUN_00034c2c(int param_1);
;

extern u_int FUN_00034d90(int param_1, u_char param_2, int *param_3, u_char *param_4, u_char param_5);
;

extern void FUN_00034ea0(int param_1, int param_2, u_char param_3);
;

extern void FUN_00034f5c(int param_1);
;

extern void FUN_000350c0(int param_1);
;

extern void FUN_0003512c(int param_1);
;

extern int FUN_00035184(int param_1, int param_2);
;

extern u_int FUN_000351bc(int param_1, int param_2);
;

extern int FUN_0003520c(int param_1);
;

extern int FUN_000352f0(u_char param_1, u_char param_2, int param_3, int param_4, short *param_5, _Instance *param_6);
;

extern void FUN_00035370(int param_1, int param_2, short *param_3, short *param_4);
;

extern void FUN_000356ec(int param_1, short param_2, u_char param_3);
;

extern void FUN_000358fc(undefined *param_1, int param_2);
;

extern void FUN_0003592c(u_short *param_1, _Instance *param_2, int param_3);
;

extern void FUN_00036080(int param_1);
;

extern void FUN_000360b0(int param_1, int param_2);
;

extern void FUN_0003647c(u_char param_1, int param_2);
;

extern void FUN_00036760(int param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_00036a60(int param_1);
;

extern void FUN_00036b1c(void);
;

extern void FUN_00036b24(void);
;

extern void FUN_00036b2c(u_char param_1, u_char param_2, int param_3, int param_4);
;

extern void FUN_00036c4c(u_int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_00036cfc(int param_1, u_int param_2, int param_3, int param_4);
;

extern void FUN_00036d90(u_char param_1, u_char param_2, int param_3);
;

extern u_int FUN_00036de8(int param_1, u_short *param_2);
;

extern void FUN_00036e9c(int param_1, int param_2);
;

extern void FUN_000370b8(int param_1);
;

extern void FUN_000371cc(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_00037248(void);
;

extern void FUN_000374c8(int param_1);
;

extern void FUN_0003750c(void);
;

extern void FUN_000375b8(void);
;

extern void FUN_000375d4(void);
;

extern void FUN_00037650(void);
;

extern void FUN_000376c4(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern undefined2 *FUN_00037868(char *param_1, byte param_2, u_char param_3, undefined *param_4);
;

extern void FUN_00037948(u_char param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5);
;

extern undefined2 *FUN_00037974(int param_1);
;

extern void FUN_000379dc(char *param_1, u_char param_2, u_char param_3, undefined *param_4);
;

extern u_char FUN_00037b34(int *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_00037bbc(int *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_00037c40(int *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_int FUN_00037ce4(char *param_1);
;

extern int FUN_00037e3c(byte *param_1);
;

extern int *FUN_00037ee0(int param_1);
;

extern void FUN_00037f68(char *param_1);
;

extern u_int FUN_00037f90(char *param_1);
;

extern void FUN_00037fc4(int param_1, short param_2, undefined2 param_3, short param_4, undefined2 param_5);
;

extern void FUN_00038064(int param_1, short param_2, undefined2 param_3);
;

extern int FUN_000380ac(int *param_1, int param_2);
;

extern void FUN_00038164(void);
;

extern undefined2 *FUN_000381ac(void);
;

extern void FUN_000381e8(void);
;

extern void FUN_00038230(void);
;

extern u_char FUN_00038280(int param_1);
;

extern void FUN_00038388(u_char param_1);
;

extern u_char FUN_00038394(void);
;

extern u_char FUN_000383a0(void);
;

extern void FUN_000383ac(int param_1, int param_2);
;

extern u_int FUN_000383dc(void);
;

extern void FUN_000383e8(void);
;

extern void FUN_0003840c(void);
;

extern void FUN_00038498(char *param_1);
;

extern void FUN_000384ec(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_00038534(u_char *param_1);
;

extern byte *FUN_00038544(byte *param_1, byte *param_2);
;

extern void FUN_000385cc(byte *param_1, byte *param_2);
;

extern void FUN_00038618(byte *param_1, byte *param_2);
;

extern void FUN_00038684(u_int param_1, int param_2);
;

extern void FUN_000388d0(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_00038a64(void);
;

extern void FUN_00038b94(int param_1);
;

extern void FUN_00038ce8(void);
;

extern void FUN_00038d48(void);
;

extern void FUN_00038e08(char *param_1);
;

extern void FUN_00038e28(int param_1);
;

extern void FUN_00038e74(u_char param_1, u_char param_2, u_int param_3, u_char param_4);
;

extern void FUN_00038f70(int param_1);
;

extern void FUN_00038fd4(void);
;

extern void FUN_00039014(void);
;

extern void FUN_00039064(void);
;

extern void FUN_000391dc(u_char param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern void FUN_0003924c(u_char param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern u_char FUN_000392b8(int param_1, char *param_2, byte *param_3, u_char param_4);
;

extern u_char FUN_00039394(void *param_1);
;

extern void FUN_000399c8(int *param_1, int *param_2, int *param_3);
;

extern int FUN_00039a4c(int param_1, int param_2, int param_3);
;

extern int FUN_00039b1c(u_int param_1, u_int param_2);
;

extern void FUN_00039b7c(short *param_1);
;

extern int FUN_00039c0c(int param_1, int param_2);
;

extern u_int FUN_00039d28(u_int param_1);
;

extern u_int FUN_00039e08(u_int param_1);
;

extern void FUN_00039e98(short *param_1, short *param_2);
;

extern u_char FUN_00039ee4(short *param_1, short *param_2);
;

extern void FUN_00039fd0(int param_1, u_char param_2, short param_3);
;

extern void FUN_0003a0a0(u_char *param_1);
;

extern void FUN_0003a0bc(short *param_1, short param_2);
;

extern int FUN_0003a168(short param_1, short param_2);
;

extern void FUN_0003a18c(short *param_1, short *param_2);
;

extern void FUN_0003a1c4(u_short *param_1);
;

extern void FUN_0003a220(short *param_1, short *param_2);
;

extern void FUN_0003a2a4(short *param_1, short *param_2, undefined2 *param_3);
;

extern int FUN_0003a2f8(u_int param_1, u_int param_2);
;

extern void FUN_0003a358(u_char param_1, int param_2, short *param_3, u_int param_4);
;

extern void FUN_0003a5b0(short *param_1);
;

extern void FUN_0003a668(undefined2 *param_1, short *param_2, short *param_3);
;

extern int FUN_0003a70c(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_0003a740(short *param_1);
;

extern void FUN_0003a7c8(short *param_1);
;

extern void FUN_0003ab44(u_char *param_1, int *param_2);
;

extern void FUN_0003abd8(int param_1, int param_2);
;

extern void FUN_0003ac14(int *param_1, int *param_2);
;

extern void FUN_0003ad00(int param_1, u_short *param_2, int *param_3, int *param_4);
;

extern void FUN_0003b02c(int param_1, int param_2, u_char *param_3, int param_4, u_char param_5);
;

extern void FUN_0003b324(u_int param_1, u_int param_2, int *param_3, int *param_4, int *param_5, int *param_6);
;

extern void FUN_0003b534(u_int param_1, u_int param_2);
;

extern void FUN_0003b924(int param_1, u_char param_2, int param_3, int param_4);
;

extern void FUN_0003bc80(int *param_1, int param_2, u_char param_3, u_char param_4);
;

extern void FUN_0003bd78(u_int *param_1, short *param_2);
;

extern void FUN_0003bf68(u_int *param_1, short *param_2, short *param_3);
;

extern u_char FUN_0003c03c(int param_1, undefined2 *param_2, int param_3, u_char *param_4, int param_5, u_char param_6, u_char *param_7, u_char *param_8, _Normal *param_9);
;

extern void FUN_0003c60c(int param_1, undefined2 *param_2, int param_3, u_char *param_4, u_short *param_5);
;

extern void FUN_0003c780(int *param_1, u_int param_2);
;

extern void FUN_0003c820(int *param_1, u_int param_2, int *param_3, int param_4);
;

extern void FUN_0003c9b8(int param_1, u_char *param_2, int param_3, int param_4, u_char param_5, u_char param_6);
;

extern void FUN_0003cbac(int param_1, u_char *param_2, u_char param_3, int param_4, u_char param_5, int param_6);
;

extern void FUN_0003cd7c(int param_1, u_char param_2, u_int *param_3, int param_4, u_char param_5, int param_6);
;

extern int FUN_0003d158(int param_1, u_char *param_2, int param_3, u_char *param_4);
;

extern void FUN_0003d1dc(int *param_1, int param_2, int param_3);
;

extern void FUN_0003d214(u_char param_1, u_short *param_2);
;

extern void FUN_0003d294(int param_1);
;

extern int FUN_0003d4e4(int param_1);
;

extern u_char FUN_0003d634(int param_1);
;

extern u_char FUN_0003d66c(int param_1);
;

extern u_int FUN_0003d6a4(int param_1, u_int *param_2);
;

extern int FUN_0003d704(int param_1, u_char *param_2, u_char *param_3);
;

extern int FUN_0003d7b0(int param_1, int param_2, int param_3, int param_4);
;

extern int FUN_0003d7dc(int param_1, int param_2, int param_3, int param_4);
;

extern int FUN_0003d808(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_0003d834(int param_1, short *param_2);
;

extern void FUN_0003da24(int param_1, u_int param_2, short *param_3, short *param_4, short *param_5);
;

extern u_int FUN_0003dcfc(int param_1, int **param_2, u_short *param_3, u_short *param_4, u_short *param_5, int param_6, int param_7);
;

extern u_int FUN_0003dfe4(int param_1, u_short *param_2, u_short *param_3, u_short *param_4, int param_5);
;

extern void FUN_0003e134(int param_1, u_int param_2);
;

extern int FUN_0003e314(void);
;

extern u_int FUN_0003e3a4(u_int param_1);
;

extern void FUN_0003e48c(int param_1, short param_2);
;

extern void FUN_0003e4f0(int param_1, u_char param_2, u_char param_3, short param_4);
;

extern void FUN_0003e510(int param_1);
;

extern void FUN_0003e5fc(int param_1);
;

extern void FUN_0003e644(int param_1);
;

extern void FUN_0003e684(int param_1);
;

extern void FUN_0003e6cc(int param_1);
;

extern void FUN_0003e714(int param_1);
;

extern void FUN_0003e75c(void *param_1);
;

extern void FUN_0003e934(void);
;

extern void FUN_0003e968(void *param_1);
;

extern int FUN_0003e9b0(int *param_1);
;

extern void FUN_0003ea5c(void *param_1, void *param_2);
;

extern void FUN_0003eaa4(int param_1, int param_2);
;

extern void FUN_0003eb08(int param_1);
;

extern void FUN_0003eb64(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_0003ed00(int param_1);
;

extern MATRIX *FUN_0003ee9c(_Instance *param_1, u_char param_2);
;

extern void FUN_0003f19c(int param_1, int param_2);
;

extern SoundEffectChannel *FUN_0003f1c8(undefined *param_1);
;

extern void FUN_0003f214(int param_1);
;

extern SoundEffectChannel *FUN_0003f240(int param_1);
;

extern void FUN_0003f26c(char *param_1, byte *param_2, short *param_3, int param_4, int param_5, int param_6, u_int *param_7);
;

extern void FUN_0003f3e8(char *param_1, byte *param_2);
;

extern u_char FUN_0003f554(u_int param_1, int param_2, int param_3);
;

extern void FUN_0003f648(byte *param_1, int param_2);
;

extern void FUN_0003f6d4(short *param_1, int param_2, int param_3, int param_4, byte *param_5, int param_6);
;

extern void FUN_0003fb60(short *param_1, byte *param_2, int param_3);
;

extern void FUN_0003fefc(int param_1);
;

extern void FUN_0003ff1c(byte *param_1);
;

extern u_char FUN_0003ff78(char *param_1, int param_2);
;

extern void FUN_00040074(byte *param_1, int param_2, int param_3);
;

extern void FUN_00040134(byte *param_1, int param_2, int param_3);
;

extern void FUN_00040238(short *param_1, int param_2, u_int *param_3, byte *param_4, byte *param_5);
;

extern u_char FUN_00040580(short *param_1, u_char param_2, u_char param_3, int param_4, int param_5);
;

extern u_char FUN_000407a8(short *param_1, u_char param_2, u_char param_3, int param_4, int param_5);
;

extern void FUN_000409d8(u_char param_1, u_char param_2, u_int param_3, u_char param_4);
;

extern void FUN_00040a88(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_00040aac(int param_1, undefined param_2);
;

extern void FUN_00040acc(int param_1);
;

extern void FUN_00040b00(u_int param_1);
;

extern void FUN_00040b34(int param_1);
;

extern void FUN_00040b54(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_00040b84(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_00040bb4(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_00040bf4(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_00040c24(void);
;

extern void FUN_00040c88(void);
;

extern void FUN_00040cc0(void);
;

extern void FUN_00040ce0(void);
;

extern void FUN_00040ce8(int param_1);
;

extern void FUN_00040d08(int param_1);
;

extern void FUN_00040d28(u_int param_1);
;

extern u_int FUN_00040d48(u_int param_1);
;

extern void FUN_00040d80(u_char param_1);
;

extern u_int FUN_00040da0(u_int param_1, u_int param_2, u_int param_3, short param_4);
;

extern u_char FUN_00040ddc(int param_1, u_int param_2, u_int param_3, short param_4);
;

extern void FUN_00041024(u_char param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern void FUN_000413b4(u_char param_1);
;

extern void FUN_00041444(void);
;

extern void FUN_0004149c(u_char param_1);
;

extern void FUN_0004155c(u_char param_1);
;

extern void FUN_000415e8(undefined2 *param_1, int param_2, int param_3, int param_4);
;

extern void FUN_00041758(int *param_1, short *param_2, u_int param_3);
;

extern u_int FUN_0004181c(u_short **param_1, u_int *param_2);
;

extern int FUN_000418b0(short **param_1, short *param_2, u_int param_3);
;

extern u_char FUN_000419e0(int param_1, short *param_2);
;

extern int FUN_00041a48(int *param_1);
;

extern int FUN_00041ad4(int *param_1, undefined2 *param_2);
;

extern int FUN_00041afc(int *param_1, undefined2 *param_2);
;

extern undefined *FUN_00041b24(int *param_1, short *param_2);
;

extern undefined *FUN_00041b84(int *param_1, u_short *param_2);
;

extern undefined2 *FUN_00041be4(int *param_1, short *param_2, short *param_3);
;

extern u_char FUN_00041fac(int *param_1, short *param_2, undefined2 *param_3);
;

extern u_char FUN_000421bc(int *param_1, short *param_2, u_int param_3);
;

extern u_char FUN_000422f0(int *param_1, short *param_2);
;

extern u_char FUN_0004240c(int *param_1, u_short *param_2);
;

extern u_char FUN_00042538(int *param_1, short *param_2, int param_3, u_char param_4);
;

extern u_char FUN_0004271c(int *param_1, u_short *param_2, int param_3);
;

extern undefined *FUN_00042890(int *param_1, short *param_2, int param_3, u_char param_4);
;

extern undefined *FUN_000428f0(int *param_1, u_short *param_2, int param_3);
;

extern void FUN_00042950(int *param_1);
;

extern void FUN_00042a30(int **param_1, int param_2);
;

extern int *FUN_00042aa0(int param_1);
;

extern int **FUN_00042af0(int param_1);
;

extern undefined2 *FUN_00042b60(u_char param_1, undefined param_2);
;

extern void FUN_00042bfc(int param_1, int param_2, int param_3);
;

extern void FUN_00042cb0(int param_1, u_char param_2);
;

extern int **FUN_0004314c(int param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5, int param_6, undefined *param_7, u_char param_8, int *param_9, short param_10);
;

extern void FUN_00043248(void);
;

extern void FUN_00043298(int param_1);
;

extern u_int FUN_000432e8(int param_1);
;

extern void FUN_00043400(int param_1, u_char param_2, short *param_3, u_char param_4, int param_5, int param_6, undefined *param_7, int *param_8, u_short param_9);
;

extern void FUN_00043e84(int param_1, u_char param_2, short *param_3, u_char param_4, int param_5, int param_6, undefined *param_7, int *param_8, u_short param_9);
;

extern void FUN_00044a74(int param_1, u_char param_2, short *param_3, u_char param_4, u_short *param_5, int param_6, undefined *param_7, int *param_8, u_short param_9);
;

extern void FUN_00044bc8(int param_1, u_char param_2, short *param_3, u_char param_4, int param_5, undefined *param_6, int *param_7, short param_8);
;

extern void FUN_00044cdc(int param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5, u_char param_6, u_char param_7);
;

extern void FUN_00044d14(int param_1, short *param_2, int param_3);
;

extern void FUN_00044e68(short *param_1);
;

extern void FUN_00045018(int param_1, u_int param_2, int param_3, int param_4);
;

extern void FUN_000450b4(u_int param_1, int param_2, int param_3);
;

extern void FUN_00045184(int param_1);
;

extern void FUN_00045380(u_char param_1, u_char param_2, u_char *param_3);
;

extern void FUN_000453cc(int param_1, u_int *param_2, int param_3, u_char *param_4);
;

extern void FUN_00046ac8(int param_1, int *param_2);
;

extern int FUN_00046b00(int param_1, int param_2, int param_3);
;

extern void FUN_00046b3c(undefined2 *param_1, undefined2 *param_2, undefined2 *param_3, short param_4);
;

extern void FUN_00046cec(int param_1, u_int param_2, int param_3);
;

extern u_int *FUN_00046d98(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, int param_5, undefined2 *param_6, u_int param_7, u_int param_8, u_int param_9, u_int param_10);
;

extern void FUN_00046e9c(void);
;

extern void FUN_00046f7c(void);
;

extern void FUN_00047010(u_char param_1, int param_2, u_char param_3, int param_4);
;

extern void FUN_000471d4(int **param_1, int param_2);
;

extern void FUN_00047388(void);
;

extern void FUN_000476e0(int param_1);
;

extern int FUN_00047914(int param_1, u_short param_2, u_short param_3, u_int param_4, undefined2 param_5, short param_6, short param_7, u_char param_8, u_char param_9);
;

extern void FUN_00047be4(int **param_1, int param_2);
;

extern void FUN_00047f68(int param_1, undefined2 *param_2, u_short param_3, u_short param_4);
;

extern void FUN_00047ff8(int param_1, int param_2);
;

extern void FUN_00048068(int param_1, int param_2);
;

extern u_int FUN_000486f4(int param_1, int param_2);
;

extern void FUN_00048ccc(int param_1, undefined2 *param_2, undefined2 param_3, undefined2 param_4, u_int param_5, undefined2 *param_6, undefined2 *param_7, u_char param_8, short param_9);
;

extern int **FUN_00048dbc(undefined2 *param_1, undefined2 *param_2, undefined2 *param_3, int param_4, int *param_5, short param_6, int param_7, int param_8);
;

extern void FUN_00048f28(void);
;

extern void FUN_00049060(void);
;

extern void FUN_0004908c(void);
;

extern u_char *FUN_000492c0(u_char param_1, short param_2, undefined2 param_3);
;

extern u_char FUN_0004935c(int param_1, short param_2, int param_3);
;

extern u_char *FUN_00049440(int param_1, short param_2);
;

extern int FUN_00049568(void);
;

extern void FUN_000495a8(u_char *param_1, undefined2 *param_2);
;

extern void FUN_000496c0(void);
;

extern void FUN_00049870(void);
;

extern void FUN_000499c8(void);
;

extern void FUN_00049c0c(void);
;

extern void FUN_00049e9c(u_char param_1, u_char param_2, undefined param_3);
;

extern void FUN_0004a8dc(int param_1, undefined2 *param_2, void *param_3, int param_4, int param_5, undefined2 *param_6, undefined2 *param_7, u_int param_8, short param_9, short param_10);
;

extern void FUN_0004a9e4(u_char param_1);
;

extern void FUN_0004aad8(u_char param_1, u_char param_2, int param_3);
;

extern void FUN_0004ac18(u_char param_1);
;

extern void FUN_0004ac24(int param_1);
;

extern void FUN_0004b014(void);
;

extern void FUN_0004b01c(int param_1, u_char param_2, u_char param_3, u_char *param_4);
;

extern void FUN_0004b26c(int param_1, int *param_2, u_short *param_3);
;

extern void FUN_0004b3a0(int param_1);
;

extern void FUN_0004b3a8(int param_1);
;

extern void FUN_0004b454(short *param_1, short *param_2, short *param_3);
;

extern void FUN_0004b4c8(int param_1, int param_2, u_char *param_3, int param_4, undefined param_5);
;

extern void FUN_0004b648(int param_1);
;

extern void FUN_0004b98c(u_char *param_1);
;

extern void FUN_0004b99c(u_char *param_1);
;

extern undefined2 *FUN_0004ba38(int param_1, undefined2 param_2, u_char *param_3, int param_4, int param_5, undefined2 param_6, undefined2 param_7);
;

extern void FUN_0004bb98(int param_1, short param_2, short param_3);
;

extern void FUN_0004bbb4(int param_1, int param_2, int param_3, u_char *param_4, int param_5, int param_6, undefined2 param_7);
;

extern void FUN_0004bc0c(int param_1, undefined2 param_2, undefined param_3, u_char *param_4, int param_5, int param_6, undefined2 param_7);
;

extern void FUN_0004bc54(int param_1, undefined2 param_2, u_char *param_3, int param_4, int param_5, undefined2 param_6, undefined2 param_7, short param_8);
;

extern void FUN_0004bc9c(int param_1, int param_2);
;

extern void FUN_0004bd30(u_char *param_1, int param_2);
;

extern void FUN_0004bdb8(int param_1, u_char *param_2, u_char param_3);
;

extern void FUN_0004c03c(u_char *param_1, u_int *param_2, int param_3, u_char param_4);
;

extern u_char *FUN_0004c3d0(u_char param_1, u_int param_2, u_char *param_3, undefined2 param_4, int param_5, int param_6, int param_7, u_char param_8, u_char param_9, u_char param_10, u_char param_11, u_char param_12, u_char param_13, u_char param_14, u_char param_15, u_char param_16, int param_17, undefined2 param_18, undefined2 param_19);
;

extern void FUN_0004c59c(u_char *param_1, int param_2);
;

extern void FUN_0004c7a8(int param_1);
;

extern u_char FUN_0004c958(void);
;

extern void FUN_0004cc64(int param_1, int param_2, u_char param_3, u_char param_4, int param_5);
;

extern void FUN_0004cd20(int param_1, int param_2, u_int param_3, u_int param_4, int param_5);
;

extern u_char *FUN_0004cec8(u_char param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7, undefined2 param_8, undefined2 param_9, u_char param_10, u_char param_11);
;

extern void FUN_0004cfd0(int param_1, int param_2, undefined2 param_3, u_int param_4, int param_5, undefined2 param_6, u_int param_7, undefined2 param_8);
;

extern u_char *FUN_0004d080(int param_1, int param_2, int param_3, int param_4);
;

extern u_char FUN_0004d1e0(int param_1, int param_2, int param_3, int param_4);
;

extern u_char *FUN_0004d3ac(u_char param_1, int param_2);
;

extern u_int FUN_0004d48c(u_int param_1);
;

extern void FUN_0004d4e0(int param_1);
;

extern void FUN_0004d514(int param_1);
;

extern void FUN_0004d540(u_char param_1, undefined2 param_2, undefined2 param_3, int param_4);
;

extern void FUN_0004d5e4(_Instance *param_1, undefined *param_2, int param_3);
;

extern void FUN_0004d940(int param_1);
;

extern void FUN_0004d994(u_char param_1, u_int param_2);
;

extern void FUN_0004da68(u_char param_1, u_char param_2, u_int param_3, u_int param_4, int *param_5, int *param_6, int param_7);
;

extern void FUN_0004db34(int param_1);
;

extern void FUN_0004de38(int param_1, int param_2);
;

extern void FUN_0004e264(int param_1, u_char param_2, u_char param_3);
;

extern void FUN_0004e3b0(void);
;

extern void FUN_0004e3f0(int param_1, char *param_2, short *param_3, short *param_4, u_int *param_5, int param_6);
;

extern void FUN_0004e668(u_char param_1, u_int param_2);
;

extern int FUN_0004e778(u_char *param_1);
;

extern void FUN_0004e7d0(u_char *param_1, char *param_2, u_char *param_3, u_char param_4, u_char param_5, u_char param_6, undefined2 param_7, undefined2 param_8, undefined2 param_9, u_int param_10, int param_11);
;

extern void FUN_0004ea7c(char *param_1, char *param_2, char param_3, short param_4);
;

extern void FUN_0004eac0(u_char *param_1, char *param_2, u_char *param_3, u_char param_4, u_char param_5, u_char param_6, undefined2 param_7, undefined2 param_8, undefined2 param_9, u_char param_10, int param_11);
;

extern void FUN_0004ee54(u_char param_1, int param_2);
;

extern void FUN_0004f148(int param_1, int param_2, u_int *param_3, u_int *param_4, short *param_5, short *param_6, u_int param_7, u_int param_8);
;

extern void FUN_0004f2e4(u_char *param_1, u_char param_2, u_char *param_3, u_int param_4, u_int *param_5, u_int *param_6, u_char param_7, u_char param_8, int param_9);
;

extern void FUN_0004f7d4(u_char *param_1, int param_2, int param_3, int param_4, int param_5, int param_6, u_int param_7);
;

extern void FUN_0004fc50(int param_1, short *param_2, short *param_3);
;

extern void FUN_0004fd2c(int param_1);
;

extern void FUN_0004fd4c(int param_1, int *param_2);
;

extern void FUN_0004fd78(int *param_1);
;

extern int *FUN_0004fde4(int param_1);
;

extern void FUN_0004fe1c(int param_1, int param_2);
;

extern void FUN_0004fe84(int param_1);
;

extern void FUN_0004fea4(int param_1, int param_2);
;

extern void FUN_0005027c(u_char param_1, int param_2, u_short param_3);
;

extern void FUN_000502f0(void);
;

extern int FUN_00050358(u_int param_1);
;

extern u_int FUN_000503c0(u_int param_1);
;

extern u_char FUN_0005042c(int param_1);
;

extern undefined2 *FUN_00050464(int param_1, byte param_2);
;

extern void FUN_0005063c(int param_1, undefined2 *param_2);
;

extern void FUN_00050684(int param_1, int param_2);
;

extern void FUN_00050708(int param_1);
;

extern void FUN_000507bc(char param_1);
;

extern int FUN_00050854(int param_1);
;

extern int FUN_00050860(void);
;

extern void FUN_00050870(void);
;

extern void FUN_000508a0(void);
;

extern void FUN_0005093c(int param_1);
;

extern void FUN_00050948(int param_1);
;

extern u_int FUN_00050954(int param_1);
;

extern undefined2 *FUN_00050988(char **param_1, byte param_2, char **param_3);
;

extern void FUN_00050b00(int param_1, int param_2, u_char param_3, int param_4);
;

extern void FUN_00050b24(MemHeader *param_1);
;

extern void FUN_00050bd8(void);
;

extern void FUN_00050df0(int param_1, int param_2, _MultiSignal *param_3);
;

extern void FUN_000516e8(int **param_1, int param_2, int *param_3, int *param_4);
;

extern void FUN_00051788(int param_1, int param_2, Object *param_3);
;

extern void FUN_00051cf8(int param_1, u_char param_2, int param_3);
;

extern undefined *FUN_00051d1c(int param_1);
;

extern undefined *FUN_00051d40(byte *param_1, undefined *param_2, u_char param_3, u_char param_4);
;

extern void FUN_00051fec(u_char param_1, undefined2 param_2);
;

extern void FUN_00052068(void);
;

extern void FUN_0005209c(short param_1);
;

extern void FUN_000520cc(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_000520e4(u_int param_1);
;

extern void FUN_000520f4(u_char param_1);
;

extern void FUN_00052158(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_00052170(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_0005223c(void);
;

extern u_int FUN_00052768(int param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern undefined *FUN_00052790(char *param_1, char *param_2, int param_3, u_char param_4, u_char param_5);
;

extern undefined *FUN_00052be4(int param_1);
;

extern undefined *FUN_00052c60(u_int *param_1, int param_2);
;

extern u_char FUN_00052d80(char *param_1, u_char param_2, u_char param_3);
;

extern undefined *FUN_00052e34(u_char param_1);
;

extern void FUN_00052ea4(void);
;

extern void FUN_00052ec0(int param_1, int param_2);
;

extern void FUN_0005306c(int param_1, int param_2);
;

extern u_char FUN_000530d4(void);
;

extern void FUN_000530e8(void);
;

extern void FUN_00053100(u_char param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern void FUN_0005346c(int param_1);
;

extern void FUN_000534f0(int param_1);
;

extern u_int FUN_00053670(u_short param_1, u_int param_2);
;

extern int FUN_000538b0(int param_1);
;

extern void FUN_000538dc(int param_1);
;

extern void FUN_000539ec(int param_1);
;

extern void FUN_00053ab4(void);
;

extern void FUN_00053b90(int param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_00053e98(u_int *param_1, u_int param_2, u_int param_3, int param_4);
;

extern u_int FUN_00054160(void);
;

extern void FUN_00054214(u_char param_1, u_char param_2, u_int param_3, u_char param_4);
;

extern u_char FUN_00054568(int param_1);
;

extern void FUN_000545a4(int param_1);
;

extern u_char FUN_000546b0(void);
;

extern void FUN_000546f0(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_00054774(u_char param_1, u_char param_2, u_int param_3);
;

extern u_char FUN_000547ac(void);
;

extern int FUN_000547b4(void);
;

extern undefined *FUN_000547e8(void);
;

extern u_char FUN_000547f0(int param_1);
;

extern u_char FUN_00054808(int param_1);
;

extern undefined *FUN_00054838(int param_1, int param_2, int param_3);
;

extern u_char *FUN_00054914(int param_1, int param_2, u_char *param_3);
;

extern void FUN_00054964(int param_1, u_int *param_2);
;

extern void FUN_00054a1c(int param_1);
;

extern void FUN_00054a98(int param_1);
;

extern void FUN_00054b04(void);
;

extern void FUN_00054b94(int param_1);
;

extern void FUN_00054be4(int param_1);
;

extern void FUN_00054c24(int param_1);
;

extern void FUN_00054c74(int param_1);
;

extern u_int FUN_00054ce4(int param_1);
;

extern void FUN_00054d04(int param_1);
;

extern void FUN_00054da4(int param_1, u_int param_2);
;

extern void FUN_00054e80(int param_1, u_short param_2);
;

extern u_char FUN_00054eb8(u_char param_1, u_char param_2);
;

extern void FUN_00054ed0(int param_1, undefined param_2);
;

extern void FUN_00054ee4(int param_1);
;

extern void FUN_00054f24(void);
;

extern void FUN_00054fbc(void);
;

extern void FUN_00054fd8(void);
;

extern u_char FUN_00055064(u_char *param_1, int param_2);
;

extern void FUN_0005525c(int param_1, int param_2);
;

extern void FUN_00055678(int param_1, u_int param_2);
;

extern void FUN_000559d8(int param_1);
;

extern void FUN_00055d0c(int param_1, u_int param_2);
;

extern void FUN_00056074(int param_1, int param_2);
;

extern void FUN_00056b34(int param_1, int param_2, u_char param_3);
;

extern void FUN_00056ba0(int param_1, int param_2, int param_3);
;

extern u_int FUN_00057114(u_int param_1, undefined param_2, undefined param_3, undefined2 param_4);
;

extern u_char FUN_00057178(u_char param_1);
;

extern void FUN_000571b4(void);
;

extern u_char FUN_000571e4(int param_1);
;

extern u_char FUN_00057254(int param_1);
;

extern u_char FUN_0005730c(short param_1);
;

extern u_char FUN_00057380(u_int param_1);
;

extern u_char FUN_00057438(u_char param_1, u_int param_2, u_int param_3, short param_4);
;

extern u_int FUN_0005747c(u_int param_1);
;

extern void FUN_000574c4(undefined param_1, undefined param_2, undefined param_3, u_char param_4, undefined2 param_5);
;

extern void FUN_000575b8(byte *param_1);
;

extern int FUN_000581a8(int param_1);
;

extern void FUN_0005829c(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_00058344(int param_1, u_int param_2, int param_3, int param_4, short param_5, int param_6, int param_7, int param_8, int param_9, u_int *param_10, short param_11);
;

extern void FUN_00058764(int param_1, u_int param_2, int param_3, int param_4, short param_5, int param_6, int param_7, int param_8, int param_9, u_int *param_10, int param_11);
;

extern void FUN_00058bd8(char *param_1, int param_2, int param_3, int param_4);
;

extern void FUN_00058c98(char *param_1);
;

extern void FUN_00058cd0(void);
;

extern int FUN_00058cf4(byte *param_1);
;

extern int FUN_00058d60(int param_1);
;

extern STracker *FUN_00058db0(Level *param_1);
;

extern void FUN_00058ee4(int param_1);
;

extern u_char FUN_00058fac(byte *param_1, byte **param_2);
;

extern void FUN_00059014(byte *param_1);
;

extern void FUN_00059038(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_0005912c(byte *param_1);
;

extern int FUN_00059150(byte *param_1, int param_2, u_char param_3, u_char param_4);
;

extern int FUN_0005930c(byte *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_0005935c(int param_1, int param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_0005944c(int param_1);
;

extern void FUN_000594bc(char *param_1);
;

extern u_char FUN_000595a4(byte *param_1);
;

extern void FUN_00059668(int param_1);
;

extern void FUN_00059918(int param_1);
;

extern Level *FUN_00059970(int param_1);
;

extern STracker *FUN_000599cc(int param_1);
;

extern void FUN_00059a20(int *param_1);
;

extern u_int FUN_00059b50(void);
;

extern u_char FUN_00059b64(int param_1, int param_2);
;

extern void FUN_00059be4(int param_1);
;

extern void FUN_00059c38(int param_1, short param_2, short param_3);
;

extern void FUN_00059cc8(STracker *param_1);
;

extern void FUN_0005a110(STracker *param_1);
;

extern void FUN_0005a3a4(_MultiSignal *param_1, _MultiSignal *param_2, int param_3);
;

extern STracker *FUN_0005a674(Level *param_1);
;

extern void FUN_0005a724(Object *param_1, Object *param_2, int param_3);
;

extern void FUN_0005a9c8(int param_1, u_char param_2);
;

extern void FUN_0005aa0c(int param_1, u_char param_2, int param_3);
;

extern void FUN_0005aac0(void);
;

extern u_char *FUN_0005ab40(int param_1, byte *param_2, int param_3);
;

extern void FUN_0005ad60(int param_1);
;

extern void FUN_0005ae44(int *param_1, int param_2, int *param_3);
;

extern void FUN_0005aef0(int param_1);
;

extern void FUN_0005af40(int *param_1, int param_2);
;

extern void FUN_0005b130(int param_1);
;

extern void FUN_0005b1a8(int param_1, int param_2);
;

extern void FUN_0005b228(int param_1, int param_2);
;

extern void FUN_0005b2f0(STracker *param_1, int param_2);
;

extern int FUN_0005b38c(byte *param_1);
;

extern void FUN_0005b3f0(_StreamUnit *param_1);
;

extern void FUN_0005b440(int param_1);
;

extern void FUN_0005b470(void);
;

extern void FUN_0005b4a0(void);
;

extern void FUN_0005b4d8(void);
;

extern u_char FUN_0005b510(void);
;

extern u_int FUN_0005b51c(void);
;

extern u_int FUN_0005b528(void);
;

extern u_int FUN_0005b53c(void);
;

extern void FUN_0005b57c(int param_1);
;

extern u_char FUN_0005b644(int param_1);
;

extern void FUN_0005b69c(int param_1);
;

extern void FUN_0005b6d0(void);
;

extern u_char FUN_0005b714(void);
;

extern void FUN_0005b834(int param_1);
;

extern u_char FUN_0005b8a4(void);
;

extern void FUN_0005b984(int param_1, STracker *param_2, short *param_3);
;

extern void FUN_0005bb4c(int *param_1, short *param_2);
;

extern void FUN_0005bcb0(short *param_1, int param_2, short *param_3);
;

extern void FUN_0005bd44(int param_1, int param_2, short *param_3);
;

extern void FUN_0005be7c(int *param_1, short *param_2);
;

extern void FUN_0005bec0(int param_1, short *param_2);
;

extern void FUN_0005bfb0(int param_1, int param_2, short *param_3);
;

extern void FUN_0005c008(int param_1, int param_2, short *param_3);
;

extern void FUN_0005c09c(int param_1, int param_2, short *param_3);
;

extern void FUN_0005c0f4(int param_1, int param_2, short *param_3);
;

extern void FUN_0005c198(short *param_1, short *param_2);
;

extern void FUN_0005c24c(short *param_1, int param_2, short *param_3);
;

extern void FUN_0005c2a0(int param_1, int param_2, short *param_3);
;

extern void FUN_0005c2ec(int **param_1, short *param_2);
;

extern void FUN_0005c39c(u_char param_1, int param_2, short *param_3);
;

extern void FUN_0005c3e4(u_char param_1, int param_2, short *param_3, int param_4);
;

extern void FUN_0005c500(u_char param_1, int param_2, short *param_3);
;

extern void FUN_0005c558(int param_1, short *param_2);
;

extern void FUN_0005c5c8(int param_1, int param_2, short *param_3);
;

extern void FUN_0005c6f8(char *param_1);
;

extern void FUN_0005c7f8(int param_1, int param_2);
;

extern void FUN_0005c910(int param_1);
;

extern void FUN_0005c968(int param_1);
;

extern void FUN_0005c9d0(int param_1);
;

extern void FUN_0005ca20(void);
;

extern void FUN_0005cb94(int *param_1);
;

extern void FUN_0005d084(int *param_1);
;

extern void FUN_0005d538(int *param_1, int param_2);
;

extern void FUN_0005d904(int *param_1, int param_2);
;

extern void FUN_0005dcd8(u_short *param_1, int *param_2);
;

extern void FUN_0005dfc0(u_int *param_1, u_int *param_2, int param_3, u_int *param_4);
;

extern void FUN_0005e014(u_short *param_1, int *param_2);
;

extern void FUN_0005e1ac(void);
;

extern void FUN_0005e2fc(int param_1);
;

extern void FUN_0005e3d8(int param_1, int param_2);
;

extern void FUN_0005e4ac(void);
;

extern void FUN_0005e504(void);
;

extern void FUN_0005e694(void);
;

extern int FUN_0005e6a4(int *param_1, short *param_2);
;

extern int FUN_0005e830(int param_1, int param_2, u_char param_3, int *param_4);
;

extern void FUN_0005e8c0(int *param_1, int *param_2, int *param_3, int param_4, int param_5);
;

extern u_int FUN_0005e948(short *param_1, u_char param_2, int *param_3);
;

extern u_int FUN_0005ebf0(int param_1, short *param_2);
;

extern u_int FUN_0005f1bc(int param_1, int param_2, int param_3);
;

extern void FUN_0005f4e0(short *param_1, u_char param_2, int param_3, int param_4, u_int param_5);
;

extern void FUN_0005f5cc(int param_1, u_char param_2, int *param_3, int param_4, short *param_5);
;

extern int FUN_0005f678(int param_1, int param_2);
;

extern void FUN_0005f6d8(int param_1, int param_2);
;

extern void FUN_0005f748(int param_1, int param_2);
;

extern void FUN_0005f7a0(void);
;

extern int FUN_0005f800(int param_1);
;

extern void FUN_0005f878(u_char param_1, int param_2, int *param_3, u_char param_4);
;

extern void FUN_0005fbc4(int param_1, int param_2, int param_3, u_short *param_4);
;

extern void FUN_0005ffa0(void);
;

extern u_int FUN_00060058(byte *param_1);
;

extern void FUN_00060198(void);
;

extern void FUN_000601a8(char *param_1, u_char param_2, u_char param_3, undefined *param_4);
;

extern void FUN_00060204(void);
;

extern void FUN_00060244(u_char *param_1, u_char *param_2);
;

extern u_char *FUN_000602a0(void);
;

extern u_char *FUN_000602e0(void);
;

extern u_char FUN_00060370(u_char *param_1);
;

extern u_char FUN_00060390(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char *FUN_00060730(char *param_1, u_char param_2, u_char param_3, u_char param_4, u_char *param_5, int param_6);
;

extern void FUN_00060830(char *param_1, byte param_2, u_char param_3, u_char param_4, u_char param_5, u_char *param_6, undefined param_7);
;

extern void FUN_000608b8(char *param_1, u_char param_2, undefined param_3);
;

extern void FUN_00060920(char *param_1, u_char param_2, u_char param_3, u_char param_4, u_char *param_5, byte param_6);
;

extern void FUN_000609a4(char *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_000609e0(void);
;

extern void FUN_00060a20(u_char param_1);
;

extern u_char FUN_00060a68(char *param_1, u_int param_2);
;

extern void FUN_00060ab4(byte *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_00060b14(char *param_1, undefined *param_2);
;

extern void FUN_00060c74(_MultiSignal *param_1, int param_2, int param_3);
;

extern void FUN_00060ce8(void);
;

extern void FUN_00060d54(_MultiSignal *param_1);
;

extern void FUN_00060db4(void);
;

extern void FUN_00060e2c(void);
;

extern void FUN_00060e94(short param_1);
;

extern int FUN_00060ec4(void);
;

extern void FUN_00060ee4(void);
;

extern void FUN_00061004(void);
;

extern EventTimer *FUN_000611c8(void);
;

extern void FUN_00061238(u_int *param_1);
;

extern void FUN_00061268(void);
;

extern void FUN_00061298(void);
;

extern void FUN_000612ec(void);
;

extern WaterLevelProcess *FUN_0006132c(void);
;

extern void FUN_00061368(void);
;

extern void FUN_000614a0(void);
;

extern void FUN_000614c8(int *param_1);
;

extern void FUN_000616f8(int param_1, int param_2);
;

extern void FUN_00061858(int param_1, int param_2);
;

extern void FUN_00061a30(int *param_1, u_char param_2);
;

extern u_char FUN_00061ad0(long param_1, Event *param_2, ScriptPCode *param_3);
;

extern u_int FUN_00061c48(u_char param_1, int param_2);
;

extern u_char FUN_00061d38(u_char *param_1, int param_2, int param_3, u_int param_4);
;

extern u_int *FUN_00061de8(int param_1, int param_2);
;

extern void FUN_00061e80(int param_1);
;

extern int FUN_00061eac(int param_1, int param_2);
;

extern void FUN_00061f0c(int *param_1);
;

extern void FUN_00061f58(int *param_1);
;

extern void FUN_00061fb0(int *param_1, int param_2);
;

extern void FUN_000621e4(int *param_1, int param_2);
;

extern void FUN_0006222c(int *param_1, int param_2);
;

extern void FUN_00062274(int *param_1, int param_2, undefined2 param_3);
;

extern void FUN_000622c4(u_char *param_1, u_char param_2, undefined2 param_3);
;

extern void FUN_000622dc(u_char *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, u_char param_5);
;

extern void FUN_0006230c(int *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, u_char param_5);
;

extern void FUN_00062384(u_char *param_1, undefined2 *param_2);
;

extern u_char FUN_000623dc(int *param_1, int param_2);
;

extern void FUN_00062470(int *param_1);
;

extern u_char FUN_00062508(u_char param_1, int param_2, u_char param_3, int param_4);
;

extern u_char FUN_00062598(u_char param_1, u_char *param_2, int param_3);
;

extern u_char FUN_00062604(u_char param_1, StackType *param_2, u_char param_3, int param_4);
;

extern u_char FUN_00062c68(u_char param_1, int param_2, int param_3, int param_4);
;

extern int FUN_00062d48(int *param_1);
;

extern u_char FUN_00062de4(_PCodeStack *param_1, StackType *param_2, u_char param_3, int param_4);
;

extern u_char FUN_00063288(int *param_1, int param_2, int param_3, int param_4);
;

extern u_char FUN_00063364(int *param_1, int param_2, int param_3, int param_4);
;

extern u_char FUN_000633f4(int *param_1, u_char *param_2, int param_3, int param_4);
;

extern u_int FUN_000634b0(u_char param_1, int param_2, u_char param_3);
;

extern u_int FUN_000634e4(u_char param_1, int param_2, u_char param_3);
;

extern u_char FUN_00063518(int *param_1, u_char *param_2, int param_3, int param_4);
;

extern u_char FUN_00063644(u_char param_1, int param_2, int param_3, int param_4);
;

extern u_char FUN_00063748(u_char param_1, StackType *param_2, u_char param_3);
;

extern u_int FUN_00063864(u_char *param_1, int *param_2, u_char *param_3);
;

extern u_char FUN_000638bc(u_short **param_1, u_char *param_2);
;

extern u_int FUN_00063a7c(u_short **param_1);
;

extern u_char FUN_00063b44(int *param_1, u_char *param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_00063e20(int **param_1, u_char *param_2);
;

extern u_char FUN_00063e9c(u_char param_1, u_char *param_2, int param_3);
;

extern u_char FUN_00063ef4(u_char param_1, int param_2, int param_3);
;

extern u_char FUN_00063f2c(u_char param_1, StackType *param_2, u_char param_3, int param_4);
;

extern void FUN_00064028(_PCodeStack *param_1, long param_2, short *param_3);
;

extern u_char FUN_00064058(int *param_1, u_char *param_2);
;

extern void FUN_00064160(int *param_1);
;

extern void FUN_000641e8(int *param_1);
;

extern u_char FUN_00064270(InstanceSpline *param_1, u_char *param_2);
;

extern u_char FUN_0006463c(_Instance **param_1, int *param_2);
;

extern u_char FUN_00064910(_Instance **param_1, int *param_2, ScriptPCode *param_3);
;

extern u_int FUN_000653b4(int *param_1);
;

extern u_char FUN_00065540(BSPTree **param_1, u_char *param_2);
;

extern u_char FUN_00065844(Camera **param_1, int *param_2);
;

extern u_char FUN_00065bc4(int param_1, u_char *param_2);
;

extern u_char FUN_00065cf8(int param_1, u_char *param_2);
;

extern u_char FUN_00065e2c(void);
;

extern u_char FUN_00065e34(int *param_1, u_char *param_2);
;

extern u_char FUN_00065ee0(Intro **param_1, u_char *param_2);
;

extern void FUN_000660b8(_PCodeStack *param_1, short *param_2);
;

extern u_int FUN_000661a4(short *param_1, short *param_2);
;

extern u_int FUN_00066360(u_short *param_1, u_short *param_2, u_int param_3);
;

extern u_char FUN_00066558(_PCodeStack *param_1, int *param_2, StackType *param_3, int param_4);
;

extern u_char FUN_00066758(_PCodeStack *param_1, int *param_2, StackType *param_3, int param_4);
;

extern u_int FUN_00066900(_PCodeStack *param_1, StackType *param_2, StackType *param_3, int param_4);
;

extern void FUN_00066c38(_PCodeStack *param_1, int param_2);
;

extern u_short *FUN_00066e20(_PCodeStack *param_1, u_short *param_2, u_char *param_3);
;

extern u_int FUN_0006709c(int *param_1);
;

extern void FUN_00067130(int *param_1, StackType *param_2, _PCodeStack *param_3, short *param_4);
;

extern u_long FUN_00067228(_Instance **param_1);
;

extern void FUN_000673a0(int *param_1);
;

extern u_int FUN_000673e4(InstanceSpline *param_1);
;

extern u_int FUN_000674e0(int *param_1);
;

extern u_long FUN_00067590(_Instance **param_1);
;

extern long FUN_00067608(_PCodeStack *param_1, long param_2, short *param_3);
;

extern void FUN_0006765c(int *param_1, int param_2);
;

extern void FUN_00067838(int param_1, int param_2);
;

extern void FUN_000679b4(int param_1, int param_2);
;

extern undefined *FUN_00067af0(undefined2 param_1, undefined param_2);
;

extern void FUN_00067b5c(int param_1);
;

extern void FUN_00067c48(int *param_1, int param_2);
;

extern void FUN_00067cec(int param_1);
;

extern int FUN_00067ddc(int param_1, byte *param_2);
;

extern void FUN_00067e7c(int param_1);
;

extern void FUN_00068160(int *param_1);
;

extern void FUN_0006844c(int *param_1);
;

extern void FUN_00068618(short *param_1, short *param_2, int param_3);
;

extern void FUN_00068824(void);
;

extern void FUN_0006882c(u_char *param_1, StackType *param_2, _PCodeStack *param_3, short *param_4);
;

extern u_int FUN_000689f4(u_char *param_1, u_char *param_2, undefined2 *param_3);
;

extern long FUN_00068b64(StackType *param_1, _PCodeStack *param_2, long param_3, short *param_4);
;

extern void FUN_00068d0c(int param_1);
;

extern int FUN_00068e2c(int param_1);
;

extern int FUN_00068eb4(int param_1);
;

extern u_int FUN_00068efc(int param_1);
;

extern u_char FUN_00068f28(int param_1, u_short param_2);
;

extern u_char FUN_00068fa4(int param_1, short param_2);
;

extern u_int FUN_00068fe8(int param_1);
;

extern u_char FUN_00069040(void);
;

extern void FUN_000690e0(_Instance *param_1, undefined2 *param_2);
;

extern u_int FUN_0006972c(int param_1, short param_2, short param_3, undefined2 param_4, u_int param_5);
;

extern void FUN_00069888(int param_1);
;

extern u_char FUN_00069920(int param_1);
;

extern u_char FUN_00069afc(int param_1, int param_2, u_char param_3, u_int param_4);
;

extern void FUN_00069e4c(int param_1);
;

extern void FUN_0006a368(int param_1);
;

extern void FUN_0006a388(int param_1, int param_2, int param_3, undefined2 param_4, u_int *param_5);
;

extern u_int FUN_0006a4f8(int param_1, short param_2, short param_3, u_int param_4);
;

extern u_char FUN_0006a63c(int param_1, int param_2, int param_3);
;

extern u_char FUN_0006a7d4(int param_1, undefined2 param_2, u_int param_3, int param_4);
;

extern _Instance *FUN_0006a8d4(_Instance *param_1, short param_2, short param_3, u_int param_4, u_char param_5, int param_6);
;

extern int FUN_0006a984(_Instance *param_1, u_char param_2, int param_3, u_int param_4);
;

extern _Instance *FUN_0006a9dc(_Instance *param_1, u_char param_2, int param_3, u_int param_4);
;

extern void FUN_0006ab70(byte *param_1, int param_2, short param_3);
;

extern void FUN_0006acd8(int param_1, int param_2);
;

extern void FUN_0006acfc(int param_1, byte *param_2);
;

extern void FUN_0006ad6c(int param_1);
;

extern void FUN_0006adf8(int param_1, byte *param_2);
;

extern void FUN_0006ae34(int param_1);
;

extern void FUN_0006ae54(int param_1);
;

extern void FUN_0006ae78(int param_1, int param_2);
;

extern void FUN_0006aed8(int param_1);
;

extern void FUN_0006b748(int param_1, int param_2);
;

extern void FUN_0006c7d4(_Instance *param_1, undefined *param_2, int *param_3);
;

extern void FUN_0006d00c(int param_1);
;

extern int FUN_0006da0c(int param_1);
;

extern u_char FUN_0006dab0(int param_1);
;

extern int FUN_0006dae8(int param_1);
;

extern void FUN_0006db1c(int param_1, u_int param_2);
;

extern void FUN_0006dbc0(int param_1, u_int param_2);
;

extern u_char FUN_0006dc48(int param_1);
;

extern void FUN_0006def4(int param_1);
;

extern void FUN_0006e004(int param_1, u_int param_2);
;

extern void FUN_0006e0ac(int param_1, u_int param_2);
;

extern void FUN_0006e138(int param_1, u_int param_2);
;

extern u_int FUN_0006e1f8(int param_1, int param_2, int param_3);
;

extern void FUN_0006e218(int param_1, short param_2, short param_3, short param_4, short param_5, short param_6, short param_7);
;

extern u_char FUN_0006e2d8(int param_1, int param_2, u_char *param_3);
;

extern u_char FUN_0006e358(int param_1, int param_2);
;

extern u_char FUN_0006e628(int param_1, int param_2);
;

extern void FUN_0006ea24(int param_1, short param_2, short param_3, short param_4);
;

extern u_char FUN_0006ea98(int param_1, short param_2, short param_3);
;

extern void FUN_0006eb14(int param_1, u_int *param_2, u_int param_3, undefined2 param_4, int param_5);
;

extern u_char FUN_0006eb8c(int param_1, int param_2, int param_3);
;

extern u_int FUN_0006ecc0(int param_1);
;

extern void FUN_0006f20c(int param_1);
;

extern void FUN_0006f580(int param_1);
;

extern void FUN_0006f5d8(short *param_1);
;

extern void FUN_0006f674(u_char param_1, short *param_2, short *param_3);
;

extern u_int FUN_0006f94c(int param_1, short param_2);
;

extern void FUN_0006fee0(int param_1, u_int param_2);
;

extern int FUN_00070174(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_00070244(int param_1, int param_2, int param_3, u_char *param_4);
;

extern void FUN_000702d4(int param_1, int param_2, int param_3, u_char *param_4);
;

extern void FUN_00070364(int param_1, int param_2, int param_3, u_char *param_4);
;

extern void FUN_000703f8(u_char param_1, int param_2, int param_3, u_char *param_4);
;

extern void FUN_0007044c(short *param_1, short *param_2);
;

extern void FUN_000704b0(u_int *param_1);
;

extern void FUN_00070538(u_char *param_1);
;

extern int *FUN_00070544(int *param_1);
;

extern void FUN_00070580(u_char *param_1);
;

extern int *FUN_0007058c(int *param_1);
;

extern void FUN_000705b4(int *param_1, int *param_2);
;

extern void FUN_000705e0(int *param_1, int param_2, int param_3);
;

extern char *FUN_0007065c(int param_1);
;

extern void FUN_000706a4(u_char *param_1);
;

extern void FUN_00070700(u_char param_1, u_char param_2, u_char param_3, undefined2 param_4, undefined2 param_5);
;

extern void FUN_0007076c(u_char param_1, undefined2 *param_2, undefined2 param_3);
;

extern void FUN_000707d4(u_char param_1, undefined2 *param_2, undefined2 param_3);
;

extern void FUN_0007083c(u_char param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4);
;

extern void FUN_00070898(u_char param_1, undefined2 *param_2, undefined2 *param_3, undefined2 param_4);
;

extern void FUN_00070930(undefined2 param_1, undefined2 param_2, undefined2 param_3, u_char param_4, undefined2 param_5);
;

extern void FUN_0007099c(undefined2 param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_000709e8(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6);
;

extern void FUN_00070a64(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, u_char param_7, u_char param_8, u_char param_9);
;

extern void FUN_00070b10(undefined2 param_1, u_char param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5);
;

extern void FUN_00070b7c(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, u_char param_5);
;

extern void FUN_00070be8(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7);
;

extern void FUN_00070c74(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4);
;

extern void FUN_00070cd0(u_char param_1, u_char param_2, u_int param_3, u_int param_4);
;

extern void FUN_00070d70(undefined2 *param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_00070de0(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_00070e3c(u_char param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5);
;

extern short *FUN_00070ea8(int param_1, int param_2, short param_3, short param_4);
;

extern void FUN_00070fa4(u_char *param_1, u_char *param_2, undefined2 param_3, u_short param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7, undefined2 param_8);
;

extern void FUN_00071110(u_char param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7);
;

extern void FUN_0007119c(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_000711e8(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_00071234(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5);
;

extern void FUN_000712a0(u_char param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_000712ec(u_char param_1, u_char param_2);
;

extern void FUN_00071328(u_char param_1, u_char param_2);
;

extern void FUN_00071364(u_char param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5, u_char param_6);
;

extern void FUN_000713e0(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_00071430(u_char param_1);
;

extern void FUN_0007145c(void);
;

extern void FUN_00071648(int param_1);
;

extern void FUN_000716b0(int *param_1);
;

extern void FUN_000716d4(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_000717cc(int param_1, int param_2, int param_3);
;

extern void FUN_000718c0(int param_1, u_int param_2, int param_3);
;

extern void FUN_00071930(int *param_1, int param_2, int param_3);
;

extern void FUN_00071974(int *param_1, u_int param_2, int param_3);
;

extern void FUN_000719ec(int *param_1, u_int param_2, u_int param_3);
;

extern void FUN_00071bb8(int param_1, int param_2, int param_3, u_char param_4, int param_5, int param_6);
;

extern void FUN_00071ca4(int *param_1, int param_2, u_char param_3, int param_4, int param_5);
;

extern void FUN_00071d98(int *param_1, int param_2, u_char param_3, int param_4, int param_5, int param_6);
;

extern void FUN_00071df0(int param_1, u_int param_2, int param_3);
;

extern void FUN_00071e98(int *param_1, u_int param_2, int param_3);
;

extern void FUN_00071ed0(int param_1, u_int param_2, int param_3);
;

extern void FUN_00071f50(int *param_1, u_int param_2, int param_3);
;

extern void FUN_00071f74(int param_1, u_int param_2, u_char param_3);
;

extern u_int FUN_00071f90(int param_1, u_int param_2);
;

extern void FUN_00071fb0(int *param_1, u_int param_2);
;

extern void FUN_00071fd4(int param_1, u_int param_2);
;

extern void FUN_00072008(int param_1, u_int param_2);
;

extern u_int FUN_0007203c(int param_1, u_int param_2, int param_3);
;

extern void FUN_000720e4(int *param_1, u_int param_2);
;

extern u_char FUN_00072108(int param_1, u_int param_2);
;

extern void FUN_00072150(int *param_1, u_int param_2);
;

extern void FUN_00072174(int param_1, u_int param_2, char param_3, char param_4);
;

extern void FUN_000721a0(int *param_1, u_int param_2, char param_3, char param_4);
;

extern void FUN_000721d0(int param_1, short param_2);
;

extern void FUN_00072254(u_char *param_1, short param_2);
;

extern void FUN_00072284(int param_1, u_int param_2, u_char param_3, u_char param_4);
;

extern void FUN_000722a8(int param_1, u_int param_2, u_int param_3, short *param_4, int param_5, u_char param_6);
;

extern void FUN_00072330(int param_1, int param_2, undefined *param_3, int param_4);
;

extern void FUN_00072398(int param_1, undefined *param_2, int param_3);
;

extern void FUN_00072410(int param_1, int param_2, undefined *param_3, int param_4);
;

extern void FUN_000724dc(int param_1, undefined *param_2, int param_3);
;

extern void FUN_00072554(int *param_1, int param_2);
;

extern void FUN_000726d4(void);
;

extern void FUN_000726dc(void);
;

extern void FUN_00072724(void);
;

extern void FUN_00072788(void);
;

extern void FUN_000727b8(void);
;

extern u_char FUN_000727e4(u_char *param_1);
;

extern void FUN_000729cc(void);
;

extern u_char FUN_00072a00(int **param_1);
;

extern void FUN_00072a90(u_char *param_1);
;

extern void FUN_00072af8(int *param_1);
;

extern void FUN_00072b2c(u_char *param_1);
;

extern _BlockVramEntry *FUN_00072b90(void);
;

extern int FUN_00072bc8(short param_1, short param_2, short param_3, short param_4);
;

extern u_char FUN_00072cf8(u_int param_1, short param_2, short param_3, short param_4, u_char param_5);
;

extern int *FUN_00072e98(undefined2 *param_1, undefined2 *param_2, int param_3, int param_4, undefined param_5, short param_6);
;

extern void FUN_000732d4(int **param_1);
;

extern void FUN_00073308(u_int param_1, u_int param_2, u_int param_3, int param_4, int param_5);
;

extern int **FUN_000734f4(int **param_1, int **param_2);
;

extern void FUN_00073550(int param_1);
;

extern void FUN_00073b18(u_char param_1, int param_2);
;

extern u_char FUN_00073b38(short *param_1, int param_2);
;

extern void FUN_00073c30(void);
;

extern void FUN_00073c38(void);
;

extern void FUN_00073c40(void);
;

extern int FUN_00073c48(byte *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_00073c98(int param_1, byte *param_2, char *param_3, u_char param_4);
;

extern int FUN_00073cc8(int param_1, byte *param_2, char **param_3);
;

extern char *FUN_00073f44(u_int param_1, char *param_2, u_int param_3);
;

extern int FUN_00074014(byte *param_1);
;

extern int FUN_00074084(int param_1);
;

extern int FUN_000740a0(byte *param_1, byte *param_2);
;

extern void FUN_00074100(int param_1);
;

extern void FUN_00074148(int param_1);
;

extern void FUN_00074194(int param_1, undefined2 *param_2);
;

extern void FUN_000741b8(int param_1, undefined2 *param_2);
;

extern u_char FUN_0007422c(int param_1, int *param_2, u_short param_3);
;

extern void FUN_00074688(int param_1, int param_2, int param_3);
;

extern u_int FUN_00074710(int param_1, u_short *param_2, u_short param_3);
;

extern void FUN_00074e90(int param_1, int param_2);
;

extern u_char FUN_00074f08(int param_1, u_char param_2, u_short *param_3, u_int param_4);
;

extern void FUN_0007559c(int param_1, int param_2, int param_3);
;

extern void FUN_00075840(int param_1, short *param_2);
;

extern void FUN_00075cec(int param_1, short *param_2);
;

extern u_char FUN_00075de8(int param_1, u_char param_2, int param_3, u_int param_4);
;

extern u_int FUN_00076188(int param_1, short *param_2, u_int param_3);
;

extern u_int FUN_00076378(int param_1, int param_2);
;

extern void FUN_00076570(u_char param_1, u_int *param_2, int param_3, int param_4);
;

extern void FUN_00076648(int param_1, int param_2);
;

extern u_char FUN_00076678(int param_1, short *param_2);
;

extern u_char FUN_0007690c(int param_1, short *param_2);
;

extern u_char FUN_00076b30(int param_1, u_char param_2, short *param_3, u_int param_4);
;

extern void FUN_00076fa4(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_0007707c(int param_1, short *param_2, int param_3);
;

extern void FUN_00077218(u_char param_1, short param_2);
;

extern void FUN_00077288(int param_1, u_char param_2, short param_3);
;

extern void FUN_000772f8(int param_1, u_char param_2, int param_3, int param_4);
;

extern int FUN_000773e8(int param_1, int param_2);
;

extern void FUN_0007745c(int param_1, int param_2, int param_3, int param_4);
;

extern u_int FUN_0007753c(int param_1, u_char param_2, u_char param_3, int param_4);
;

extern u_int FUN_00077584(int param_1, u_char param_2, u_char param_3, int param_4);
;

extern u_int FUN_000775c8(int param_1, u_char param_2, u_char param_3, int param_4);
;

extern u_int FUN_00077634(short *param_1);
;

extern u_int FUN_00077698(short *param_1);
;

extern void FUN_000777c0(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 *param_4);
;

extern void FUN_000777d0(void);
;

extern void FUN_000777f4(int param_1, int param_2, u_char *param_3, undefined2 *param_4);
;

extern void FUN_00077924(u_int *param_1, u_int *param_2, u_int *param_3, u_int *param_4);
;

extern u_char FUN_00077a34(short *param_1, u_int *param_2, u_int *param_3, u_char *param_4, int param_5);
;

extern void FUN_00077b0c(short *param_1, int *param_2, int param_3, u_char *param_4);
;

extern void FUN_00077b98(void);
;

extern void FUN_00078090(void);
;

extern void FUN_00078104(int param_1);
;

extern u_int FUN_000781c8(u_char *param_1, int param_2);
;

extern void FUN_000782a0(u_short *param_1, u_int *param_2);
;

extern void FUN_00078434(u_short *param_1, u_int *param_2);
;

extern undefined8 FUN_000785a0(u_int param_1, int param_2);
;

extern undefined8 FUN_000786d4(u_int param_1, u_int *param_2);
;

extern undefined8 FUN_00078808(u_int param_1, u_int *param_2);
;

extern int *FUN_00078998(int *param_1, u_char *param_2);
;

extern int FUN_00078a80(u_int param_1);
;

extern int FUN_00078ab0(u_int param_1);
;

extern int FUN_00078ae0(int param_1);
;

extern void FUN_00078b40(void);
;

extern u_char *FUN_00078b48(u_char *param_1, u_char *param_2, u_int param_3);
;

extern void FUN_00078c00(int **param_1, u_char *param_2, int *param_3);
;

extern int FUN_000791d0(undefined2 *param_1, short *param_2);
;

extern void FUN_000793dc(short *param_1, short *param_2);
;

extern void FUN_000794cc(int param_1, short *param_2);
;

extern void FUN_00079b60(int param_1, int param_2);
;

extern void FUN_00079bec(int param_1, int param_2);
;

extern void FUN_00079d20(int param_1, int param_2);
;

extern u_char FUN_0007a088(int param_1);
;

extern void FUN_0007a0ac(u_char param_1);
;

extern void FUN_0007a350(int param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_0007a42c(int param_1, undefined *param_2);
;

extern int FUN_0007a4cc(int param_1);
;

extern u_int FUN_0007a4e0(int param_1);
;

extern u_int FUN_0007a51c(int param_1);
;

extern u_int FUN_0007a558(void);
;

extern u_int FUN_0007a580(int param_1, int param_2);
;

extern void FUN_0007a590(int param_1);
;

extern void FUN_0007a628(u_char *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_0007a6b8(int param_1);
;

extern int FUN_0007aa1c(int param_1);
;

extern void FUN_0007aa38(int param_1);
;

extern void FUN_0007ab64(int param_1);
;

extern void FUN_0007b228(u_char param_1, u_char param_2);
;

extern void FUN_0007b2d0(_Instance *param_1, u_char param_2);
;

extern void FUN_0007b4a4(int param_1, int param_2);
;

extern void FUN_0007b74c(void);
;

extern void FUN_0007b760(_Instance *param_1);
;

extern void FUN_0007b948(void);
;

extern void FUN_0007b964(void);
;

extern void FUN_0007b980(int param_1);
;

extern void FUN_0007ba10(u_short *param_1, short param_2, u_short *param_3, short param_4);
;

extern void FUN_0007ba58(void);
;

extern void FUN_0007ba8c(int param_1);
;

extern void FUN_0007bac0(void);
;

extern void FUN_0007bd08(void);
;

extern void FUN_0007c1ac(int param_1, u_int *param_2);
;

extern void FUN_0007c290(int param_1, int param_2, u_int *param_3);
;

extern _Instance *FUN_0007c3e8(_Instance *param_1, int param_2, undefined2 param_3, u_int param_4);
;

extern void FUN_0007c4bc(int param_1);
;

extern void FUN_0007c620(int param_1);
;

extern void FUN_0007cea4(void);
;

extern void FUN_0007cf6c(int param_1);
;

extern u_char FUN_0007cfac(int param_1);
;

extern int FUN_0007d840(int param_1, int param_2);
;

extern int FUN_0007d8bc(_Instance *param_1, int param_2, u_char param_3, u_int param_4);
;

extern int FUN_0007d990(_Instance *param_1, u_short *param_2, u_char param_3, u_int param_4);
;

extern void FUN_0007da50(_Instance *param_1, u_short *param_2, u_char param_3);
;

extern void FUN_0007ddac(int param_1, int param_2, int param_3);
;

extern MATRIX *FUN_0007e3b8(_Instance *param_1, u_long param_2);
;

extern void FUN_0007e834(int param_1, int param_2);
;

extern void FUN_0007e99c(int param_1, int param_2, int param_3);
;

extern void FUN_0007ea98(u_int *param_1);
;

extern void FUN_0007ef6c(int param_1, short *param_2, short *param_3);
;

extern void FUN_0007efe8(int param_1);
;

extern void FUN_0007f018(int param_1);
;

extern u_int FUN_0007f048(int param_1);
;

extern void FUN_0007f05c(u_char *param_1);
;

extern void FUN_0007f0a8(void);
;

extern void FUN_0007f1d0(int param_1);
;

extern void FUN_0007f270(int param_1);
;

extern void FUN_0007f2dc(int param_1);
;

extern void FUN_0007f3d4(int param_1);
;

extern void FUN_0007f48c(int param_1, u_int param_2);
;

extern void FUN_0007f594(int param_1);
;

extern void FUN_0007f63c(int param_1);
;

extern void FUN_0007f6f0(int param_1);
;

extern void FUN_0007f71c(int param_1);
;

extern void FUN_0007f748(int param_1, int param_2);
;

extern void FUN_0007f844(int param_1, int param_2);
;

extern void FUN_0007f8ac(int param_1);
;

extern int FUN_0007f8d4(int param_1, int param_2, int param_3);
;

extern void FUN_0007f908(int param_1, int param_2);
;

extern void FUN_0007fac0(int param_1, int param_2, int param_3);
;

extern u_int FUN_0007fae8(int param_1, int param_2);
;

extern void FUN_0007fb0c(int param_1, int param_2);
;

extern void FUN_0007fb5c(int param_1, int param_2, int param_3);
;

extern void FUN_0007fb84(int param_1, int param_2, int param_3);
;

extern void FUN_0007fbdc(int param_1, int param_2);
;

extern void FUN_0007fc10(int param_1, int param_2);
;

extern void FUN_0007fc44(int param_1, int param_2);
;

extern void FUN_0007fd28(int param_1);
;

extern void FUN_0007fea0(int param_1, int param_2);
;

extern u_int FUN_0007fedc(int param_1, int param_2, char *param_3);
;

extern u_char FUN_0007ffb4(int param_1, int param_2, short *param_3);
;

extern short *FUN_000801b0(int param_1, int param_2);
;

extern u_char FUN_00080310(int param_1);
;

extern u_char FUN_000803bc(int param_1, int param_2);
;

extern u_char FUN_00080460(int param_1);
;

extern u_int FUN_000804bc(int param_1, int param_2);
;

extern void FUN_000807b4(void);
;

extern void FUN_00080958(int param_1);
;

extern void FUN_00080998(void);
;

extern void FUN_00080a44(int param_1);
;

extern int FUN_00080c60(int param_1, short *param_2);
;

extern void FUN_00080e48(int param_1);
;

extern void FUN_00080e98(int param_1, short *param_2);
;

extern void FUN_00080f08(int param_1, short *param_2);
;

extern void FUN_00080f4c(int param_1);
;

extern void FUN_00081058(int param_1);
;

extern void FUN_0008107c(_Instance *param_1, int param_2);
;

extern void FUN_00081104(int param_1);
;

extern void FUN_00081500(int param_1, int param_2, int param_3);
;

extern u_int FUN_00081584(int param_1, int param_2, int param_3);
;

extern u_char FUN_00081644(int param_1, u_char param_2, undefined2 *param_3);
;

extern u_char FUN_0008171c(int param_1);
;

extern void FUN_00081770(_Instance *param_1, int param_2, u_char param_3, u_int param_4);
;

extern void FUN_000818c8(int param_1);
;

extern void FUN_00081de0(int param_1);
;

extern void FUN_00081fe0(int param_1);
;

extern u_char FUN_00082024(_Instance *param_1, int param_2, int param_3);
;

extern void FUN_000822ec(int param_1);
;

extern void FUN_0008235c(int param_1);
;

extern void FUN_00082404(int param_1);
;

extern void FUN_00082490(int param_1, short param_2, short param_3);
;

extern void FUN_00082604(int param_1, short *param_2);
;

extern void FUN_000826e0(int param_1);
;

extern u_char FUN_000827d4(int param_1, int param_2, int param_3);
;

extern void FUN_0008287c(int param_1, u_int *param_2);
;

extern void FUN_000829b8(_Instance *param_1, u_int *param_2);
;

extern void FUN_00082b78(int param_1);
;

extern u_int FUN_00082c74(int param_1);
;

extern u_char FUN_00082de0(int param_1, int param_2);
;

extern u_char FUN_00082ed0(int param_1, u_char param_2, u_int param_3);
;

extern void FUN_00082fbc(int param_1, short *param_2);
;

extern u_char FUN_00083018(int param_1, short param_2);
;

extern u_int FUN_00083064(int param_1, u_char param_2, u_int param_3);
;

extern void FUN_000830bc(int param_1, int param_2, short *param_3);
;

extern u_int *FUN_0008312c(int param_1);
;

extern Intro *FUN_000831b8(int param_1, short *param_2);
;

extern int FUN_000832e8(int param_1, int param_2);
;

extern void FUN_000833e4(int param_1);
;

extern u_char FUN_000834c8(int param_1, short *param_2, short *param_3);
;

extern u_char FUN_00083890(int param_1);
;

extern void FUN_00083a04(int param_1);
;

extern void FUN_00083a60(int param_1);
;

extern void FUN_00083abc(int param_1);
;

extern void FUN_00083cf8(int param_1, int param_2, int param_3);
;

extern void FUN_00083d60(int param_1);
;

extern void FUN_00083e18(int param_1, u_char param_2);
;

extern void FUN_00083ec4(int param_1);
;

extern void FUN_00083f7c(int param_1);
;

extern void FUN_00083ff4(int param_1, int param_2, int param_3);
;

extern void FUN_000840f8(u_char param_1, int param_2);
;

extern void FUN_00084384(int param_1, undefined2 *param_2, undefined2 param_3, undefined2 param_4);
;

extern u_char FUN_000843c0(_Instance *param_1);
;

extern void FUN_00084448(int param_1, int *param_2);
;

extern void FUN_0008474c(_Instance *param_1, __Event *param_2);
;

extern void FUN_00084890(int param_1, int *param_2);
;

extern void FUN_000855e8(int param_1);
;

extern void FUN_00085634(_Instance *param_1);
;

extern void FUN_00085680(int param_1);
;

extern int FUN_000856cc(int param_1, int param_2);
;

extern u_char FUN_00085704(int param_1, int param_2);
;

extern u_char FUN_000858a0(int param_1, int *param_2);
;

extern u_int FUN_00085930(int param_1, int param_2);
;

extern u_int FUN_00085958(int param_1);
;

extern u_char *FUN_00085980(int param_1, int param_2);
;

extern void FUN_00085b18(int param_1, int *param_2, int param_3);
;

extern void FUN_00085f44(int param_1, int *param_2);
;

extern void FUN_00086138(int param_1);
;

extern u_char *FUN_0008624c(int param_1);
;

extern void FUN_00086274(int param_1, u_char *param_2, int param_3);
;

extern u_char *FUN_000862a0(int param_1, int param_2);
;

extern void FUN_000863c0(int param_1);
;

extern void FUN_000865c8(int param_1);
;

extern void FUN_00086700(int param_1);
;

extern void FUN_00086764(int param_1);
;

extern int FUN_000869a4(int param_1, short param_2, int param_3);
;

extern int FUN_00086ab0(int param_1, short param_2);
;

extern void FUN_00086ae8(int param_1);
;

extern void FUN_00086be8(int param_1);
;

extern void FUN_00086dcc(int param_1);
;

extern void FUN_00086fb4(int param_1);
;

extern void FUN_00087050(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_00087294(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_00087378(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_00088b14(int param_1);
;

extern void FUN_00088cc4(int param_1);
;

extern void FUN_000892f8(int param_1);
;

extern void FUN_0008936c(int param_1);
;

extern void FUN_0008954c(int param_1);
;

extern void FUN_00089578(_Instance *param_1, u_char param_2, u_int param_3);
;

extern void FUN_00089844(int param_1);
;

extern void FUN_0008989c(_Instance *param_1);
;

extern void FUN_000899e0(int param_1);
;

extern void FUN_00089a98(_Instance *param_1, u_char param_2, u_int param_3);
;

extern void FUN_00089cb8(int param_1);
;

extern void FUN_00089d0c(int param_1, u_char param_2, u_int param_3);
;

extern void FUN_00089e3c(int param_1);
;

extern void FUN_00089ecc(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_0008a508(void);
;

extern void FUN_0008a528(_Instance *param_1);
;

extern void FUN_0008a6a4(int param_1);
;

extern void FUN_0008a738(int param_1);
;

extern void FUN_0008a768(int param_1, u_char param_2, int param_3, int param_4, int param_5);
;

extern void FUN_0008adbc(int param_1);
;

extern void FUN_0008ae1c(_Instance *param_1);
;

extern void FUN_0008b15c(int param_1);
;

extern void FUN_0008b1bc(int param_1);
;

extern int FUN_0008b450(int param_1, int param_2);
;

extern void FUN_0008b468(int param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern void FUN_0008b73c(int param_1, int *param_2);
;

extern int FUN_0008b7a4(int param_1, u_int param_2, u_char param_3);
;

extern void FUN_0008b92c(int param_1, int param_2, int param_3);
;

extern int FUN_0008bba4(int param_1, u_int param_2, int *param_3);
;

extern void FUN_0008bd24(int param_1, int param_2);
;

extern void FUN_0008bdd0(int param_1, int param_2);
;

extern void FUN_0008c250(int param_1);
;

extern void FUN_0008c460(int param_1);
;

extern void FUN_0008c530(int param_1);
;

extern _MonsterState *FUN_0008c580(int param_1, int param_2);
;

extern int FUN_0008c5f0(int param_1);
;

extern int FUN_0008c624(int param_1);
;

extern int FUN_0008c658(int param_1);
;

extern void FUN_0008c68c(int param_1);
;

extern void FUN_0008c6c0(int param_1);
;

extern u_char FUN_0008c6f4(int param_1);
;

extern u_int FUN_0008c7dc(int param_1);
;

extern u_char FUN_0008c850(int param_1);
;

extern void FUN_0008c968(int param_1, short *param_2);
;

extern void FUN_0008d504(int param_1);
;

extern void FUN_0008d5a0(int param_1, int param_2);
;

extern void FUN_0008d600(int param_1);
;

extern void FUN_0008d6bc(int param_1, int param_2, int param_3);
;

extern int FUN_0008d980(int param_1, int param_2, int param_3);
;

extern void FUN_0008e568(int param_1, int param_2, int param_3);
;

extern u_int FUN_0008e674(int param_1);
;

extern void FUN_0008e940(int param_1);
;

extern u_char FUN_0008ec8c(int param_1, int param_2);
;

extern void FUN_0008f308(int param_1, u_int param_2);
;

extern void FUN_0008f330(int param_1, u_int param_2);
;

extern int FUN_0008f35c(int param_1);
;

extern u_char FUN_0008f380(int param_1);
;

extern void FUN_0008f3a4(int param_1, int param_2, int param_3, u_char *param_4);
;

extern void FUN_0008f3d4(byte *param_1, u_char param_2, u_char param_3, u_char param_4, short param_5);
;

extern u_char FUN_0008f478(int param_1, u_int param_2);
;

extern void FUN_0008f4e0(char *param_1, u_char param_2);
;

extern void FUN_0008f550(byte *param_1, u_char param_2, u_char param_3);
;

extern void FUN_0008f58c(byte *param_1);
;

extern void FUN_0008f5ec(byte *param_1);
;

extern void FUN_0008f64c(byte *param_1);
;

extern void FUN_0008f6ac(byte *param_1, u_char param_2);
;

extern void FUN_0008f6e0(byte *param_1);
;

extern void FUN_0008f740(byte *param_1);
;

extern int FUN_0008f7c0(int param_1);
;

extern int FUN_0008f7e8(int param_1);
;

extern void FUN_0008f820(int param_1, u_int param_2);
;

extern int FUN_0008f834(int param_1);
;

extern int FUN_0008f890(int param_1);
;

extern void FUN_0008f8b0(int param_1);
;

extern u_char FUN_0008f8f0(int param_1);
;

extern u_char FUN_0008f920(byte *param_1);
;

extern void FUN_0008f97c(int param_1, u_char param_2);
;

extern void FUN_0008f998(int param_1, undefined *param_2);
;

extern void FUN_0008f9c8(byte *param_1);
;

extern void FUN_0008fa08(int param_1);
;

extern void FUN_0008fa38(byte *param_1);
;

extern void FUN_0008fa4c(byte *param_1);
;

extern void FUN_0008fa60(byte *param_1);
;

extern void FUN_0008fa74(byte *param_1);
;

extern void FUN_0008fa88(int param_1);
;

extern void FUN_0008faa8(int *param_1, short *param_2);
;

extern void FUN_0008fbd4(int param_1, short *param_2);
;

extern void FUN_0008fc68(int *param_1, undefined2 *param_2);
;

extern void FUN_0008fca0(int param_1, u_short *param_2);
;

extern void FUN_0008fccc(int param_1, undefined param_2, undefined param_3);
;

extern void FUN_0008fd04(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_0008fdcc(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_0008fea8(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_0008fee8(byte *param_1, u_int param_2, u_int param_3, short param_4);
;

extern u_int FUN_00090008(int param_1, u_int param_2, u_int param_3);
;

extern u_int FUN_00090054(int param_1, u_int param_2, u_int param_3);
;

extern u_int FUN_000900a8(byte *param_1, u_int param_2, u_int param_3, u_int *param_4);
;

extern void FUN_00090208(int param_1, u_int param_2, u_int param_3, u_char param_4);
;

extern void FUN_00090230(int param_1, u_int param_2, u_int param_3, u_short param_4);
;

extern void FUN_00090268(int param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void FUN_000902b0(byte *param_1, u_int param_2, u_int param_3, short *param_4, short param_5);
;

extern void FUN_00090414(int param_1, u_int param_2, u_int param_3, u_char *param_4, undefined2 param_5);
;

extern void FUN_00090490(byte *param_1);
;

extern void FUN_000904f0(int param_1);
;

extern void FUN_000906d0(_G2Matrix_Type *param_1, u_int *param_2, _G2AnimController_Type *param_3, int param_4, u_int param_5);
;

extern u_char FUN_000909e0(_G2AnimController_Type *param_1, int param_2, _G2Matrix_Type *param_3, u_int *param_4);
;

extern void FUN_00090d88(int param_1);
;

extern void FUN_00090f14(undefined2 *param_1, undefined2 *param_2, int param_3);
;

extern void FUN_00090f78(int param_1);
;

extern u_char FUN_000911f0(int param_1, u_int *param_2);
;

extern void FUN_00091344(int param_1, u_int *param_2);
;

extern void FUN_0009141c(int param_1, u_char *param_2);
;

extern void FUN_000914a4(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_00091500(undefined param_1, undefined param_2);
;

extern u_short *FUN_0009156c(u_short *param_1);
;

extern void FUN_000915d4(u_short *param_1, u_short *param_2);
;

extern void FUN_00091704(int param_1, byte *param_2, u_char *param_3);
;

extern void FUN_00091840(int param_1, int param_2, undefined2 *param_3);
;

extern u_short *FUN_000918c4(u_int param_1, u_int param_2, u_short *param_3);
;

extern u_short *FUN_00091934(u_int param_1, u_int param_2, u_short **param_3);
;

extern u_short *FUN_000919d4(u_int param_1, u_int param_2, u_short *param_3);
;

extern void FUN_00091aa4(int param_1);
;

extern void FUN_00091d88(byte *param_1);
;

extern void FUN_00091f7c(int param_1);
;

extern void FUN_0009210c(int param_1, int param_2);
;

extern u_char FUN_0009229c(int param_1);
;

extern void FUN_0009233c(int *param_1);
;

extern u_char FUN_00092380(void);
;

extern void FUN_000923f8(void);
;

extern void FUN_00092460(undefined *param_1, int param_2);
;

extern byte *FUN_000924f4(byte *param_1, byte param_2, byte param_3);
;

extern void FUN_00092590(byte *param_1);
;

extern void FUN_0009264c(byte *param_1);
;

extern void FUN_000926cc(byte *param_1);
;

extern void FUN_00092798(byte *param_1);
;

extern byte *FUN_00092914(byte *param_1, int param_2);
;

extern u_int FUN_00092980(byte *param_1, int param_2, u_int param_3);
;

extern void FUN_00092ac0(byte *param_1, int param_2, undefined2 *param_3, u_int param_4);
;

extern void FUN_00092b70(int param_1, int param_2, u_int param_3, u_char *param_4);
;

extern void FUN_00092e4c(int param_1);
;

extern void FUN_00093004(int param_1);
;

extern u_char FUN_00093670(byte *param_1);
;

extern void FUN_000938b0(int param_1);
;

extern void FUN_00093a04(u_int *param_1, u_char *param_2, int param_3, int param_4);
;

extern void FUN_00093c30(u_int *param_1, u_int *param_2);
;

extern void FUN_00093c90(int param_1, u_int param_2, u_int **param_3);
;

extern u_int FUN_00093cc8(int *param_1);
;

extern void FUN_00093d50(int param_1, u_char *param_2, int param_3);
;

extern void FUN_00093da4(int param_1, int param_2);
;

extern void FUN_00094058(byte *param_1, int param_2, u_char param_3, int param_4, int param_5);
;

extern void FUN_000944e4(byte *param_1, int param_2);
;

extern int FUN_000945b4(int param_1);
;

extern void FUN_000945d4(int param_1, short param_2, short param_3);
;

extern void FUN_00094700(int *param_1);
;

extern int FUN_00094744(u_short *param_1, int param_2);
;

extern void FUN_000947a8(int param_1);
;

extern void FUN_0009496c(int param_1);
;

extern void FUN_000949c8(int param_1);
;

extern u_char FUN_00094a24(int param_1, int param_2);
;

extern void FUN_00094a44(int param_1);
;

extern void FUN_00094e78(int param_1);
;

extern void FUN_00094ecc(int param_1);
;

extern void FUN_00094f88(int param_1);
;

extern void FUN_00095214(int param_1);
;

extern void FUN_00095374(int param_1);
;

extern void FUN_00095430(int param_1, u_int *param_2, int param_3, int param_4);
;

extern u_char FUN_000957cc(void);
;

extern void FUN_000957d4(void);
;

extern void FUN_000957dc(undefined2 *param_1, int param_2, int param_3);
;

extern void FUN_00095848(int param_1);
;

extern int FUN_00095884(u_short *param_1);
;

extern void FUN_000958e0(u_short *param_1, int param_2);
;

extern void FUN_00095918(short *param_1, u_char param_2, u_int param_3);
;

extern void FUN_0009595c(u_char param_1, int param_2, u_int param_3);
;

extern int FUN_00095cc0(void);
;

extern void FUN_00095d00(void);
;

extern void FUN_00095d38(int param_1, u_short *param_2, u_short *param_3, undefined2 *param_4);
;

extern void FUN_00095fe8(int param_1);
;

extern int FUN_00096008(void);
;

extern int FUN_00096048(void);
;

extern void FUN_000960a4(int param_1);
;

extern u_int FUN_0009610c(u_short *param_1, u_short *param_2, u_short *param_3);
;

extern u_char FUN_00096278(short *param_1, short *param_2, short *param_3);
;

extern void FUN_00096328(int param_1);
;

extern void FUN_00096354(u_short *param_1, u_short *param_2);
;

extern u_char FUN_000964b0(u_int param_1, u_int param_2, int param_3, short *param_4, u_int param_5);
;

extern u_int FUN_0009698c(int param_1, int param_2);
;

extern int FUN_00096adc(int param_1);
;

extern int FUN_00096b14(short *param_1, short *param_2, char param_3);
;

extern void FUN_00096bb4(u_char *param_1, short *param_2);
;

extern void FUN_00096dfc(int param_1, short *param_2);
;

extern void FUN_00096f24(void);
;

extern void FUN_00097130(int param_1);
;

extern void FUN_00097164(u_char *param_1, short *param_2, u_short param_3, int param_4);
;

extern void FUN_0009723c(int param_1);
;

extern void FUN_0009728c(u_char *param_1, int param_2);
;

extern void FUN_00097348(u_char *param_1, int param_2);
;

extern int FUN_00097430(int param_1);
;

extern void FUN_000974ec(u_int param_1, int param_2, int param_3, u_int param_4);
;

extern u_char FUN_000975a0(int param_1, int param_2, int param_3, u_int param_4);
;

extern void FUN_00097628(u_int param_1, int param_2);
;

extern u_char FUN_00097748(short *param_1, u_char param_2);
;

extern void FUN_00097828(u_int param_1);
;

extern void FUN_000978c4(int param_1);
;

extern void FUN_0009795c(short *param_1, int param_2, u_int param_3);
;

extern void FUN_000979c0(int param_1);
;

extern u_int FUN_00097a48(int param_1, int param_2);
;

extern u_char FUN_00097a90(int param_1, int param_2);
;

extern void FUN_00097afc(int param_1, u_char param_2);
;

extern u_int FUN_00097e28(void);
;

extern void FUN_00097e3c(int param_1);
;

extern u_char FUN_00097f60(int param_1);
;

extern u_char FUN_00097fc8(int param_1, undefined2 *param_2, u_int param_3, int param_4);
;

extern u_int FUN_000981f0(undefined2 *param_1, undefined2 *param_2, u_char param_3, int param_4, short param_5);
;

extern long FUN_000982f4(short *param_1);
;

extern u_char FUN_00098468(int *param_1, int *param_2, short param_3, short param_4, int param_5, int param_6);
;

extern u_int FUN_00098730(undefined2 *param_1, undefined2 *param_2, u_char param_3);
;

extern void FUN_000987bc(u_short *param_1, u_short *param_2, u_char param_3, short *param_4, int param_5);
;

extern int FUN_000988f4(int param_1, int param_2);
;

extern int FUN_00098940(u_int param_1);
;

extern void FUN_00098960(int param_1);
;

extern void FUN_00098984(int param_1);
;

extern int FUN_000989a8(int param_1, u_short param_2);
;

extern int FUN_000989f8(int param_1, u_short param_2);
;

extern int FUN_00098a44(int param_1, u_short param_2);
;

extern int FUN_00098a94(int param_1, short param_2, short param_3);
;

extern short *FUN_00098b00(short *param_1, short *param_2);
;

extern short *FUN_00098bd4(short *param_1, short *param_2, char param_3);
;

extern u_char FUN_00098cd4(short *param_1, short *param_2);
;

extern u_char FUN_00098e48(int param_1, int param_2, int param_3);
;

extern void FUN_00098eb8(short *param_1, short *param_2, int param_3);
;

extern void FUN_00098ffc(int param_1, int param_2, int param_3);
;

extern short *FUN_000990ac(short *param_1, short *param_2);
;

extern void FUN_000991bc(u_int param_1, u_int param_2, int param_3);
;

extern undefined2 *FUN_00099274(undefined2 *param_1, int param_2, undefined2 param_3, undefined2 param_4, u_char param_5);
;

extern void FUN_00099368(u_char *param_1, int param_2);
;

extern short *FUN_00099534(short *param_1, short *param_2, int param_3);
;

extern void FUN_0009964c(int param_1, int param_2);
;

extern void FUN_0009977c(int param_1);
;

extern int FUN_000997c8(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_00099900(int param_1, short param_2, u_char param_3, u_char param_4, u_char param_5);
;

extern void FUN_00099974(int param_1, short param_2);
;

extern void FUN_00099a30(int param_1, int param_2);
;

extern void FUN_00099ad8(int param_1, int param_2);
;

extern void FUN_00099c08(void);
;

extern void FUN_00099c40(int param_1, int param_2);
;

extern void FUN_00099cc0(u_char *param_1, int param_2, int param_3, int param_4, int param_5, int param_6);
;

extern void FUN_00099d28(int param_1, int *param_2, u_char param_3, int param_4);
;

extern void FUN_00099f20(u_char param_1, u_char param_2, int *param_3, int param_4, int *param_5);
;

extern void FUN_0009a710(_Instance **param_1, int param_2, int param_3, u_int param_4);
;

extern u_char FUN_0009b184(int *param_1, int *param_2);
;

extern void FUN_0009d750(int param_1, short *param_2, u_short *param_3);
;

extern void FUN_0009d870(int param_1, u_short *param_2);
;

extern void FUN_0009d9b4(u_short *param_1);
;

extern void FUN_0009e290(_Instance **param_1, int param_2);
;

extern void FUN_000a0f00(int param_1);
;

extern void FUN_000a1098(int param_1);
;

extern void FUN_000a1128(int param_1, int param_2);
;

extern void FUN_000a1198(int param_1, int param_2);
;

extern int FUN_000a141c(int param_1, int param_2);
;

extern int FUN_000a1458(u_char *param_1, u_int *param_2);
;

extern void FUN_000a1638(short param_1, short param_2);
;

extern void FUN_000a1728(u_char param_1, u_int *param_2);
;

extern void FUN_000a1c54(int param_1, int param_2);
;

extern void FUN_000a1ce8(int param_1, int param_2);
;

extern void FUN_000a1d98(int param_1);
;

extern void FUN_000a202c(void);
;

extern void FUN_000a211c(void);
;

extern void FUN_000a2150(int param_1);
;

extern void FUN_000a21e4(_Instance *param_1, int param_2);
;

extern void FUN_000a2418(int param_1);
;

extern void FUN_000a2558(int param_1);
;

extern void FUN_000a2630(void);
;

extern u_char FUN_000a2638(int param_1, u_char *param_2, u_int param_3);
;

extern void FUN_000a26d0(evCollideInstanceStatsData *param_1, __Player *param_2);
;

extern void FUN_000a36f0(int param_1, int param_2);
;

extern void FUN_000a3730(void);
;

extern void FUN_000a37d0(int param_1);
;

extern void FUN_000a385c(int param_1);
;

extern void FUN_000a3934(int param_1);
;

extern void FUN_000a3a18(void);
;

extern int FUN_000a3a44(void);
;

extern void FUN_000a3a94(int param_1);
;

extern u_char FUN_000a3f4c(void);
;

extern void FUN_000a3fb8(short param_1);
;

extern void FUN_000a3ffc(int param_1);
;

extern void FUN_000a4024(void);
;

extern void FUN_000a40a4(short param_1);
;

extern void FUN_000a40fc(void);
;

extern void FUN_000a415c(void);
;

extern void FUN_000a417c(int param_1);
;

extern void FUN_000a4274(int param_1, short param_2, short *param_3, int param_4, short param_5);
;

extern void FUN_000a4338(int param_1, u_char param_2, short *param_3);
;

extern void FUN_000a4410(int param_1, int param_2, short param_3, u_int param_4, int param_5);
;

extern void FUN_000a4504(int param_1, short *param_2);
;

extern int FUN_000a4530(int param_1);
;

extern void FUN_000a4648(int param_1, short **param_2);
;

extern void FUN_000a4818(undefined2 param_1, undefined2 param_2, u_char param_3);
;

extern u_char FUN_000a483c(void);
;

extern void FUN_000a4898(void);
;

extern void FUN_000a499c(void);
;

extern u_int FUN_000a4a40(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_000a4ad4(int *param_1, int param_2);
;

extern u_int FUN_000a4ca4(u_char *param_1, u_char *param_2, u_int param_3);
;

extern int FUN_000a4d04(int param_1);
;

extern void FUN_000a4da0(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern int FUN_000a4e34(void);
;

extern int FUN_000a4e6c(void);
;

extern void FUN_000a4ecc(void);
;

extern void FUN_000a4efc(void);
;

extern u_char FUN_000a4f2c(void);
;

extern u_char FUN_000a4fa0(void);
;

extern void FUN_000a5070(u_char param_1, int param_2);
;

extern void FUN_000a512c(int param_1);
;

extern int FUN_000a516c(u_int param_1);
;

extern void FUN_000a5190(u_char param_1);
;

extern void FUN_000a51dc(int param_1, int param_2);
;

extern void FUN_000a52c0(short *param_1, undefined2 *param_2);
;

extern void FUN_000a530c(int param_1, int param_2, short param_3);
;

extern void FUN_000a54e0(int param_1);
;

extern void FUN_000a5554(int param_1);
;

extern void FUN_000a55ac(int *param_1, int param_2, u_char param_3, int *param_4);
;

extern int FUN_000a5c1c(int *param_1, int param_2);
;

extern void FUN_000a5dac(int param_1);
;

extern void FUN_000a5e00(int param_1);
;

extern void FUN_000a5e38(int *param_1, int param_2, int param_3);
;

extern void FUN_000a60dc(int param_1, int param_2, int param_3);
;

extern void FUN_000a6130(int param_1, int param_2);
;

extern u_char FUN_000a621c(int param_1, int param_2);
;

extern u_char FUN_000a62d8(int param_1, int param_2, int param_3);
;

extern void FUN_000a6334(int param_1, int param_2);
;

extern void FUN_000a63ec(int param_1, int param_2, int param_3);
;

extern void FUN_000a6420(int param_1, int param_2, byte *param_3);
;

extern int FUN_000a64ec(int param_1, undefined *param_2);
;

extern void FUN_000a6664(int param_1, int param_2);
;

extern int FUN_000a672c(int param_1, undefined *param_2);
;

extern void FUN_000a678c(int param_1);
;

extern void FUN_000a67e4(u_int param_1, int param_2);
;

extern void FUN_000a687c(int param_1);
;

extern void FUN_000a6934(void);
;

extern void FUN_000a69a0(void);
;

extern void FUN_000a6c8c(void);
;

extern void FUN_000a6cc4(u_int param_1);
;

extern u_int FUN_000a6cdc(int param_1, undefined2 param_2);
;

extern u_char FUN_000a6da8(u_int param_1);
;

extern int FUN_000a6de0(int param_1, int *param_2);
;

extern void FUN_000a6ee4(int param_1, int *param_2, u_char param_3, u_char param_4, undefined2 param_5, int param_6, undefined2 param_7, int param_8, int param_9);
;

extern void FUN_000a6f88(u_int param_1, int param_2);
;

extern void FUN_000a7004(void);
;

extern u_int FUN_000a7030(char *param_1, int param_2);
;

extern void FUN_000a7090(_Instance *param_1);
;

extern void FUN_000a73b0(int *param_1, int param_2, int *param_3);
;

extern void FUN_000a930c(int *param_1, int param_2);
;

extern void FUN_000a9a1c(int *param_1, int param_2, u_char param_3);
;

extern void FUN_000aed74(_Instance **param_1, int param_2, u_char param_3, u_int param_4);
;

extern u_char FUN_000b08b4(_Instance *param_1, int param_2, u_int *param_3);
;

extern void FUN_000b0ee0(void);
;

extern void FUN_000b11a4(short *param_1);
;

extern void FUN_000b1304(int param_1);
;

extern void FUN_000b1528(void);
;

extern void FUN_000b164c(int param_1);
;

extern void FUN_000b17fc(_Instance *param_1);
;

extern void FUN_000b1d1c(int param_1);
;

extern void FUN_000b1d2c(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern u_char FUN_000b1ee4(int param_1);
;

extern u_char FUN_000b25e4(int param_1);
;

extern int FUN_000b263c(int param_1, int param_2);
;

extern u_int FUN_000b2738(int param_1);
;

extern void FUN_000b2744(int param_1, u_int param_2);
;

extern void FUN_000b2794(int param_1, u_int param_2);
;

extern u_char FUN_000b27e4(int param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_000b2944(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_000b297c(_Instance *param_1, int param_2, u_int *param_3);
;

extern void FUN_000b2b50(int param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_000b2db8(int param_1, u_short *param_2, u_short *param_3);
;

extern void FUN_000b2fe0(int param_1);
;

extern void FUN_000b3058(int param_1);
;

extern u_int FUN_000b30d4(int param_1);
;

extern void FUN_000b315c(int param_1, u_char param_2, int param_3);
;

extern void FUN_000b34dc(void);
;

extern int FUN_000b3554(int param_1);
;

extern void FUN_000b36c0(undefined *param_1, short *param_2, int param_3);
;

extern void FUN_000b370c(u_int param_1, u_short *param_2, u_short *param_3, short *param_4, u_int param_5);
;

extern void FUN_000b3884(u_char *param_1, u_int param_2);
;

extern void FUN_000b39dc(void);
;

extern void FUN_000b3a8c(void);
;

extern STracker *FUN_000b3b4c(byte *param_1, byte *param_2, u_char param_3, u_char param_4);
;

extern void FUN_000b3e48(int param_1, int param_2);
;

extern void FUN_000b3ea8(int param_1, undefined2 *param_2);
;

extern void FUN_000b3f30(void);
;

extern void FUN_000b3fb8(int param_1);
;

extern undefined *FUN_000b403c(int param_1, int param_2);
;

extern u_char FUN_000b4120(void);
;

extern u_int FUN_000b41c0(int param_1);
;

extern undefined *FUN_000b42ac(int param_1, int *param_2, undefined *param_3, u_int *param_4);
;

extern undefined *FUN_000b43b8(int param_1, int *param_2, undefined *param_3, u_int *param_4);
;

extern char *FUN_000b44f0(int param_1, u_int param_2);
;

extern void FUN_000b4598(int param_1, u_int param_2);
;

extern char *FUN_000b45c8(int param_1, int param_2);
;

extern void FUN_000b466c(SavedBasic *param_1);
;

extern void FUN_000b46f4(void);
;

extern void FUN_000b47c8(int *param_1, u_char param_2, int param_3, int param_4);
;

extern u_char FUN_000b488c(int param_1);
;

extern char *FUN_000b491c(int param_1);
;

extern void FUN_000b4980(int *param_1);
;

extern SavedBasic *FUN_000b4acc(int param_1, u_short **param_2, u_char param_3, u_int param_4);
;

extern void FUN_000b4c88(SavedBasic *param_1);
;

extern void FUN_000b4d20(int param_1, int *param_2);
;

extern void FUN_000b4f54(int param_1);
;

extern void FUN_000b5024(int param_1, int param_2);
;

extern void FUN_000b50f8(void);
;

extern u_int FUN_000b5150(int param_1);
;

extern void FUN_000b520c(int param_1);
;

extern void FUN_000b523c(int param_1);
;

extern void FUN_000b5250(int param_1);
;

extern char *FUN_000b5270(int param_1);
;

extern char *FUN_000b52dc(int param_1);
;

extern void FUN_000b5348(void);
;

extern void FUN_000b53e0(void);
;

extern void FUN_000b54b8(u_char param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_000b5570(u_char param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_000b55ac(void);
;

extern int FUN_000b565c(void);
;

extern void FUN_000b5714(void);
;

extern void FUN_000b5754(void);
;

extern void FUN_000b5824(int param_1, undefined param_2, int param_3, undefined *param_4);
;

extern void FUN_000b5918(int param_1);
;

extern void FUN_000b59c0(int param_1, undefined param_2, undefined param_3, undefined2 param_4);
;

extern void FUN_000b5a3c(int param_1);
;

extern void FUN_000b5d34(int param_1, int param_2);
;

extern u_int FUN_000b5dfc(int param_1);
;

extern void FUN_000b5e40(void);
;

extern void FUN_000b5eb4(void);
;

extern void FUN_000b5f28(void);
;

extern u_char FUN_000b6084(void);
;

extern void FUN_000b6114(u_char param_1, char *param_2, u_char param_3);
;

extern u_int FUN_000b6178(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern u_int FUN_000b621c(void);
;

extern void FUN_000b622c(void);
;

extern void FUN_000b6274(char *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_000b62c4(void);
;

extern void FUN_000b62d0(u_char param_1, u_char param_2, u_char param_3, undefined *param_4);
;

extern undefined *FUN_000b6360(int param_1);
;

extern u_char FUN_000b6390(void);
;

extern void FUN_000b6398(u_char *param_1, u_char param_2);
;

extern void FUN_000b63dc(int *param_1, int param_2, int param_3, int param_4, int param_5, int param_6, int param_7, int param_8);
;

extern void FUN_000b642c(int *param_1, int param_2);
;

extern void FUN_000b6450(int *param_1, int param_2);
;

extern void FUN_000b64c0(int *param_1);
;

extern void FUN_000b64d4(int param_1, char *param_2, char *param_3, char *param_4, byte *param_5);
;

extern void FUN_000b6564(int param_1, char *param_2, char *param_3, byte *param_4);
;

extern void FUN_000b6608(int *param_1);
;

extern void FUN_000b6660(int param_1, int param_2);
;

extern void FUN_000b678c(short param_1, short param_2, int param_3, int param_4);
;

extern int FUN_000b69cc(int *param_1, int param_2, int param_3, int param_4, char *param_5, int param_6, u_int param_7, int *param_8);
;

extern void FUN_000b6dd0(int *param_1);
;

extern void FUN_000b6f18(int *param_1);
;

extern void FUN_000b7108(int *param_1);
;

extern u_char FUN_000b713c(int param_1);
;

extern void FUN_000b71b8(short param_1, short param_2, byte *param_3, int param_4);
;

extern void FUN_000b7220(byte *param_1);
;

extern void FUN_000b7240(int param_1);
;

extern void FUN_000b7274(int param_1);
;

extern void FUN_000b73ec(char *param_1);
;

extern void FUN_000b7424(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_000b746c(void);
;

extern void FUN_000b7490(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern int FUN_000b7518(int param_1, int param_2);
;

extern void FUN_000b7584(int param_1, int param_2);
;

extern void FUN_000b768c(int param_1, u_char param_2, char *param_3);
;

extern undefined *FUN_000b79d4(void);
;

extern void FUN_000b7d3c(void);
;

extern void FUN_000b7f44(void);
;

extern void FUN_000b7ff4(void);
;

extern void FUN_000b811c(void);
;

extern int FUN_000b81cc(int param_1);
;

extern void FUN_000b81e0(u_long **param_1);
;

extern void FUN_000b82ac(u_long **param_1);
;

extern u_char FUN_000b8308(u_long **param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5);
;

extern void FUN_000b83c8(u_long **param_1);
;

extern u_char FUN_000b840c(u_long **param_1);
;

extern void FUN_000b86ac(void);
;

extern void FUN_000b86dc(void);
;

extern void FUN_000b870c(void);
;

extern void FUN_000b873c(u_char param_1);
;

extern void FUN_000b87a0(void);
;

extern u_int FUN_000b87d0(void);
;

extern u_int FUN_000b87e0(word param_1);
;

extern void FUN_000b88d0(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_000b8d00(u_char *param_1, int param_2);
;

extern int FUN_000b8d24(char *param_1, char *param_2, int param_3);
;

extern u_int FUN_000b8da4(u_int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_int FUN_000b8f18(char param_1);
;

extern u_char FUN_000b8f74(u_char param_1);
;

extern void FUN_000b8fd4(int param_1);
;

extern void FUN_000b906c(int param_1);
;

extern void FUN_000b90d4(u_char param_1, short *param_2);
;

extern void FUN_000b91f0(short *param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void FUN_000b9280(short *param_1, u_char param_2);
;

extern u_int FUN_000b92e0(u_char *param_1, u_int param_2, int param_3);
;

extern void FUN_000b9398(u_char *param_1, dword param_2);
;

extern void FUN_000b9444(int param_1);
;

extern void FUN_000b94a0(u_char *param_1);
;

extern u_char *FUN_000b9510(u_char *param_1);
;

extern u_char *FUN_000b95d0(u_char *param_1);
;

extern void FUN_000b9ac8(int param_1, u_short *param_2);
;

extern void FUN_000b9b48(int param_1, int param_2);
;

extern void FUN_000b9d68(int param_1, u_char *param_2);
;

extern u_int FUN_000b9fd8(int param_1, int param_2, u_int param_3);
;

extern u_int FUN_000b9ff8(u_int param_1, u_int param_2);
;

extern u_int FUN_000ba090(u_int param_1, u_int param_2);
;

extern u_int FUN_000ba128(u_int param_1, u_int param_2);
;

extern u_int FUN_000ba144(byte *param_1);
;

extern void FUN_000baa20(dword param_1);
;

extern u_int FUN_000baa68(u_int param_1);
;

extern u_int FUN_000baabc(undefined *param_1, u_char *param_2, int param_3, u_char param_4);
;

extern u_int FUN_000bad6c(void);
;

extern u_char FUN_000bafcc(u_int param_1);
;

extern void FUN_000bb258(void);
;

extern u_char FUN_000bb28c(void);
;

extern undefined8 FUN_000bb3d0(u_int param_1);
;

extern void FUN_000bb594(undefined *param_1, undefined param_2, int param_3);
;

extern u_char *FUN_000bb5c0(u_char *param_1, u_char *param_2, u_char *param_3);
;

extern undefined *FUN_000bb610(undefined *param_1, undefined param_2, int param_3);
;

extern u_int FUN_000bb640(void);
;

extern void FUN_000bb670(u_char param_1);
;

extern void FUN_000bb680(int param_1);
;

extern void FUN_000bb6a0(u_char *param_1);
;

extern void FUN_000bb6d0(undefined2 *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, int param_5);
;

extern void FUN_000bb784(undefined2 *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5);
;

extern void FUN_000bb7c0(u_char param_1);
;

extern undefined2 *FUN_000bb7d0(u_char *param_1, u_char *param_2, undefined2 *param_3);
;

extern int FUN_000bb830(u_int param_1, u_int param_2);
;

extern u_char FUN_000bb9b0(u_int *param_1, u_int *param_2, u_char param_3, u_char param_4, u_int *param_5);
;

extern u_char FUN_000bba38(byte *param_1, byte *param_2, u_char param_3, u_char param_4, undefined *param_5);
;

extern void FUN_000bbab8(int param_1, int param_2, int param_3);
;

extern char *FUN_000bbbc8(char *param_1, char param_2);
;

extern char *FUN_000bbc08(char *param_1, char *param_2);
;

extern int *FUN_000bbc58(u_char *param_1, u_int *param_2, int *param_3);
;

extern u_char *FUN_000bbdb8(u_char *param_1, u_char *param_2);
;

extern void FUN_000bbdf8(u_char *param_1, u_char *param_2, u_char *param_3);
;

extern void FUN_000bbe28(int param_1);
;

extern int FUN_000bbe48(char *param_1);
;

extern u_char FUN_000bbea8(u_int param_1, undefined2 param_2, u_int param_3);
;

extern u_int FUN_000bbf44(u_int param_1);
;

extern u_int FUN_000bbf7c(u_int param_1);
;

extern u_char FUN_000bbfac(u_int param_1);
;

extern void FUN_000bbfe0(u_char param_1, u_char param_2);
;

extern void FUN_000bc29c(int param_1);
;

extern char *FUN_000bc640(char *param_1, char *param_2);
;

extern void FUN_000bc6b0(void);
;

extern u_int FUN_000bc6f0(void);
;

extern u_int FUN_000bc7b0(u_char param_1, int param_2, int param_3);
;

extern void FUN_000bc97c(u_char param_1, u_char param_2);
;

extern void FUN_000bc9b4(u_char param_1, u_char param_2, undefined param_3);
;

extern u_int FUN_000bca04(int param_1);
;

extern void FUN_000bcb7c(int param_1, int param_2);
;

extern int FUN_000bcc14(char *param_1, char *param_2);
;

extern void FUN_000bcc84(u_char *param_1);
;

extern void FUN_000bccd4(u_char *param_1);
;

extern u_int *FUN_000bcd04(u_char *param_1, u_short *param_2, u_int *param_3);
;

extern u_int FUN_000bce14(void);
;

extern u_int FUN_000bce24(void);
;

extern undefined1 *FUN_000bce34(void);
;

extern u_char FUN_000bce40(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_000bceac(void);
;

extern u_char FUN_000bcecc(u_char param_1);
;

extern void FUN_000bcee0(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern void FUN_000bcf00(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern u_char FUN_000bcf20(u_char param_1);
;

extern u_char FUN_000bcf34(u_char param_1);
;

extern u_char FUN_000bcf48(byte param_1, byte *param_2, undefined *param_3);
;

extern u_char FUN_000bd084(byte param_1, byte *param_2);
;

extern u_int FUN_000bd1b8(byte param_1, byte *param_2, char *param_3);
;

extern u_int FUN_000bd304(dword param_1, u_int param_2);
;

extern u_int FUN_000bd324(dword param_1, u_int param_2);
;

extern void FUN_000bd344(void);
;

extern void FUN_000bd368(int param_1);
;

extern void FUN_000bd388(int param_1, char *param_2);
;

extern int FUN_000bd48c(byte *param_1);
;

extern u_char FUN_000bd50c(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern u_int FUN_000bd59c(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char *FUN_000bd65c(u_char *param_1, char *param_2, u_char param_3, undefined *param_4);
;

extern u_int FUN_000bd934(char *param_1, char *param_2);
;

extern u_char FUN_000bd954(void);
;

extern int FUN_000bdc18(int param_1, char *param_2);
;

extern u_char FUN_000bdcbc(int param_1, u_char param_2, u_char param_3, undefined *param_4);
;

extern u_int FUN_000bdf58(u_char param_1, int param_2, u_char param_3, undefined *param_4);
;

extern void FUN_000bdfcc(void);
;

extern int FUN_000bdfdc(int param_1);
;

extern void FUN_000be08c(void);
;

extern u_int FUN_000be0c4(void);
;

extern void FUN_000be14c(void);
;

extern void FUN_000be16c(void);
;

extern u_char FUN_000be21c(void);
;

extern void FUN_000be300(void);
;

extern void FUN_000be310(void);
;

extern void FUN_000be320(void);
;

extern u_int *FUN_000be330(u_char *param_1, u_int *param_2);
;

extern u_int *FUN_000be440(u_char *param_1, u_short *param_2, u_int *param_3);
;

extern int FUN_000be5a0(int param_1, u_char *param_2);
;

extern u_int FUN_000be5d0(u_int param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void FUN_000be610(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_000be6b4(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern char *FUN_000be760(char *param_1, char *param_2, int param_3);
;

extern int FUN_000be7d0(u_int param_1);
;

extern u_int FUN_000be830(word *param_1, u_int param_2, u_int param_3, u_char param_4);
;

extern void FUN_000be890(word param_1, word param_2);
;

extern void FUN_000be8c0(int param_1, word *param_2);
;

extern void FUN_000be8e0(int param_1, word param_2);
;

extern void FUN_000be950(int param_1);
;

extern void FUN_000be990(int param_1, u_int param_2);
;

extern void FUN_000beb50(undefined *param_1);
;

extern u_char FUN_000bebdc(u_int param_1, u_char param_2, u_int param_3);
;

extern void FUN_000bed7c(u_char param_1, u_char param_2);
;

extern u_int FUN_000bed9c(u_int param_1, u_int param_2, u_int param_3);
;

extern void FUN_000bedfc(int param_1);
;

extern void FUN_000bee2c(int param_1, u_int param_2);
;

extern int FUN_000bee5c(int param_1);
;

extern void FUN_000bef2c(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_000bef4c(void);
;

extern void FUN_000bef5c(void);
;

extern u_char FUN_000befdc(u_int param_1);
;

extern void FUN_000bf1ac(int param_1, u_char param_2, u_char param_3);
;

extern void FUN_000bf22c(int param_1, u_int param_2);
;

extern void FUN_000bf2ac(int param_1, u_int param_2, u_int param_3, u_int param_4, u_char param_5, u_char param_6, int param_7, int param_8, int param_9);
;

extern int thunk_FUN_000bf408(byte *param_1, byte *param_2, int param_3);
;

extern int FUN_000bf408(byte *param_1, byte *param_2, int param_3);
;

extern dword FUN_000bf43c(void);
;

extern void FUN_000bf4d0(byte *param_1);
;

extern undefined *FUN_000bf530(undefined *param_1, undefined *param_2, int param_3);
;

extern void FUN_000bf5a0(void);
;

extern void FUN_000bf5b0(u_int *param_1);
;

extern char *FUN_000bf930(char *param_1, char *param_2);
;

extern void FUN_000bfa50(u_char param_1, u_char param_2, undefined *param_3, undefined *param_4);
;

extern void FUN_000c036c(u_char *param_1, u_char *param_2, u_int param_3);
;

extern void FUN_000c0398(u_int param_1, dword param_2, int param_3, u_int param_4, dword param_5, char param_6);
;

extern void FUN_000c0540(void);
;

extern void FUN_000c0760(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_000c0870(void);
;

extern u_char FUN_000c0a30(u_char *param_1);
;

extern void FUN_000c0a6c(void);
;

extern undefined *FUN_000c0a7c(void);
;

extern void FUN_000c0b6c(u_char *param_1, int param_2);
;

extern undefined *FUN_000c0b9c(void);
;

extern void FUN_000c0e14(u_char *param_1, int param_2);
;

extern void FUN_000c0e44(void);
;

extern void FUN_000c0e5c(void);
;

extern void FUN_000c0e6c(void);
;

extern void FUN_000c0e7c(void);
;

extern void FUN_000c0e8c(void);
;

extern void FUN_000c0e9c(void);
;

extern u_char FUN_000c0eac(void);
;

extern void FUN_000c0ec8(u_char param_1);
;

extern void FUN_000c0ed4(u_char param_1);
;

extern void FUN_000c0ee0(void);
;

extern void FUN_000c10e0(void);
;

extern void FUN_000c11ac(void);
;

extern u_char FUN_000c11f0(int param_1);
;

extern void FUN_000c1524(void);
;

extern u_int FUN_000c15ec(int param_1, int param_2);
;

extern u_int FUN_000c17c4(int param_1, undefined param_2);
;

extern u_char FUN_000c19fc(void);
;

extern void FUN_000c1a8c(void);
;

extern void FUN_000c1ab4(void);
;

extern void FUN_000c1e38(int param_1);
;

extern u_char FUN_000c1f14(int param_1);
;

extern undefined *FUN_000c1f44(undefined *param_1, int param_2);
;

extern void FUN_000c1f74(int param_1, u_char param_2, undefined param_3);
;

extern void FUN_000c1f80(int param_1);
;

extern u_char FUN_000c2004(int *param_1);
;

extern int FUN_000c2150(int param_1);
;

extern u_char FUN_000c2188(int *param_1, int param_2);
;

extern u_int FUN_000c2578(int param_1, u_char param_2);
;

extern void FUN_000c26c4(int param_1, undefined param_2);
;

extern void FUN_000c26e4(int param_1);
;

extern void FUN_000c26f8(int param_1, undefined param_2);
;

extern void FUN_000c2718(int param_1, undefined param_2);
;

extern void FUN_000c2738(int param_1, undefined param_2);
;

extern void FUN_000c2758(int param_1);
;

extern u_char FUN_000c2778(u_char param_1, char *param_2, u_int param_3, u_int param_4);
;

extern undefined *FUN_000c2cd4(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern undefined *FUN_000c2f54(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern u_char FUN_000c321c(byte param_1, byte *param_2, undefined *param_3, undefined *param_4);
;

extern void FUN_000c3628(void);
;

extern u_char FUN_000c36fc(void);
;

extern void FUN_000c37ec(void);
;

extern u_char FUN_000c3838(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_000c3a18(int param_1);
;

extern u_char FUN_000c3b80(dword param_1, u_int param_2);
;

extern u_char FUN_000c3c80(dword param_1, u_int param_2);
;

extern void FUN_000c3e50(void);
;

extern u_char FUN_000c41ac(int param_1);
;

extern u_int FUN_000c4394(u_char param_1, u_char param_2, u_int param_3);
;

extern int FUN_000c4494(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern void FUN_000c455c(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_000c4644(void);
;

extern u_char FUN_000c46bc(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_000c493c(word *param_1, u_int param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_000c4bb8(int param_1, u_int param_2, u_int param_3);
;

extern u_int FUN_000c4e38(word *param_1, u_int param_2, u_int param_3, u_char param_4);
;

extern u_int FUN_000c4ebc(u_int param_1, u_int param_2, u_int param_3);
;

extern void FUN_000c4f20(int param_1, u_int param_2, int param_3);
;

extern u_int FUN_000c4f64(int param_1, u_int param_2);
;

extern void FUN_000c5060(void);
;

extern void FUN_000c5088(void);
;

extern void FUN_000c50b0(void);
;

extern void FUN_000c5118(void);
;

extern void FUN_000c5128(void);
;

extern void FUN_000c5208(void);
;

extern void FUN_000c521c(void);
;

extern void FUN_000c522c(void);
;

extern void FUN_000c523c(void);
;

extern u_char FUN_000c524c(int param_1);
;

extern void FUN_000c52dc(void);
;

extern u_int FUN_000c52ec(int param_1, u_int param_2, int param_3, int param_4);
;

extern void FUN_000c55ac(void);
;

extern void FUN_000c55dc(u_int *param_1);
;

extern void FUN_000c5aac(byte param_1);
;

extern void FUN_000c5ba8(void);
;

extern void FUN_000c5cd4(void);
;

extern void FUN_000c5fb4(int param_1, u_int param_2);
;

extern u_char FUN_000c5ff4(u_char param_1);
;

extern void FUN_000c6008(void);
;

extern void FUN_000c602c(u_char param_1);
;

extern u_int FUN_000c604c(void);
;

extern void FUN_000c66dc(void);
;

extern void FUN_000c66fc(void);
;

extern void FUN_000c6710(void);
;

extern void FUN_000c6e28(void);
;

extern void FUN_000c8a48(void);
;

extern void FUN_000c9bdc(void);
;

extern void FUN_000caaa0(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_000cac44(void);
;

extern void FUN_000cacac(void);
;

extern void FUN_000cade4(void);
;

extern void FUN_000caf80(void);
;

extern void FUN_000cb348(void);
;

extern void FUN_000cb604(u_char param_1, u_char param_2);
;

extern void FUN_000cb81c(void);
;

extern void FUN_000cb944(void);
;

extern void FUN_000cb980(void);
;

extern void FUN_000cb9d4(void);
;

extern void FUN_000cba64(void);
;

extern void FUN_000cbae0(void);
;

extern void FUN_000cbaf4(void);
;

extern void FUN_000cbc3c(void);
;

extern void FUN_000cbd94(void);
;

extern void FUN_000cbf6c(void);
;

extern void FUN_000cc1b4(void);
;

extern void FUN_000cc260(void);
;

extern void FUN_000cc46c(void);
;

extern void FUN_000cc4e4(void);
;

extern void FUN_000cc55c(void);
;

extern void FUN_000cc5d4(void);
;

extern void FUN_000cca54(void);
;

extern void FUN_001c3084(void);
;

extern void FUN_001c64d8(void);
;

extern void FUN_001d0080(void);
;

extern void FUN_001d00a0(void);
;

extern void FUN_80077b98(void);
;

extern void G2Anim_SetCallback(void);
;

extern void ResetCallback(u_int param_1, int param_2);
;

extern void DrawSyncCallback(void);
;

extern void DrawCallback(u_char param_1);
;

extern void HackCallback(void);
;

extern void VOICEXA_CdSyncCallback(void);
;

extern u_int CheckCallback(void);
;

extern u_int SetIntrMask(word param_1);
;

extern undefined2 *FUN_800b87f8(void);
;

extern void FUN_800b88d0(void);
;

extern int FUN_800b8aa0(u_int param_1, int param_2);
;

extern undefined2 *FUN_800b8be8(void);
;

extern undefined2 *FUN_800b8c88(void);
;

extern void FUN_800b8d00(u_char *param_1, int param_2);
;

extern int strncpy(char *__s1, char *__s2, size_t __n);
;

extern u_int ResetGraph(u_int param_1);
;

extern u_int SetGraphDebug(char param_1);
;

extern u_char DMACallback(u_char param_1);
;

extern void SetDispMask(int param_1);
;

extern void DrawSync(int param_1);
;

extern void FUN_800b90d4(u_char param_1, short *param_2);
;

extern void ClearImage(u_char *param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void LoadImage(u_char *param_1, u_char param_2);
;

extern u_int MoveImage(u_char *param_1, u_int param_2, int param_3);
;

extern void ClearOTagR(u_char *param_1, dword param_2);
;

extern void DrawPrim(int param_1);
;

extern void DrawOTag(u_char *param_1);
;

extern u_char *PutDrawEnv(u_char *param_1);
;

extern u_short *PutDispEnv(u_short *param_1);
;

extern void SetDrawStp(int param_1, u_short *param_2);
;

extern void SetDrawArea(int param_1, int param_2);
;

extern void SetDefDrawEnv(int param_1, u_short *param_2);
;

extern void FUN_800b9d68(int param_1, u_char *param_2);
;

extern u_int FUN_800b9fd8(int param_1, int param_2, u_int param_3);
;

extern u_int FUN_800b9ff8(u_int param_1, u_int param_2);
;

extern u_int FUN_800ba090(u_int param_1, u_int param_2);
;

extern u_int FUN_800ba128(u_int param_1, u_int param_2);
;

extern u_int FUN_800ba144(byte *param_1);
;

extern dword FUN_800ba1dc(int param_1, dword param_2);
;

extern u_char FUN_800ba2bc(u_char *param_1, u_int param_2);
;

extern u_char FUN_800ba4ec(int param_1, dword *param_2);
;

extern u_char FUN_800ba728(int param_1, dword *param_2);
;

extern void FUN_800ba9a8(u_int param_1);
;

extern u_char FUN_800ba9e0(dword *param_1, int param_2);
;

extern void FUN_800baa20(dword param_1);
;

extern u_int FUN_800baa68(u_int param_1);
;

extern void FUN_800baa98(undefined *param_1, u_char *param_2, u_char param_3);
;

extern u_int FUN_800baabc(undefined *param_1, u_char *param_2, int param_3, u_char param_4);
;

extern u_int FUN_800bad6c(void);
;

extern u_char FUN_800bafcc(u_int param_1);
;

extern u_int FUN_800bb11c(int param_1);
;

extern void FUN_800bb258(void);
;

extern u_char FUN_800bb28c(void);
;

extern undefined8 FUN_800bb3d0(u_int param_1);
;

extern void FUN_800bb56c(void);
;

extern void FUN_800bb594(undefined *param_1, undefined param_2, int param_3);
;

extern u_char *ApplyMatrixSV(u_char *param_1, u_char *param_2, u_char *param_3);
;

extern void *memset(void *__s, int __c, size_t __n);
;

extern int rand(void);
;

extern void GetVideoMode(u_int __seed);
;

extern void TransMatrix(int param_1);
;

extern void SetRotMatrix(u_char *param_1);
;

extern void SetDrawEnv(undefined2 *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, int param_5);
;

extern void SetDefDispEnv(undefined2 *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5);
;

extern void SetGeomScreen(u_char param_1);
;

extern undefined2 *ApplyMatrix(u_char *param_1, u_char *param_2, undefined2 *param_3);
;

extern int ratan2(u_int param_1, u_int param_2);
;

extern u_char LoadAverageShort12(u_int *param_1, u_int *param_2, u_char param_3, u_char param_4, u_int *param_5);
;

extern u_char LoadAverageCol(byte *param_1, byte *param_2, u_char param_3, u_char param_4, undefined *param_5);
;

extern void SetFogNearFar(int param_1, int param_2, int param_3);
;

extern char *strchr(char *__s, int __c);
;

extern char *strcmp(char *__dest, char *__src);
;

extern int *ApplyMatrixLV(u_char *param_1, u_int *param_2, int *param_3);
;

extern u_char *TransposeMatrix(u_char *param_1, u_char *param_2);
;

extern void RotTrans(u_char *param_1, u_char *param_2, u_char *param_3);
;

extern void SetPolyFT4(int param_1);
;

extern size_t strlen(char *__s);
;

extern void SetFarColor(int param_1, int param_2, int param_3);
;

extern u_char SetRCnt(u_int param_1, undefined2 param_2, u_int param_3);
;

extern u_int GetRCnt(u_int param_1);
;

extern u_int StartRCnt(u_int param_1);
;

extern u_char StopRCnt(u_int param_1);
;

extern void PadInitDirect(u_char param_1, u_char param_2);
;

extern void FUN_800bc29c(int param_1);
;

extern char *strpbrk(char *__s, char *__accept);
;

extern void _padStartCom(void);
;

extern void PadStopCom(void);
;

extern u_int SetStates(void);
;

extern u_int PadInfoMode(u_char param_1, int param_2, int param_3);
;

extern u_int PadInfoAct(u_char param_1, int param_2, u_char param_3);
;

extern u_int _padSetActAlign(u_char param_1, u_char param_2);
;

extern void _padSetAct(u_char param_1, u_char param_2, undefined param_3);
;

extern u_int VSync(int param_1);
;

extern void FUN_800bcb7c(int param_1, int param_2);
;

extern int strcmpi(char *__s1, char *__s2);
;

extern void SetLightMatrix(u_char *param_1);
;

extern void SetBackColor(int param_1, int param_2, int param_3);
;

extern void SetColorMatrix(u_char *param_1);
;

extern u_int *PopMatrix(u_char *param_1, u_short *param_2, u_int *param_3);
;

extern u_int CdStatus(void);
;

extern u_int CdMode(void);
;

extern undefined1 *CdLastPos(void);
;

extern u_char CdReset(int param_1);
;

extern void CdFlush(void);
;

extern u_char CdSetDebug(u_char param_1);
;

extern void CdSync(int param_1, undefined *param_2);
;

extern void CdReady(int param_1, undefined *param_2);
;

extern u_char CdSyncCallback(u_char param_1);
;

extern u_char CdReadyCallback(u_char param_1);
;

extern u_char CdControlF(byte param_1, byte *param_2, undefined *param_3);
;

extern u_char CdControl(byte param_1, byte *param_2);
;

extern u_int CdControlB(byte param_1, byte *param_2, undefined *param_3);
;

extern u_int CdGetSector2(dword param_1, u_int param_2);
;

extern u_int CdGetSector(dword param_1, u_int param_2);
;

extern void CdDataCallback(void);
;

extern void CdDataSync(int param_1);
;

extern void CdIntToPos(int param_1, char *param_2);
;

extern int CdPosToInt(byte *param_1);
;

extern u_char CdInit(void);
;

extern u_int FUN_800bd59c(void);
;

extern void FUN_800bd5d8(void);
;

extern void FUN_800bd600(void);
;

extern void FUN_800bd628(void);
;

extern u_char *CdSearchFile(u_char *param_1, char *param_2);
;

extern u_int FUN_800bd934(char *param_1, char *param_2);
;

extern u_char FUN_800bd954(void);
;

extern int FUN_800bdc18(int param_1, char *param_2);
;

extern u_char FUN_800bdcbc(int param_1);
;

extern u_int FUN_800bdf58(u_char param_1, int param_2, u_char param_3);
;

extern void EnterCriticalSection(void);
;

extern int SpuIsTransferCompleted(int param_1);
;

extern void ExitCriticalSection(void);
;

extern void SetGeomOffset(int param_1, int param_2);
;

extern u_int InitGeom(void);
;

extern void EnableEvent(void);
;

extern void srand(u_int __seed);
;

extern void StopPAD(void);
;

extern u_char FUN_800be1a4(void);
;

extern u_char FUN_800be21c(void);
;

extern u_char FUN_800be254(void);
;

extern void OpenEvent(void);
;

extern void DisableEvent(void);
;

extern void CloseEvent(void);
;

extern u_int *MulMatrix2(u_char *param_1, u_int *param_2);
;

extern u_int *CompMatrix(u_char *param_1, u_short *param_2, u_int *param_3);
;

extern int SetTransMatrix(int param_1, u_char *param_2);
;

extern u_int GetTPage(u_int param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void PushMatrix(void);
;

extern void MulMatrix0(void);
;

extern char *strncmp(char *__dest, char *__src, size_t __n);
;

extern int SpuSetTransferCallback(u_int param_1);
;

extern u_int SpuRead(word *param_1, u_int param_2, u_int param_3);
;

extern void aadGetReverbDepth(word param_1, word param_2);
;

extern void SpuGetVoicePitch(int param_1, word *param_2);
;

extern void SpuSetVoiceStartAddr(int param_1, word param_2);
;

extern void SpuSetCommonAttr(int param_1);
;

extern void SpuSetKey(int param_1, u_int param_2);
;

extern void SpuGetAllKeysStatus(undefined *param_1);
;

extern u_char SpuClearReverbWorkArea(u_int param_1, u_char param_2, u_int param_3);
;

extern void SpuSetCommonMasterVolume(u_char param_1, u_char param_2);
;

extern u_int SpuWrite(u_int param_1, u_int param_2, u_int param_3);
;

extern int SpuSetTransferStartAddr(int param_1);
;

extern void SpuSetReverbVoice(int param_1, u_int param_2);
;

extern int SpuSetReverbModeDepth(int param_1);
;

extern void _SpuInit(void);
;

extern char *GetGp(void);
;

extern void SpuQuit(void);
;

extern u_char SpuSetReverbModeType(u_int param_1);
;

extern void SpuSetVoiceADSR1ADSR2(int vNum, u_short adsr1, u_short adsr2);
;

extern void SpuSetVoicePitch(int param_1, u_int param_2);
;

extern void sfxCmdSetVoiceAttr(int param_1, u_int param_2, u_int param_3, u_int param_4, u_char param_5, u_char param_6, int param_7, int param_8, int param_9);
;

extern int memcmp(byte *param_1, byte *param_2, int param_3);
;

extern int FUN_800bf408(byte *param_1, byte *param_2, int param_3);
;

extern dword BreakDraw(void);
;

extern int puts(char *__s);
;

extern void *memmove(void *__dest, void *__src, size_t __n);
;

extern void InitHeap(void);
;

extern void SpuSetCommonCDMix(u_int *param_1);
;

extern char *strtok(char *__s, char *__delim);
;

extern void StCdInterrupt(void);
;

extern void FUN_800c036c(u_char *param_1, u_char *param_2, u_int param_3);
;

extern void FUN_800c0398(u_int param_1, dword param_2, int param_3, u_int param_4, dword param_5, char param_6);
;

extern void StClearRing(void);
;

extern void StUnSetRing(void);
;

extern void CdRead2(u_int param_1);
;

extern void FUN_800c06a4(void);
;

extern void STREAM_SetStreamFog(u_int param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5);
;

extern void StSetMask(u_char param_1, u_char param_2, u_char param_3);
;

extern void StSetRing(u_char param_1, u_char param_2);
;

extern u_int StGetNext(int *param_1, short **param_2);
;

extern void data_ready_callback(void);
;

extern u_char StGetBackloc(char *param_1);
;

extern u_char StFreeRing(int param_1);
;

extern void SpuInit(void);
;

extern int setjmp(__jmp_buf_tag *__env);
;

extern void HookEntryInt(void);
;

extern undefined *startIntrVSync(void);
;

extern void FUN_800c0ad4(void);
;

extern void FUN_800c0b6c(u_char *param_1, int param_2);
;

extern undefined *startIntrDMA(void);
;

extern void FUN_800c0be8(void);
;

extern void FUN_800c0e14(u_char *param_1, int param_2);
;

extern void _96_remove(void);
;

extern void ReturnFromException(void);
;

extern void ChangeClearRCnt(void);
;

extern void ChangeClearPAD(void);
;

extern void ResetEntryInt(void);
;

extern void GPU_cw(void);
;

extern u_char GetVideoMode(void);
;

extern void SetDQB(u_char param_1);
;

extern void SetDQA(u_char param_1);
;

extern void _padSetVsyncParam(void);
;

extern u_char FUN_800c0f0c(void);
;

extern u_char FUN_800c0f74(void);
;

extern void aadStartSlot(void);
;

extern void _padStopCom(void);
;

extern u_char _padInitSioMode(int param_1);
;

extern void FUN_800c1524(void);
;

extern u_int _padSioRW(int param_1, int param_2);
;

extern u_int _padSioRW2(int param_1, undefined param_2);
;

extern u_char _padClrIntSio0(void);
;

extern void _padWaitRXready(void);
;

extern void _padInitDirSeq(void);
;

extern u_char FUN_800c1ae8(int param_1);
;

extern void FUN_800c1be8(int *param_1);
;

extern void _dirFailAuto(int param_1);
;

extern u_char FUN_800c1f14(int param_1);
;

extern void bzero(void *__s, size_t __n);
;

extern void PadSetAct(int param_1, u_char param_2, undefined param_3);
;

extern u_char _padRecvAtLoadInfo(int param_1);
;

extern u_char _padSendAtLoadInfo(int *param_1);
;

extern int _padGetActSize(int param_1);
;

extern u_char _padLoadActInfo(int *param_1, int param_2);
;

extern void FUN_800c225c(int param_1);
;

extern u_int PadSetActAlign(int param_1, u_char param_2);
;

extern void _padCmdParaMode(int param_1, undefined param_2);
;

extern void FUN_800c26e4(int param_1);
;

extern void FUN_800c26f8(int param_1, undefined param_2);
;

extern void FUN_800c2718(int param_1, undefined param_2);
;

extern void FUN_800c2738(int param_1, undefined param_2);
;

extern void FUN_800c2758(int param_1);
;

extern u_char FUN_800c2778(void);
;

extern u_int CD_sync(int param_1, undefined *param_2);
;

extern u_int CD_ready(int param_1, undefined *param_2);
;

extern u_char CD_cw(byte param_1, byte *param_2, undefined *param_3, int param_4);
;

extern void CD_flush(void);
;

extern u_char CD_initvol(void);
;

extern void CD_initintr(void);
;

extern u_char CD_init(void);
;

extern u_char CD_datasync(int param_1);
;

extern u_char CD_getsector(dword param_1, u_int param_2);
;

extern u_char CD_getsector2(dword param_1, u_int param_2);
;

extern void FUN_800c3d78(void);
;

extern void DeliverEvent(void);
;

extern u_char FUN_800c41ac(int param_1);
;

extern u_int CdRead(u_char param_1, u_char param_2, u_int param_3);
;

extern int CdReadSync(int param_1, undefined *param_2);
;

extern int SpuSetReverb(int param_1);
;

extern void SpuStart(void);
;

extern u_char _spu_init(int param_1);
;

extern void FUN_800c493c(word *param_1, u_int param_2);
;

extern void _spu_FiDMA(void);
;

extern u_char _spu_t(int param_1, u_int param_2, u_int param_3);
;

extern u_int _spu_FiDMA(word *param_1, u_int param_2, u_int param_3);
;

extern u_int _spu_Fr(u_int param_1, u_int param_2, u_int param_3);
;

extern u_int _spu_Fw(int param_1, u_int param_2, int param_3);
;

extern u_int _spu_FsetRXX(int param_1, u_int param_2);
;

extern void FUN_800c5060(void);
;

extern void FUN_800c5088(void);
;

extern void _spu_Fw1ts(void);
;

extern void WaitEvent(void);
;

extern void _patch_gte(void);
;

extern void DisableEvent(void);
;

extern void StopPAD2(void);
;

extern void SysDeqIntRP(void);
;

extern void SysEnqIntRP(void);
;

extern u_char _SpuIsInAllocateArea_(int param_1);
;

extern void TestEvent(void);
;

extern u_int _SpuSetAnyVoice(int param_1, u_int param_2, int param_3, int param_4);
;

extern void DsReadyCallback(void);
;

extern void _spu_setReverbAttr(u_int *param_1);
;

extern int _putchar_flash(int __c);
;

extern int _putchar(int __c);
;

extern char *strcat(char *__dest, char *__src);
;

extern int open(char *__file, int __oflag, ...);
;

extern int close(int __fd);
;

extern __off_t lseek(int __fd, __off_t __offset, int __whence);
;

extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
;

extern ssize_t write(int __fd, void *__buf, size_t __n);
;

extern u_char firstfile(char *param_1);
;

extern void FUN_800c5e80(int *param_1, u_char param_2, u_char param_3);
;

extern void nextfile(void);
;

extern void erase(void);
;

extern void format(void);
;

extern void init_ring_status(int param_1, u_int param_2);
;

extern u_char InterruptCallback(u_char param_1);
;

extern void _SpuDataCallback(void);
;

extern void setRC2wait(u_char param_1);
;

extern u_int chkRC2wait(void);
;

extern void FUN_800c60ec(int param_1);
;

extern u_int FUN_800c620c(int param_1);
;

extern u_int FUN_800c62cc(int param_1);
;

extern u_int FUN_800c6358(int param_1);
;

extern void FlushCache(void);
;

extern void _bu_init(void);
;

extern void firstfile2(void);
;

extern void FUN_a0012c2c(int param_1, u_short *param_2, u_short *param_3);
;

extern void FUN_a0012cac(int param_1);
;

extern void FUN_a0012cf8(int param_1);
;

extern void FUN_a0012d44(int param_1);
;

extern void FUN_a0012d90(int *param_1);
;

extern void FUN_a0012ddc(void);
;

extern void FUN_a0013030(int param_1, u_int *param_2);
;

extern void FUN_a00130d0(int param_1, u_char param_2, byte *param_3);
;

extern void FUN_a001327c(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern int FUN_a00132c4(int *param_1);
;

extern void FUN_a00132f0(void);
;

extern int *FUN_a0013388(int *param_1);
;

extern int FUN_a00133b8(int *param_1);
;

extern void FUN_a00133e8(int param_1, int *param_2);
;

extern void FUN_a0013714(u_char param_1, int param_2);
;

extern u_char FUN_a0013778(int param_1);
;

extern void FUN_a00137a0(int param_1, DebugMenuLine *param_2);
;

extern void FUN_a0013844(void);
;

extern void FUN_a001385c(void);
;

extern u_int FUN_a0013874(char param_1);
;

extern void FUN_a0013884(byte *param_1, int *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0013a2c(char *param_1);
;

extern void FUN_a0013a64(u_char param_1, u_short *param_2, byte *param_3, u_char param_4);
;

extern void FUN_a0013b64(u_char param_1, int *param_2, byte *param_3);
;

extern void FUN_a0013d70(int param_1, u_char param_2, byte *param_3);
;

extern void FUN_a0013e84(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00140ec(void);
;

extern void FUN_a001410c(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_a00142bc(void);
;

extern void FUN_a0014314(int param_1);
;

extern void FUN_a001443c(void);
;

extern void FUN_a0014444(void);
;

extern void FUN_a0014550(byte *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00145a4(void);
;

extern void FUN_a00145ac(int param_1);
;

extern void FUN_a0014720(int param_1);
;

extern void FUN_a0014a5c(u_char *param_1);
;

extern void FUN_a0014b7c(int param_1);
;

extern void FUN_a0014ba8(int param_1, u_char param_2);
;

extern void FUN_a0014c50(short *param_1);
;

extern void FUN_a0014cf4(u_int param_1, int param_2);
;

extern void FUN_a001502c(Camera *param_1);
;

extern void FUN_a00154d8(int param_1, u_int param_2);
;

extern void FUN_a00155a8(Camera *param_1, u_int param_2);
;

extern undefined *FUN_a0015664(int *param_1, short *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00156c8(Camera *param_1, int param_2);
;

extern void FUN_a0015b48(undefined *param_1);
;

extern void FUN_a0015e50(int param_1, int param_2);
;

extern void FUN_a0015eb0(int param_1, undefined2 param_2);
;

extern void FUN_a0015ed4(short *param_1);
;

extern void FUN_a0015f28(int param_1, int param_2, u_char param_3);
;

extern int FUN_a0016354(u_int param_1, u_int param_2);
;

extern int FUN_a00163cc(short param_1, short param_2);
;

extern u_int FUN_a00163fc(int param_1);
;

extern void FUN_a0016498(int param_1);
;

extern void FUN_a00165a4(short *param_1, short *param_2);
;

extern void FUN_a0016620(short *param_1, short *param_2, short *param_3, short param_4);
;

extern void FUN_a0016748(int param_1, short *param_2);
;

extern void FUN_a00169c4(int param_1, u_int param_2);
;

extern void FUN_a00169d8(int param_1, u_int param_2);
;

extern void FUN_a00169ec(int param_1, int param_2, u_int param_3);
;

extern void FUN_a0016a3c(int param_1);
;

extern void FUN_a0016a5c(int param_1, u_short param_2);
;

extern void FUN_a0016a98(int param_1, short param_2);
;

extern void FUN_a0016b14(int param_1, short param_2);
;

extern void FUN_a0016b98(u_int param_1, int param_2);
;

extern void FUN_a0016c1c(int param_1, u_int param_2);
;

extern void FUN_a0016cdc(int param_1, u_char param_2);
;

extern void FUN_a0016ce4(int param_1, int param_2, int param_3);
;

extern void FUN_a0016d94(short *param_1, short param_2, short param_3);
;

extern void FUN_a0016de4(int param_1, u_short *param_2, int param_3, u_short *param_4, u_short *param_5, u_short param_6);
;

extern void FUN_a0016f98(int param_1, u_short *param_2, u_short *param_3, _SVector *param_4, short *param_5, short param_6);
;

extern void FUN_a001765c(int param_1, u_short *param_2, u_int param_3, u_short *param_4, u_short *param_5, u_short param_6);
;

extern void FUN_a00176fc(short *param_1, short *param_2);
;

extern void FUN_a0017774(u_char param_1, short *param_2, short *param_3);
;

extern void FUN_a0017810(u_char param_1, u_char param_2, short *param_3, short *param_4);
;

extern void FUN_a00178bc(short *param_1, short *param_2, int param_3);
;

extern int FUN_a0017a08(int param_1, int *param_2, int param_3);
;

extern void FUN_a0018550(u_char param_1, short param_2);
;

extern void FUN_a00185c4(int param_1, u_int param_2);
;

extern void FUN_a001860c(int param_1, undefined2 *param_2, undefined2 param_3);
;

extern void FUN_a0018634(undefined2 *param_1);
;

extern void FUN_a0018888(short *param_1);
;

extern void FUN_a0018900(int param_1);
;

extern void FUN_a0018ab4(undefined2 *param_1, int param_2);
;

extern void FUN_a0018b68(undefined2 *param_1, int param_2);
;

extern int FUN_a0018bd4(short *param_1, u_char param_2, u_char param_3, short *param_4, short *param_5);
;

extern int FUN_a0018cc8(u_char param_1, int param_2, short *param_3, int param_4);
;

extern void FUN_a0018e90(u_char param_1, int param_2);
;

extern void FUN_a0018f60(int param_1, short param_2);
;

extern int FUN_a0018fd0(short param_1);
;

extern u_char FUN_a0019088(int param_1, int param_2);
;

extern u_char FUN_a0019594(int param_1, int param_2);
;

extern int FUN_a00196bc(int param_1, u_short param_2, short param_3);
;

extern void FUN_a0019934(int param_1);
;

extern void FUN_a0019bf8(short *param_1);
;

extern void FUN_a001a074(u_short *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern int FUN_a001a590(short *param_1, short *param_2);
;

extern void FUN_a001a60c(short *param_1, short *param_2, short *param_3, undefined2 *param_4);
;

extern u_char FUN_a001a738(int param_1, int param_2, int param_3);
;

extern u_int FUN_a001a77c(short *param_1, short *param_2, short *param_3);
;

extern u_char FUN_a001a80c(undefined2 *param_1, short *param_2, short *param_3, int param_4);
;

extern void FUN_a001a9d0(undefined2 *param_1, int *param_2, u_char param_3, int *param_4, undefined2 *param_5);
;

extern void FUN_a001abb8(int *param_1, u_int *param_2, int *param_3, u_int param_4);
;

extern void FUN_a001af50(int param_1);
;

extern void FUN_a001b0c4(undefined2 *param_1);
;

extern void FUN_a001b418(short *param_1);
;

extern void FUN_a001b504(int *param_1);
;

extern void FUN_a001b750(int param_1);
;

extern void FUN_a001b838(int param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_a001b844(int param_1, u_char param_2, u_int param_3, u_int param_4);
;

extern void FUN_a001b8d4(int param_1, u_char param_2, u_int param_3, u_int param_4);
;

extern void FUN_a001b914(Camera *param_1, u_int param_2, u_int param_3);
;

extern void FUN_a001b938(Camera *param_1, u_int param_2, u_int param_3);
;

extern void FUN_a001b974(Camera *param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void FUN_a001bec4(Camera *param_1, u_int param_2, u_int param_3);
;

extern void FUN_a001bf84(short *param_1, int param_2);
;

extern void FUN_a001c030(int param_1, int param_2);
;

extern void FUN_a001c0a4(int param_1);
;

extern void FUN_a001c174(int param_1);
;

extern void FUN_a001c240(int param_1);
;

extern void FUN_a001c35c(int param_1);
;

extern void FUN_a001c448(int param_1, int param_2);
;

extern void FUN_a001c6c0(int param_1, int param_2);
;

extern void FUN_a001c8b0(int param_1);
;

extern void FUN_a001c9ac(int param_1);
;

extern void FUN_a001c9e8(int param_1);
;

extern void FUN_a001cb90(u_int param_1, undefined2 *param_2);
;

extern void FUN_a001ce84(int param_1, int param_2, undefined2 *param_3);
;

extern void FUN_a001cf44(int param_1, int *param_2, int param_3, undefined2 *param_4, short *param_5);
;

extern void FUN_a001d014(int param_1, short param_2);
;

extern u_char FUN_a001d1c4(int param_1, undefined2 *param_2, int param_3);
;

extern u_char FUN_a001d7b4(int param_1);
;

extern void FUN_a001dff0(int param_1, u_int *param_2, int param_3);
;

extern u_int FUN_a001e0f8(int param_1);
;

extern u_char FUN_a001e158(u_int *param_1, u_char *param_2);
;

extern void FUN_a001e234(int param_1, u_int *param_2);
;

extern u_int *FUN_a001e258(int *param_1, u_char param_2);
;

extern u_int *FUN_a001e338(int param_1, int param_2);
;

extern void FUN_a001e3ec(int param_1);
;

extern void FUN_a001e43c(int param_1);
;

extern u_int FUN_a001e48c(u_char *param_1, u_char *param_2, undefined2 *param_3, short *param_4, short *param_5);
;

extern void FUN_a001e718(u_char *param_1, u_char *param_2, undefined2 *param_3, short *param_4);
;

extern void FUN_a001e7fc(int param_1, u_short *param_2, undefined2 *param_3);
;

extern void FUN_a001e9d4(int param_1, short *param_2);
;

extern void FUN_a001eaa4(int param_1, short *param_2);
;

extern void FUN_a001ec88(short param_1, int param_2, short param_3, short *param_4, int *param_5, u_char param_6, undefined *param_7, undefined2 *param_8);
;

extern u_int FUN_a001ee34(u_char param_1, u_char param_2, u_char param_3, u_char param_4, short *param_5, short *param_6, int param_7);
;

extern void FUN_a001f0b0(u_char param_1, u_char param_2, u_char param_3);
;

extern u_short *FUN_a001f0e0(u_short *param_1, int param_2, u_int param_3, undefined2 *param_4, u_int param_5, u_int param_6, u_short **param_7);
;

extern u_char FUN_a001fc60(u_char *param_1, short *param_2, short *param_3, int param_4, undefined2 *param_5);
;

extern void FUN_a001fea8(undefined2 *param_1, int param_2);
;

extern void FUN_a00206dc(int param_1, int param_2);
;

extern void FUN_a0020860(undefined2 *param_1, int *param_2);
;

extern u_char FUN_a0020c58(short *param_1, int param_2, short *param_3);
;

extern u_char FUN_a0020d2c(short *param_1, short *param_2);
;

extern u_int FUN_a0020f70(int param_1, u_short *param_2, short *param_3, short *param_4);
;

extern void FUN_a00213f4(int param_1, int param_2);
;

extern void FUN_a002215c(int param_1, int param_2);
;

extern void FUN_a00222a4(int param_1);
;

extern u_char FUN_a0022558(u_int *param_1, short *param_2, int param_3, undefined2 *param_4, u_char *param_5);
;

extern void FUN_a0022c34(int *param_1, int *param_2);
;

extern u_char FUN_a002370c(int *param_1, Level *param_2);
;

extern void FUN_a00237f8(int param_1, Level *param_2);
;

extern int FUN_a0023a20(u_int param_1, u_int param_2, int param_3, int param_4, int *param_5);
;

extern void FUN_a00241e4(int param_1, u_char param_2);
;

extern STracker *FUN_a0024398(u_int param_1);
;

extern void FUN_a0024608(int param_1);
;

extern void FUN_a002467c(int param_1);
;

extern void FUN_a002472c(int param_1, u_int param_2);
;

extern void FUN_a00247a4(int param_1, u_int param_2);
;

extern u_char FUN_a0024840(int **param_1, u_char param_2);
;

extern int FUN_a002497c(int **param_1);
;

extern void FUN_a00249a4(int **param_1, u_short param_2);
;

extern u_char FUN_a00249d8(int param_1, int param_2, short *param_3, short *param_4, u_short *param_5, u_int param_6, u_int param_7);
;

extern void FUN_a0024d14(void);
;

extern u_char FUN_a0024d78(u_char param_1);
;

extern u_char FUN_a0025994(u_char param_1, u_int param_2, int param_3);
;

extern void FUN_a0026164(int *param_1, int param_2);
;

extern u_int FUN_a0026cd8(int param_1, u_char *param_2, u_int param_3, u_char *param_4, u_short *param_5, u_char *param_6, u_int *param_7, u_int *param_8);
;

extern void FUN_a0027b10(u_char param_1, u_char param_2);
;

extern u_int FUN_a00282f4(int param_1, u_char param_2, int param_3, u_char *param_4, int param_5);
;

extern void FUN_a002a478(short *param_1, short *param_2, short *param_3);
;

extern void FUN_a002a4f4(void);
;

extern u_int *FUN_a002a5c0(u_int *param_1, u_char param_2, int param_3, int param_4);
;

extern void FUN_a002a788(u_int *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7, undefined2 param_8, undefined2 param_9, int *param_10, u_int *param_11);
;

extern void FUN_a002a830(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7, undefined2 param_8, undefined param_9, undefined param_10, undefined param_11, int param_12, int *param_13, u_int *param_14);
;

extern void FUN_a002a914(undefined2 *param_1, short param_2, short param_3, u_int *param_4);
;

extern void FUN_a002aa74(int param_1, u_short *param_2);
;

extern void FUN_a002ac14(char *param_1, u_short *param_2);
;

extern void FUN_a002ac64(int param_1);
;

extern void FUN_a002ac88(int param_1, int param_2, u_int param_3);
;

extern void FUN_a002adb8(void);
;

extern u_long *FUN_a002aec8(int param_1, int param_2, u_char *param_3, _PrimPool *param_4, u_long **param_5, long param_6, int param_7);
;

extern void FUN_a002b1e4(int *param_1, int param_2, int param_3, u_int param_4, undefined2 *param_5, undefined2 *param_6, undefined2 *param_7, undefined2 *param_8);
;

extern void FUN_a002b448(int param_1, int param_2, u_char param_3, u_char param_4, int param_5);
;

extern u_char FUN_a002b9f4(u_char param_1, u_char param_2, u_char param_3, int param_4);
;

extern u_char FUN_a002bb60(u_char param_1, u_char param_2, int param_3, u_char param_4);
;

extern u_char FUN_a002bc30(u_char *param_1, u_char *param_2, u_char *param_3, u_int *param_4, u_int *param_5, u_int *param_6, u_int param_7, u_char param_8, u_int param_9, int *param_10, int param_11, int param_12);
;

extern u_char FUN_a002c470(int param_1, u_char param_2, int param_3);
;

extern void FUN_a002c974(void);
;

extern void FUN_a002ca94(int param_1, int param_2);
;

extern void FUN_a002cb18(void);
;

extern void FUN_a002cc38(void);
;

extern void FUN_a002cc9c(short *param_1);
;

extern u_int FUN_a002ccd0(u_int param_1);
;

extern void FUN_a002ccec(int param_1, short param_2, short param_3);
;

extern void FUN_a002cef8(byte param_1, short param_2, short param_3);
;

extern int FUN_a002d12c(u_int param_1, int param_2);
;

extern void FUN_a002d270(char param_1, u_short param_2, u_short param_3);
;

extern void FUN_a002d2e0(byte *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a002d37c(byte *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern int FUN_a002d3d4(byte *param_1);
;

extern void FUN_a002d448(void);
;

extern void FUN_a002d4fc(byte *param_1);
;

extern void FUN_a002d694(byte *param_1, short param_2);
;

extern void FUN_a002d6ec(undefined param_1);
;

extern void FUN_a002d6f8(void);
;

extern void FUN_a002d7e8(void);
;

extern void FUN_a002d8e8(void);
;

extern void FUN_a002d920(void);
;

extern void FUN_a002d940(void);
;

extern void FUN_a002d970(void);
;

extern void FUN_a002da1c(int param_1);
;

extern u_char FUN_a002dab0(void);
;

extern void FUN_a002db40(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern STracker *FUN_a002db78(byte *param_1, int param_2, u_char param_3, u_char param_4);
;

extern void FUN_a002dd74(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a002ddcc(byte *param_1, int param_2, u_char param_3, u_char param_4);
;

extern void FUN_a002e0f0(byte *param_1, int param_2, u_char param_3, u_char param_4);
;

extern void FUN_a002e110(undefined2 param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_a002e124(u_int *param_1);
;

extern void FUN_a002e590(int param_1, int param_2);
;

extern u_char FUN_a002e6b8(byte *param_1);
;

extern void FUN_a002e700(u_char *param_1, byte *param_2, u_char *param_3);
;

extern void FUN_a002e7f4(int *param_1, int param_2);
;

extern void FUN_a002ed64(u_char *param_1);
;

extern u_char FUN_a002eda4(int *param_1, u_char param_2, int param_3, int param_4);
;

extern void FUN_a002f130(int param_1, int param_2);
;

extern void FUN_a002f1e8(int param_1);
;

extern void FUN_a002f290(int param_1);
;

extern void FUN_a002f314(int param_1);
;

extern STracker *FUN_a002f330(void);
;

extern void FUN_a002f3f4(int param_1, u_char param_2, STracker *param_3, STracker *param_4);
;

extern void FUN_a002fa1c(int param_1);
;

extern void FUN_a002fb98(void);
;

extern void FUN_a002fc44(void);
;

extern void FUN_a002fde4(void);
;

extern void FUN_a002fe24(void);
;

extern void FUN_a002fe34(void);
;

extern void FUN_a002fe40(void);
;

extern void FUN_a0030044(u_int param_1, undefined *param_2, u_int param_3, _func_67 *param_4);
;

extern void FUN_a0030708(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_a00307e0(void);
;

extern void FUN_a00308b4(void);
;

extern void FUN_a00308cc(u_int param_1, undefined *param_2, u_int param_3);
;

extern void FUN_a0030c80(char *param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0030d00(u_int param_1, char *param_2, u_int param_3, _func_67 *param_4);
;

extern int FUN_a0030d2c(int param_1);
;

extern void FUN_a0030d70(int param_1, int param_2, int param_3);
;

extern u_char FUN_a0031140(void);
;

extern int FUN_a003114c(void);
;

extern void FUN_a0031158(void);
;

extern void FUN_a0031198(void);
;

extern void FUN_a00311a8(void);
;

extern void FUN_a00312a0(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00312e4(u_char param_1, u_char param_2);
;

extern void FUN_a0031320(u_char param_1, u_char param_2);
;

extern void FUN_a003135c(void);
;

extern void FUN_a0031440(void);
;

extern void FUN_a00314dc(char *param_1, int param_2);
;

extern void FUN_a0031544(void);
;

extern void FUN_a00315b0(u_int *param_1, u_short param_2, u_short param_3);
;

extern u_int FUN_a00316d4(u_int param_1);
;

extern void FUN_a0031720(u_int *param_1);
;

extern void FUN_a0031a00(int param_1);
;

extern void FUN_a0031a60(int param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0031afc(void);
;

extern void FUN_a0031bb0(void);
;

extern void FUN_a0031c84(int param_1);
;

extern void FUN_a0031d34(int param_1);
;

extern void FUN_a0031dcc(int param_1);
;

extern void FUN_a0031e00(void);
;

extern void FUN_a0031e08(int param_1);
;

extern void FUN_a0032074(u_char *param_1, u_char *param_2);
;

extern int FUN_a0032114(int *param_1);
;

extern u_int FUN_a00321a0(int param_1);
;

extern void FUN_a00322bc(int param_1, int *param_2);
;

extern void FUN_a0032304(int *param_1, _Instance *param_2, u_int param_3);
;

extern void FUN_a0032574(int *param_1, u_int param_2);
;

extern int FUN_a0032630(int param_1);
;

extern short *FUN_a00326e8(short *param_1, int param_2);
;

extern void FUN_a0032738(int param_1, int param_2);
;

extern void FUN_a003275c(int param_1);
;

extern void FUN_a00327d8(_Instance *param_1, int param_2);
;

extern _Instance *FUN_a0032860(Intro *param_1, short param_2, int param_3, int param_4);
;

extern void FUN_a0032f90(int param_1);
;

extern void FUN_a00330bc(int param_1, int param_2);
;

extern void FUN_a00330f4(int param_1);
;

extern _Instance *FUN_a00338d4(_Instance *param_1, u_int *param_2, int param_3, u_int param_4);
;

extern void FUN_a0033b44(void);
;

extern void FUN_a0033b4c(int param_1, u_int *param_2, int param_3);
;

extern void FUN_a0033f04(int param_1);
;

extern void FUN_a003402c(int param_1);
;

extern u_char FUN_a0034060(int param_1);
;

extern void FUN_a003409c(int param_1, u_char param_2, u_char param_3);
;

extern void FUN_a0034100(int param_1, u_int param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_a00341ac(int param_1, int param_2);
;

extern u_char FUN_a0034208(int param_1);
;

extern int FUN_a0034248(int param_1, byte *param_2, int param_3);
;

extern Intro *FUN_a003431c(int param_1, int param_2);
;

extern int FUN_a00343a0(int param_1);
;

extern _Instance *FUN_a00343e0(SavedBasic *param_1, int param_2, int param_3, int param_4);
;

extern _Instance *FUN_a0034800(SavedBasic *param_1, long *param_2, int param_3, int param_4);
;

extern void FUN_a0034c2c(int param_1);
;

extern u_int FUN_a0034d90(int param_1, u_char param_2, int *param_3, u_char *param_4, u_char param_5);
;

extern void FUN_a0034ea0(int param_1, int param_2, u_char param_3);
;

extern void FUN_a0034f5c(int param_1);
;

extern void FUN_a00350c0(int param_1);
;

extern void FUN_a003512c(int param_1);
;

extern int FUN_a0035184(int param_1, int param_2);
;

extern u_int FUN_a00351bc(int param_1, int param_2);
;

extern int FUN_a003520c(int param_1);
;

extern int FUN_a00352f0(u_char param_1, u_char param_2, int param_3, int param_4, short *param_5, _Instance *param_6);
;

extern void FUN_a0035370(int param_1, int param_2, short *param_3, short *param_4);
;

extern void FUN_a00356ec(int param_1, short param_2, u_char param_3);
;

extern void FUN_a00358fc(undefined *param_1, int param_2);
;

extern void FUN_a003592c(u_short *param_1, _Instance *param_2, int param_3);
;

extern void FUN_a0036080(int param_1);
;

extern void FUN_a00360b0(int param_1, int param_2);
;

extern void FUN_a003647c(u_char param_1, int param_2);
;

extern void FUN_a0036760(int param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_a0036a60(int param_1);
;

extern void FUN_a0036b1c(void);
;

extern void FUN_a0036b24(void);
;

extern void FUN_a0036b2c(u_char param_1, u_char param_2, int param_3, int param_4);
;

extern void FUN_a0036c4c(u_int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a0036cfc(int param_1, u_int param_2, int param_3, int param_4);
;

extern void FUN_a0036d90(u_char param_1, u_char param_2, int param_3);
;

extern u_int FUN_a0036de8(int param_1, u_short *param_2);
;

extern void FUN_a0036e9c(int param_1, int param_2);
;

extern void FUN_a00370b8(int param_1);
;

extern void FUN_a00371cc(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0037248(void);
;

extern void FUN_a00374c8(int param_1);
;

extern void FUN_a003750c(void);
;

extern void FUN_a00375b8(void);
;

extern void FUN_a00375d4(void);
;

extern void FUN_a0037650(void);
;

extern void FUN_a00376c4(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern undefined2 *FUN_a0037868(char *param_1, byte param_2, u_char param_3, undefined *param_4);
;

extern void FUN_a0037948(u_char param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5);
;

extern undefined2 *FUN_a0037974(int param_1);
;

extern void FUN_a00379dc(char *param_1, u_char param_2, u_char param_3, undefined *param_4);
;

extern u_char FUN_a0037b34(int *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0037bbc(int *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0037c40(int *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_int FUN_a0037ce4(char *param_1);
;

extern int FUN_a0037e3c(byte *param_1);
;

extern int *FUN_a0037ee0(int param_1);
;

extern void FUN_a0037f68(char *param_1);
;

extern u_int FUN_a0037f90(char *param_1);
;

extern void FUN_a0037fc4(int param_1, short param_2, undefined2 param_3, short param_4, undefined2 param_5);
;

extern void FUN_a0038064(int param_1, short param_2, undefined2 param_3);
;

extern int FUN_a00380ac(int *param_1, int param_2);
;

extern void FUN_a0038164(void);
;

extern undefined2 *FUN_a00381ac(void);
;

extern void FUN_a00381e8(void);
;

extern void FUN_a0038230(void);
;

extern u_char FUN_a0038280(int param_1);
;

extern void FUN_a0038388(u_char param_1);
;

extern u_char FUN_a0038394(void);
;

extern u_char FUN_a00383a0(void);
;

extern void FUN_a00383ac(int param_1, int param_2);
;

extern u_int FUN_a00383dc(void);
;

extern void FUN_a00383e8(void);
;

extern void FUN_a003840c(void);
;

extern void FUN_a0038498(char *param_1);
;

extern void FUN_a00384ec(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0038534(u_char *param_1);
;

extern byte *FUN_a0038544(byte *param_1, byte *param_2);
;

extern void FUN_a00385cc(byte *param_1, byte *param_2);
;

extern void FUN_a0038618(byte *param_1, byte *param_2);
;

extern void FUN_a0038684(u_int param_1, int param_2);
;

extern void FUN_a00388d0(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0038a64(void);
;

extern void FUN_a0038b94(int param_1);
;

extern void FUN_a0038ce8(void);
;

extern void FUN_a0038d48(void);
;

extern void FUN_a0038e08(char *param_1);
;

extern void FUN_a0038e28(int param_1);
;

extern void FUN_a0038e74(u_char param_1, u_char param_2, u_int param_3, u_char param_4);
;

extern void FUN_a0038f70(int param_1);
;

extern void FUN_a0038fd4(void);
;

extern void FUN_a0039014(void);
;

extern void FUN_a0039064(void);
;

extern void FUN_a00391dc(u_char param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern void FUN_a003924c(u_char param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern u_char FUN_a00392b8(int param_1, char *param_2, byte *param_3, u_char param_4);
;

extern u_char FUN_a0039394(void *param_1);
;

extern void FUN_a00399c8(int *param_1, int *param_2, int *param_3);
;

extern int FUN_a0039a4c(int param_1, int param_2, int param_3);
;

extern int FUN_a0039b1c(u_int param_1, u_int param_2);
;

extern void FUN_a0039b7c(short *param_1);
;

extern int FUN_a0039c0c(int param_1, int param_2);
;

extern u_int FUN_a0039d28(u_int param_1);
;

extern u_int FUN_a0039e08(u_int param_1);
;

extern void FUN_a0039e98(short *param_1, short *param_2);
;

extern u_char FUN_a0039ee4(short *param_1, short *param_2);
;

extern void FUN_a0039fd0(int param_1, u_char param_2, short param_3);
;

extern void FUN_a003a0a0(u_char *param_1);
;

extern void FUN_a003a0bc(short *param_1, short param_2);
;

extern int FUN_a003a168(short param_1, short param_2);
;

extern void FUN_a003a18c(short *param_1, short *param_2);
;

extern void FUN_a003a1c4(u_short *param_1);
;

extern void FUN_a003a220(short *param_1, short *param_2);
;

extern void FUN_a003a2a4(short *param_1, short *param_2, undefined2 *param_3);
;

extern int FUN_a003a2f8(u_int param_1, u_int param_2);
;

extern void FUN_a003a358(u_char param_1, int param_2, short *param_3, u_int param_4);
;

extern void FUN_a003a5b0(short *param_1);
;

extern void FUN_a003a668(undefined2 *param_1, short *param_2, short *param_3);
;

extern int FUN_a003a70c(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_a003a740(short *param_1);
;

extern void FUN_a003a7c8(short *param_1);
;

extern void FUN_a003ab44(u_char *param_1, int *param_2);
;

extern void FUN_a003abd8(int param_1, int param_2);
;

extern void FUN_a003ac14(int *param_1, int *param_2);
;

extern void FUN_a003ad00(int param_1, u_short *param_2, int *param_3, int *param_4);
;

extern void FUN_a003b02c(int param_1, int param_2, u_char *param_3, int param_4, u_char param_5);
;

extern void FUN_a003b324(u_int param_1, u_int param_2, int *param_3, int *param_4, int *param_5, int *param_6);
;

extern void FUN_a003b534(u_int param_1, u_int param_2);
;

extern void FUN_a003b924(int param_1, u_char param_2, int param_3, int param_4);
;

extern void FUN_a003bc80(int *param_1, int param_2, u_char param_3, u_char param_4);
;

extern void FUN_a003bd78(u_int *param_1, short *param_2);
;

extern void FUN_a003bf68(u_int *param_1, short *param_2, short *param_3);
;

extern u_char FUN_a003c03c(int param_1, undefined2 *param_2, int param_3, u_char *param_4, int param_5, u_char param_6, u_char *param_7, u_char *param_8, _Normal *param_9);
;

extern void FUN_a003c60c(int param_1, undefined2 *param_2, int param_3, u_char *param_4, u_short *param_5);
;

extern void FUN_a003c780(int *param_1, u_int param_2);
;

extern void FUN_a003c820(int *param_1, u_int param_2, int *param_3, int param_4);
;

extern void FUN_a003c9b8(int param_1, u_char *param_2, int param_3, int param_4, u_char param_5, u_char param_6);
;

extern void FUN_a003cbac(int param_1, u_char *param_2, u_char param_3, int param_4, u_char param_5, int param_6);
;

extern void FUN_a003cd7c(int param_1, u_char param_2, u_int *param_3, int param_4, u_char param_5, int param_6);
;

extern int FUN_a003d158(int param_1, u_char *param_2, int param_3, u_char *param_4);
;

extern void FUN_a003d1dc(int *param_1, int param_2, int param_3);
;

extern void FUN_a003d214(u_char param_1, u_short *param_2);
;

extern void FUN_a003d294(int param_1);
;

extern int FUN_a003d4e4(int param_1);
;

extern u_char FUN_a003d634(int param_1);
;

extern u_char FUN_a003d66c(int param_1);
;

extern u_int FUN_a003d6a4(int param_1, u_int *param_2);
;

extern int FUN_a003d704(int param_1, u_char *param_2, u_char *param_3);
;

extern int FUN_a003d7b0(int param_1, int param_2, int param_3, int param_4);
;

extern int FUN_a003d7dc(int param_1, int param_2, int param_3, int param_4);
;

extern int FUN_a003d808(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a003d834(int param_1, short *param_2);
;

extern void FUN_a003da24(int param_1, u_int param_2, short *param_3, short *param_4, short *param_5);
;

extern u_int FUN_a003dcfc(int param_1, int **param_2, u_short *param_3, u_short *param_4, u_short *param_5, int param_6, int param_7);
;

extern u_int FUN_a003dfe4(int param_1, u_short *param_2, u_short *param_3, u_short *param_4, int param_5);
;

extern void FUN_a003e134(int param_1, u_int param_2);
;

extern int FUN_a003e314(void);
;

extern u_int FUN_a003e3a4(u_int param_1);
;

extern void FUN_a003e48c(int param_1, short param_2);
;

extern void FUN_a003e4f0(int param_1, u_char param_2, u_char param_3, short param_4);
;

extern void FUN_a003e510(int param_1);
;

extern void FUN_a003e5fc(int param_1);
;

extern void FUN_a003e644(int param_1);
;

extern void FUN_a003e684(int param_1);
;

extern void FUN_a003e6cc(int param_1);
;

extern void FUN_a003e714(int param_1);
;

extern void FUN_a003e75c(void *param_1);
;

extern void FUN_a003e934(void);
;

extern void FUN_a003e968(void *param_1);
;

extern int FUN_a003e9b0(int *param_1);
;

extern void FUN_a003ea5c(void *param_1, void *param_2);
;

extern void FUN_a003eaa4(int param_1, int param_2);
;

extern void FUN_a003eb08(int param_1);
;

extern void FUN_a003eb64(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a003ed00(int param_1);
;

extern MATRIX *FUN_a003ee9c(_Instance *param_1, u_char param_2);
;

extern void FUN_a003f19c(int param_1, int param_2);
;

extern SoundEffectChannel *FUN_a003f1c8(undefined *param_1);
;

extern void FUN_a003f214(int param_1);
;

extern SoundEffectChannel *FUN_a003f240(int param_1);
;

extern void FUN_a003f26c(char *param_1, byte *param_2, short *param_3, int param_4, int param_5, int param_6, u_int *param_7);
;

extern void FUN_a003f3e8(char *param_1, byte *param_2);
;

extern u_char FUN_a003f554(u_int param_1, int param_2, int param_3);
;

extern void FUN_a003f648(byte *param_1, int param_2);
;

extern void FUN_a003f6d4(short *param_1, int param_2, int param_3, int param_4, byte *param_5, int param_6);
;

extern void FUN_a003fb60(short *param_1, byte *param_2, int param_3);
;

extern void FUN_a003fefc(int param_1);
;

extern void FUN_a003ff1c(byte *param_1);
;

extern u_char FUN_a003ff78(char *param_1, int param_2);
;

extern void FUN_a0040074(byte *param_1, int param_2, int param_3);
;

extern void FUN_a0040134(byte *param_1, int param_2, int param_3);
;

extern void FUN_a0040238(short *param_1, int param_2, u_int *param_3, byte *param_4, byte *param_5);
;

extern u_char FUN_a0040580(short *param_1, u_char param_2, u_char param_3, int param_4, int param_5);
;

extern u_char FUN_a00407a8(short *param_1, u_char param_2, u_char param_3, int param_4, int param_5);
;

extern void FUN_a00409d8(u_char param_1, u_char param_2, u_int param_3, u_char param_4);
;

extern void FUN_a0040a88(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0040aac(int param_1, undefined param_2);
;

extern void FUN_a0040acc(int param_1);
;

extern void FUN_a0040b00(u_int param_1);
;

extern void FUN_a0040b34(int param_1);
;

extern void FUN_a0040b54(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0040b84(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0040bb4(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0040bf4(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0040c24(void);
;

extern void FUN_a0040c88(void);
;

extern void FUN_a0040cc0(void);
;

extern void FUN_a0040ce0(void);
;

extern void FUN_a0040ce8(int param_1);
;

extern void FUN_a0040d08(int param_1);
;

extern void FUN_a0040d28(u_int param_1);
;

extern u_int FUN_a0040d48(u_int param_1);
;

extern void FUN_a0040d80(u_char param_1);
;

extern u_int FUN_a0040da0(u_int param_1, u_int param_2, u_int param_3, short param_4);
;

extern u_char FUN_a0040ddc(int param_1, u_int param_2, u_int param_3, short param_4);
;

extern void FUN_a0041024(u_char param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern void FUN_a00413b4(u_char param_1);
;

extern void FUN_a0041444(void);
;

extern void FUN_a004149c(u_char param_1);
;

extern void FUN_a004155c(u_char param_1);
;

extern void FUN_a00415e8(undefined2 *param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a0041758(int *param_1, short *param_2, u_int param_3);
;

extern u_int FUN_a004181c(u_short **param_1, u_int *param_2);
;

extern int FUN_a00418b0(short **param_1, short *param_2, u_int param_3);
;

extern u_char FUN_a00419e0(int param_1, short *param_2);
;

extern int FUN_a0041a48(int *param_1);
;

extern int FUN_a0041ad4(int *param_1, undefined2 *param_2);
;

extern int FUN_a0041afc(int *param_1, undefined2 *param_2);
;

extern undefined *FUN_a0041b24(int *param_1, short *param_2);
;

extern undefined *FUN_a0041b84(int *param_1, u_short *param_2);
;

extern undefined2 *FUN_a0041be4(int *param_1, short *param_2, short *param_3);
;

extern u_char FUN_a0041fac(int *param_1, short *param_2, undefined2 *param_3);
;

extern u_char FUN_a00421bc(int *param_1, short *param_2, u_int param_3);
;

extern u_char FUN_a00422f0(int *param_1, short *param_2);
;

extern u_char FUN_a004240c(int *param_1, u_short *param_2);
;

extern u_char FUN_a0042538(int *param_1, short *param_2, int param_3, u_char param_4);
;

extern u_char FUN_a004271c(int *param_1, u_short *param_2, int param_3);
;

extern undefined *FUN_a0042890(int *param_1, short *param_2, int param_3, u_char param_4);
;

extern undefined *FUN_a00428f0(int *param_1, u_short *param_2, int param_3);
;

extern void FUN_a0042950(int *param_1);
;

extern void FUN_a0042a30(int **param_1, int param_2);
;

extern int *FUN_a0042aa0(int param_1);
;

extern int **FUN_a0042af0(int param_1);
;

extern undefined2 *FUN_a0042b60(u_char param_1, undefined param_2);
;

extern void FUN_a0042bfc(int param_1, int param_2, int param_3);
;

extern void FUN_a0042cb0(int param_1, u_char param_2);
;

extern int **FUN_a004314c(int param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5, int param_6, undefined *param_7, u_char param_8, int *param_9, short param_10);
;

extern void FUN_a0043248(void);
;

extern void FUN_a0043298(int param_1);
;

extern u_int FUN_a00432e8(int param_1);
;

extern void FUN_a0043400(int param_1, u_char param_2, short *param_3, u_char param_4, int param_5, int param_6, undefined *param_7, int *param_8, u_short param_9);
;

extern void FUN_a0043e84(int param_1, u_char param_2, short *param_3, u_char param_4, int param_5, int param_6, undefined *param_7, int *param_8, u_short param_9);
;

extern void FUN_a0044a74(int param_1, u_char param_2, short *param_3, u_char param_4, u_short *param_5, int param_6, undefined *param_7, int *param_8, u_short param_9);
;

extern void FUN_a0044bc8(int param_1, u_char param_2, short *param_3, u_char param_4, int param_5, undefined *param_6, int *param_7, short param_8);
;

extern void FUN_a0044cdc(int param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5, u_char param_6, u_char param_7);
;

extern void FUN_a0044d14(int param_1, short *param_2, int param_3);
;

extern void FUN_a0044e68(short *param_1);
;

extern void FUN_a0045018(int param_1, u_int param_2, int param_3, int param_4);
;

extern void FUN_a00450b4(u_int param_1, int param_2, int param_3);
;

extern void FUN_a0045184(int param_1);
;

extern void FUN_a0045380(u_char param_1, u_char param_2, u_char *param_3);
;

extern void FUN_a00453cc(int param_1, u_int *param_2, int param_3, u_char *param_4);
;

extern void FUN_a0046ac8(int param_1, int *param_2);
;

extern int FUN_a0046b00(int param_1, int param_2, int param_3);
;

extern void FUN_a0046b3c(undefined2 *param_1, undefined2 *param_2, undefined2 *param_3, short param_4);
;

extern void FUN_a0046cec(int param_1, u_int param_2, int param_3);
;

extern u_int *FUN_a0046d98(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, int param_5, undefined2 *param_6, u_int param_7, u_int param_8, u_int param_9, u_int param_10);
;

extern void FUN_a0046e9c(void);
;

extern void FUN_a0046f7c(void);
;

extern void FUN_a0047010(u_char param_1, int param_2, u_char param_3, int param_4);
;

extern void FUN_a00471d4(int **param_1, int param_2);
;

extern void FUN_a0047388(void);
;

extern void FUN_a00476e0(int param_1);
;

extern int FUN_a0047914(int param_1, u_short param_2, u_short param_3, u_int param_4, undefined2 param_5, short param_6, short param_7, u_char param_8, u_char param_9);
;

extern void FUN_a0047be4(int **param_1, int param_2);
;

extern void FUN_a0047f68(int param_1, undefined2 *param_2, u_short param_3, u_short param_4);
;

extern void FUN_a0047ff8(int param_1, int param_2);
;

extern void FUN_a0048068(int param_1, int param_2);
;

extern u_int FUN_a00486f4(int param_1, int param_2);
;

extern void FUN_a0048ccc(int param_1, undefined2 *param_2, undefined2 param_3, undefined2 param_4, u_int param_5, undefined2 *param_6, undefined2 *param_7, u_char param_8, short param_9);
;

extern int **FUN_a0048dbc(undefined2 *param_1, undefined2 *param_2, undefined2 *param_3, int param_4, int *param_5, short param_6, int param_7, int param_8);
;

extern void FUN_a0048f28(void);
;

extern void FUN_a0049060(void);
;

extern void FUN_a004908c(void);
;

extern u_char *FUN_a00492c0(u_char param_1, short param_2, undefined2 param_3);
;

extern u_char FUN_a004935c(int param_1, short param_2, int param_3);
;

extern u_char *FUN_a0049440(int param_1, short param_2);
;

extern int FUN_a0049568(void);
;

extern void FUN_a00495a8(u_char *param_1, undefined2 *param_2);
;

extern void FUN_a00496c0(void);
;

extern void FUN_a0049870(void);
;

extern void FUN_a00499c8(void);
;

extern void FUN_a0049c0c(void);
;

extern void FUN_a0049e9c(u_char param_1, u_char param_2, undefined param_3);
;

extern void FUN_a004a8dc(int param_1, undefined2 *param_2, void *param_3, int param_4, int param_5, undefined2 *param_6, undefined2 *param_7, u_int param_8, short param_9, short param_10);
;

extern void FUN_a004a9e4(u_char param_1);
;

extern void FUN_a004aad8(u_char param_1, u_char param_2, int param_3);
;

extern void FUN_a004ac18(u_char param_1);
;

extern void FUN_a004ac24(int param_1);
;

extern void FUN_a004b014(void);
;

extern void FUN_a004b01c(int param_1, u_char param_2, u_char param_3, u_char *param_4);
;

extern void FUN_a004b26c(int param_1, int *param_2, u_short *param_3);
;

extern void FUN_a004b3a0(int param_1);
;

extern void FUN_a004b3a8(int param_1);
;

extern void FUN_a004b454(short *param_1, short *param_2, short *param_3);
;

extern void FUN_a004b4c8(int param_1, int param_2, u_char *param_3, int param_4, undefined param_5);
;

extern void FUN_a004b648(int param_1);
;

extern void FUN_a004b98c(u_char *param_1);
;

extern void FUN_a004b99c(u_char *param_1);
;

extern undefined2 *FUN_a004ba38(int param_1, undefined2 param_2, u_char *param_3, int param_4, int param_5, undefined2 param_6, undefined2 param_7);
;

extern void FUN_a004bb98(int param_1, short param_2, short param_3);
;

extern void FUN_a004bbb4(int param_1, int param_2, int param_3, u_char *param_4, int param_5, int param_6, undefined2 param_7);
;

extern void FUN_a004bc0c(int param_1, undefined2 param_2, undefined param_3, u_char *param_4, int param_5, int param_6, undefined2 param_7);
;

extern void FUN_a004bc54(int param_1, undefined2 param_2, u_char *param_3, int param_4, int param_5, undefined2 param_6, undefined2 param_7, short param_8);
;

extern void FUN_a004bc9c(int param_1, int param_2);
;

extern void FUN_a004bd30(u_char *param_1, int param_2);
;

extern void FUN_a004bdb8(int param_1, u_char *param_2, u_char param_3);
;

extern void FUN_a004c03c(u_char *param_1, u_int *param_2, int param_3, u_char param_4);
;

extern u_char *FUN_a004c3d0(u_char param_1, u_int param_2, u_char *param_3, undefined2 param_4, int param_5, int param_6, int param_7, u_char param_8, u_char param_9, u_char param_10, u_char param_11, u_char param_12, u_char param_13, u_char param_14, u_char param_15, u_char param_16, int param_17, undefined2 param_18, undefined2 param_19);
;

extern void FUN_a004c59c(u_char *param_1, int param_2);
;

extern void FUN_a004c7a8(int param_1);
;

extern u_char FUN_a004c958(void);
;

extern void FUN_a004cc64(int param_1, int param_2, u_char param_3, u_char param_4, int param_5);
;

extern void FUN_a004cd20(int param_1, int param_2, u_int param_3, u_int param_4, int param_5);
;

extern u_char *FUN_a004cec8(u_char param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7, undefined2 param_8, undefined2 param_9, u_char param_10, u_char param_11);
;

extern void FUN_a004cfd0(int param_1, int param_2, undefined2 param_3, u_int param_4, int param_5, undefined2 param_6, u_int param_7, undefined2 param_8);
;

extern u_char *FUN_a004d080(int param_1, int param_2, int param_3, int param_4);
;

extern u_char FUN_a004d1e0(int param_1, int param_2, int param_3, int param_4);
;

extern u_char *FUN_a004d3ac(u_char param_1, int param_2);
;

extern u_int FUN_a004d48c(u_int param_1);
;

extern void FUN_a004d4e0(int param_1);
;

extern void FUN_a004d514(int param_1);
;

extern void FUN_a004d540(u_char param_1, undefined2 param_2, undefined2 param_3, int param_4);
;

extern void FUN_a004d5e4(_Instance *param_1, undefined *param_2, int param_3);
;

extern void FUN_a004d940(int param_1);
;

extern void FUN_a004d994(u_char param_1, u_int param_2);
;

extern void FUN_a004da68(u_char param_1, u_char param_2, u_int param_3, u_int param_4, int *param_5, int *param_6, int param_7);
;

extern void FUN_a004db34(int param_1);
;

extern void FUN_a004de38(int param_1, int param_2);
;

extern void FUN_a004e264(int param_1, u_char param_2, u_char param_3);
;

extern void FUN_a004e3b0(void);
;

extern void FUN_a004e3f0(int param_1, char *param_2, short *param_3, short *param_4, u_int *param_5, int param_6);
;

extern void FUN_a004e668(u_char param_1, u_int param_2);
;

extern int FUN_a004e778(u_char *param_1);
;

extern void FUN_a004e7d0(u_char *param_1, char *param_2, u_char *param_3, u_char param_4, u_char param_5, u_char param_6, undefined2 param_7, undefined2 param_8, undefined2 param_9, u_int param_10, int param_11);
;

extern void FUN_a004ea7c(char *param_1, char *param_2, char param_3, short param_4);
;

extern void FUN_a004eac0(u_char *param_1, char *param_2, u_char *param_3, u_char param_4, u_char param_5, u_char param_6, undefined2 param_7, undefined2 param_8, undefined2 param_9, u_char param_10, int param_11);
;

extern void FUN_a004ee54(u_char param_1, int param_2);
;

extern void FUN_a004f148(int param_1, int param_2, u_int *param_3, u_int *param_4, short *param_5, short *param_6, u_int param_7, u_int param_8);
;

extern void FUN_a004f2e4(u_char *param_1, u_char param_2, u_char *param_3, u_int param_4, u_int *param_5, u_int *param_6, u_char param_7, u_char param_8, int param_9);
;

extern void FUN_a004f7d4(u_char *param_1, int param_2, int param_3, int param_4, int param_5, int param_6, u_int param_7);
;

extern void FUN_a004fc50(int param_1, short *param_2, short *param_3);
;

extern void FUN_a004fd2c(int param_1);
;

extern void FUN_a004fd4c(int param_1, int *param_2);
;

extern void FUN_a004fd78(int *param_1);
;

extern int *FUN_a004fde4(int param_1);
;

extern void FUN_a004fe1c(int param_1, int param_2);
;

extern void FUN_a004fe84(int param_1);
;

extern void FUN_a004fea4(int param_1, int param_2);
;

extern void FUN_a005027c(u_char param_1, int param_2, u_short param_3);
;

extern void FUN_a00502f0(void);
;

extern int FUN_a0050358(u_int param_1);
;

extern u_int FUN_a00503c0(u_int param_1);
;

extern u_char FUN_a005042c(int param_1);
;

extern undefined2 *FUN_a0050464(int param_1, byte param_2);
;

extern void FUN_a005063c(int param_1, undefined2 *param_2);
;

extern void FUN_a0050684(int param_1, int param_2);
;

extern void FUN_a0050708(int param_1);
;

extern void FUN_a00507bc(char param_1);
;

extern int FUN_a0050854(int param_1);
;

extern int FUN_a0050860(void);
;

extern void FUN_a0050870(void);
;

extern void FUN_a00508a0(void);
;

extern void FUN_a005093c(int param_1);
;

extern void FUN_a0050948(int param_1);
;

extern u_int FUN_a0050954(int param_1);
;

extern undefined2 *FUN_a0050988(u_int *param_1, byte param_2, int *param_3);
;

extern void FUN_a0050b00(int param_1, int param_2, u_char param_3, int param_4);
;

extern void FUN_a0050b24(MemHeader *param_1);
;

extern void FUN_a0050bd8(void);
;

extern void FUN_a0050df0(int param_1, int param_2, _MultiSignal *param_3);
;

extern void FUN_a00516e8(int **param_1, int param_2, int *param_3, int *param_4);
;

extern void FUN_a0051788(int param_1, int param_2, Object *param_3);
;

extern void FUN_a0051cf8(int param_1, u_char param_2, int param_3);
;

extern undefined *FUN_a0051d1c(int param_1);
;

extern undefined *FUN_a0051d40(byte *param_1, undefined *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0051fec(u_char param_1, undefined2 param_2);
;

extern void FUN_a0052068(void);
;

extern void FUN_a005209c(short param_1);
;

extern void FUN_a00520cc(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_a00520e4(u_int param_1);
;

extern void FUN_a00520f4(u_char param_1);
;

extern void FUN_a0052158(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_a0052170(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_a005223c(void);
;

extern u_int FUN_a0052768(int param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern undefined *FUN_a0052790(char *param_1, char *param_2, int param_3, u_char param_4, u_char param_5);
;

extern undefined *FUN_a0052be4(int param_1);
;

extern undefined *FUN_a0052c60(u_int *param_1, int param_2);
;

extern u_char FUN_a0052d80(char *param_1, u_char param_2, u_char param_3);
;

extern undefined *FUN_a0052e34(u_char param_1);
;

extern void FUN_a0052ea4(void);
;

extern void FUN_a0052ec0(int param_1, int param_2);
;

extern void FUN_a005306c(int param_1, int param_2);
;

extern u_char FUN_a00530d4(void);
;

extern void FUN_a00530e8(void);
;

extern void FUN_a0053100(u_char param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern void FUN_a005346c(int param_1);
;

extern void FUN_a00534f0(int param_1);
;

extern u_int FUN_a0053670(u_short param_1, u_int param_2);
;

extern int FUN_a00538b0(int param_1);
;

extern void FUN_a00538dc(int param_1);
;

extern void FUN_a00539ec(int param_1);
;

extern void FUN_a0053ab4(void);
;

extern void FUN_a0053b90(int param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_a0053e98(u_int *param_1, u_int param_2, u_int param_3, int param_4);
;

extern u_int FUN_a0054160(void);
;

extern void FUN_a0054214(u_char param_1, u_char param_2, u_int param_3, u_char param_4);
;

extern u_char FUN_a0054568(int param_1);
;

extern void FUN_a00545a4(int param_1);
;

extern u_char FUN_a00546b0(void);
;

extern void FUN_a00546f0(u_char param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0054774(u_char param_1, u_char param_2, u_int param_3);
;

extern u_char FUN_a00547ac(void);
;

extern int FUN_a00547b4(void);
;

extern undefined *FUN_a00547e8(void);
;

extern u_char FUN_a00547f0(int param_1);
;

extern u_char FUN_a0054808(int param_1);
;

extern undefined *FUN_a0054838(int param_1, int param_2, int param_3);
;

extern u_char *FUN_a0054914(int param_1, int param_2, u_char *param_3);
;

extern void FUN_a0054964(int param_1, u_int *param_2);
;

extern void FUN_a0054a1c(int param_1);
;

extern void FUN_a0054a98(int param_1);
;

extern void FUN_a0054b04(void);
;

extern void FUN_a0054b94(int param_1);
;

extern void FUN_a0054be4(int param_1);
;

extern void FUN_a0054c24(int param_1);
;

extern void FUN_a0054c74(int param_1);
;

extern u_int FUN_a0054ce4(int param_1);
;

extern void FUN_a0054d04(int param_1);
;

extern void FUN_a0054da4(int param_1, u_int param_2);
;

extern void FUN_a0054e80(int param_1, u_short param_2);
;

extern u_char FUN_a0054eb8(u_char param_1, u_char param_2);
;

extern void FUN_a0054ed0(int param_1, undefined param_2);
;

extern void FUN_a0054ee4(int param_1);
;

extern void FUN_a0054f24(void);
;

extern void FUN_a0054fbc(void);
;

extern void FUN_a0054fd8(void);
;

extern u_char FUN_a0055064(u_char *param_1, int param_2);
;

extern void FUN_a005525c(int param_1, int param_2);
;

extern void FUN_a0055678(int param_1, u_int param_2);
;

extern void FUN_a00559d8(int param_1);
;

extern void FUN_a0055d0c(int param_1, u_int param_2);
;

extern void FUN_a0056074(int param_1, int param_2);
;

extern void FUN_a0056b34(int param_1, int param_2, u_char param_3);
;

extern void FUN_a0056ba0(int param_1, int param_2, int param_3);
;

extern u_int FUN_a0057114(u_int param_1, undefined param_2, undefined param_3, undefined2 param_4);
;

extern u_char FUN_a0057178(u_char param_1);
;

extern void FUN_a00571b4(void);
;

extern u_char FUN_a00571e4(int param_1);
;

extern u_char FUN_a0057254(int param_1);
;

extern u_char FUN_a005730c(short param_1);
;

extern u_char FUN_a0057380(u_int param_1);
;

extern u_char FUN_a0057438(u_char param_1, u_int param_2, u_int param_3, short param_4);
;

extern u_int FUN_a005747c(u_int param_1);
;

extern void FUN_a00574c4(undefined param_1, undefined param_2, undefined param_3, u_char param_4, undefined2 param_5);
;

extern void FUN_a00575b8(byte *param_1);
;

extern int FUN_a00581a8(int param_1);
;

extern void FUN_a005829c(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_a0058344(int param_1, u_int param_2, int param_3, int param_4, short param_5, int param_6, int param_7, int param_8, int param_9, u_int *param_10, short param_11);
;

extern void FUN_a0058764(int param_1, u_int param_2, int param_3, int param_4, short param_5, int param_6, int param_7, int param_8, int param_9, u_int *param_10, int param_11);
;

extern void FUN_a0058bd8(char *param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a0058c98(char *param_1);
;

extern void FUN_a0058cd0(void);
;

extern int FUN_a0058cf4(byte *param_1);
;

extern int FUN_a0058d60(int param_1);
;

extern void FUN_a0058ee4(int param_1);
;

extern u_char FUN_a0058fac(byte *param_1, byte **param_2);
;

extern void FUN_a0059014(byte *param_1);
;

extern void FUN_a0059038(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a005912c(byte *param_1);
;

extern int FUN_a0059150(byte *param_1, int param_2, u_char param_3, u_char param_4);
;

extern int FUN_a005930c(byte *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a005935c(int param_1, int param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_a005944c(int param_1);
;

extern void FUN_a00594bc(char *param_1);
;

extern u_char FUN_a00595a4(byte *param_1);
;

extern void FUN_a0059668(int param_1);
;

extern void FUN_a0059918(int param_1);
;

extern Level *FUN_a0059970(int param_1);
;

extern STracker *FUN_a00599cc(int param_1);
;

extern void FUN_a0059a20(int *param_1);
;

extern u_int FUN_a0059b50(void);
;

extern u_char FUN_a0059b64(int param_1, int param_2);
;

extern void FUN_a0059be4(int param_1);
;

extern void FUN_a0059c38(int param_1, short param_2, short param_3);
;

extern void FUN_a0059cc8(STracker *param_1);
;

extern void FUN_a005a110(STracker *param_1);
;

extern void FUN_a005a3a4(_MultiSignal *param_1, _MultiSignal *param_2, int param_3);
;

extern STracker *FUN_a005a674(Level *param_1);
;

extern void FUN_a005a724(Object *param_1, Object *param_2, int param_3);
;

extern void FUN_a005a9c8(int param_1, u_char param_2);
;

extern void FUN_a005aa0c(int param_1, u_char param_2, int param_3);
;

extern void FUN_a005aac0(void);
;

extern u_char *FUN_a005ab40(int param_1, byte *param_2, int param_3);
;

extern void FUN_a005ad60(int param_1);
;

extern void FUN_a005ae44(int *param_1, int param_2, int *param_3);
;

extern void FUN_a005aef0(int param_1);
;

extern void FUN_a005af40(int *param_1, int param_2);
;

extern void FUN_a005b130(int param_1);
;

extern void FUN_a005b1a8(int param_1, int param_2);
;

extern void FUN_a005b228(int param_1, int param_2);
;

extern void FUN_a005b2f0(STracker *param_1, int param_2);
;

extern int FUN_a005b38c(byte *param_1);
;

extern void FUN_a005b3f0(_StreamUnit *param_1);
;

extern void FUN_a005b440(int param_1);
;

extern void FUN_a005b470(void);
;

extern void FUN_a005b4a0(void);
;

extern void FUN_a005b4d8(void);
;

extern u_char FUN_a005b510(void);
;

extern u_int FUN_a005b51c(void);
;

extern u_int FUN_a005b528(void);
;

extern u_int FUN_a005b53c(void);
;

extern void FUN_a005b57c(int param_1);
;

extern u_char FUN_a005b644(int param_1);
;

extern void FUN_a005b69c(int param_1);
;

extern void FUN_a005b6d0(void);
;

extern u_char FUN_a005b714(void);
;

extern void FUN_a005b834(int param_1);
;

extern u_char FUN_a005b8a4(void);
;

extern void FUN_a005b984(int param_1, STracker *param_2, short *param_3);
;

extern void FUN_a005bb4c(int *param_1, short *param_2);
;

extern void FUN_a005bcb0(short *param_1, int param_2, short *param_3);
;

extern void FUN_a005bd44(int param_1, int param_2, short *param_3);
;

extern void FUN_a005be7c(int *param_1, short *param_2);
;

extern void FUN_a005bec0(int param_1, short *param_2);
;

extern void FUN_a005bfb0(int param_1, int param_2, short *param_3);
;

extern void FUN_a005c008(int param_1, int param_2, short *param_3);
;

extern void FUN_a005c09c(int param_1, int param_2, short *param_3);
;

extern void FUN_a005c0f4(int param_1, int param_2, short *param_3);
;

extern void FUN_a005c198(short *param_1, short *param_2);
;

extern void FUN_a005c24c(short *param_1, int param_2, short *param_3);
;

extern void FUN_a005c2a0(int param_1, int param_2, short *param_3);
;

extern void FUN_a005c2ec(int **param_1, short *param_2);
;

extern void FUN_a005c39c(u_char param_1, int param_2, short *param_3);
;

extern void FUN_a005c3e4(u_char param_1, int param_2, short *param_3, int param_4);
;

extern void FUN_a005c500(u_char param_1, int param_2, short *param_3);
;

extern void FUN_a005c558(int param_1, short *param_2);
;

extern void FUN_a005c5c8(int param_1, int param_2, short *param_3);
;

extern void FUN_a005c6f8(char *param_1);
;

extern void FUN_a005c7f8(int param_1, int param_2);
;

extern void FUN_a005c910(int param_1);
;

extern void FUN_a005c968(int param_1);
;

extern void FUN_a005c9d0(int param_1);
;

extern void FUN_a005ca20(void);
;

extern void FUN_a005cb94(int *param_1);
;

extern void FUN_a005d084(int *param_1);
;

extern void FUN_a005d538(int *param_1, int param_2);
;

extern void FUN_a005d904(int *param_1, int param_2);
;

extern void FUN_a005dcd8(u_short *param_1, int *param_2);
;

extern void FUN_a005dfc0(u_int *param_1, u_int *param_2, int param_3, u_int *param_4);
;

extern void FUN_a005e014(u_short *param_1, int *param_2);
;

extern void FUN_a005e1ac(void);
;

extern void FUN_a005e2fc(int param_1);
;

extern void FUN_a005e3d8(int param_1, int param_2);
;

extern void FUN_a005e4ac(void);
;

extern void FUN_a005e504(void);
;

extern void FUN_a005e694(void);
;

extern int FUN_a005e6a4(int *param_1, short *param_2);
;

extern int FUN_a005e830(int param_1, int param_2, u_char param_3, int *param_4);
;

extern void FUN_a005e8c0(int *param_1, int *param_2, int *param_3, int param_4, int param_5);
;

extern u_int FUN_a005e948(short *param_1, u_char param_2, int *param_3);
;

extern u_int FUN_a005ebf0(int param_1, short *param_2);
;

extern u_int FUN_a005f1bc(int param_1, int param_2, int param_3);
;

extern void FUN_a005f4e0(short *param_1, u_char param_2, int param_3, int param_4, u_int param_5);
;

extern void FUN_a005f5cc(int param_1, u_char param_2, int *param_3, int param_4, short *param_5);
;

extern int FUN_a005f678(int param_1, int param_2);
;

extern void FUN_a005f6d8(int param_1, int param_2);
;

extern void FUN_a005f748(int param_1, int param_2);
;

extern void FUN_a005f7a0(void);
;

extern int FUN_a005f800(int param_1);
;

extern void FUN_a005f878(u_char param_1, int param_2, int *param_3, u_char param_4);
;

extern void FUN_a005fbc4(int param_1, int param_2, int param_3, u_short *param_4);
;

extern void FUN_a005ffa0(void);
;

extern u_int FUN_a0060058(byte *param_1);
;

extern void FUN_a0060198(void);
;

extern void FUN_a00601a8(char *param_1, u_char param_2, u_char param_3, undefined *param_4);
;

extern void FUN_a0060204(void);
;

extern void FUN_a0060244(u_char *param_1, u_char *param_2);
;

extern u_char *FUN_a00602a0(void);
;

extern u_char *FUN_a00602e0(void);
;

extern u_char FUN_a0060370(u_char *param_1);
;

extern u_char FUN_a0060390(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char *FUN_a0060730(char *param_1, u_char param_2, u_char param_3, u_char param_4, u_char *param_5, int param_6);
;

extern void FUN_a0060830(char *param_1, byte param_2, u_char param_3, u_char param_4, u_char param_5, u_char *param_6, undefined param_7);
;

extern void FUN_a00608b8(char *param_1, u_char param_2, undefined param_3);
;

extern void FUN_a0060920(char *param_1, u_char param_2, u_char param_3, u_char param_4, u_char *param_5, byte param_6);
;

extern void FUN_a00609a4(char *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_a00609e0(void);
;

extern void FUN_a0060a20(u_char param_1);
;

extern u_char FUN_a0060a68(char *param_1, u_int param_2);
;

extern void FUN_a0060ab4(byte *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0060b14(char *param_1, undefined *param_2);
;

extern void FUN_a0060c74(_MultiSignal *param_1, int param_2, int param_3);
;

extern void FUN_a0060ce8(void);
;

extern void FUN_a0060d54(_MultiSignal *param_1);
;

extern void FUN_a0060db4(void);
;

extern void FUN_a0060e2c(void);
;

extern void FUN_a0060e94(short param_1);
;

extern int FUN_a0060ec4(void);
;

extern void FUN_a0060ee4(void);
;

extern void FUN_a0061004(void);
;

extern EventTimer *FUN_a00611c8(void);
;

extern void FUN_a0061238(u_int *param_1);
;

extern void FUN_a0061268(void);
;

extern void FUN_a0061298(void);
;

extern void FUN_a00612ec(void);
;

extern WaterLevelProcess *FUN_a006132c(void);
;

extern void FUN_a0061368(void);
;

extern void FUN_a00614a0(void);
;

extern void FUN_a00614c8(int *param_1);
;

extern void FUN_a00616f8(int param_1, int param_2);
;

extern void FUN_a0061858(int param_1, int param_2);
;

extern void FUN_a0061a30(int *param_1, u_char param_2);
;

extern u_char FUN_a0061ad0(long param_1, Event *param_2, ScriptPCode *param_3);
;

extern u_int FUN_a0061c48(u_char param_1, int param_2);
;

extern u_char FUN_a0061d38(u_char *param_1, int param_2, int param_3, u_int param_4);
;

extern u_int *FUN_a0061de8(int param_1, int param_2);
;

extern void FUN_a0061e80(int param_1);
;

extern int FUN_a0061eac(int param_1, int param_2);
;

extern void FUN_a0061f0c(int *param_1);
;

extern void FUN_a0061f58(int *param_1);
;

extern void FUN_a0061fb0(int *param_1, int param_2);
;

extern void FUN_a00621e4(int *param_1, int param_2);
;

extern void FUN_a006222c(int *param_1, int param_2);
;

extern void FUN_a0062274(int *param_1, int param_2, undefined2 param_3);
;

extern void FUN_a00622c4(u_char *param_1, u_char param_2, undefined2 param_3);
;

extern void FUN_a00622dc(u_char *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, u_char param_5);
;

extern void FUN_a006230c(int *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, u_char param_5);
;

extern void FUN_a0062384(u_char *param_1, undefined2 *param_2);
;

extern u_char FUN_a00623dc(int *param_1, int param_2);
;

extern void FUN_a0062470(int *param_1);
;

extern u_char FUN_a0062508(u_char param_1, int param_2, u_char param_3, int param_4);
;

extern u_char FUN_a0062598(u_char param_1, u_char *param_2, int param_3);
;

extern u_char FUN_a0062604(u_char param_1, StackType *param_2, u_char param_3, int param_4);
;

extern u_char FUN_a0062c68(u_char param_1, int param_2, int param_3, int param_4);
;

extern int FUN_a0062d48(int *param_1);
;

extern u_char FUN_a0062de4(_PCodeStack *param_1, StackType *param_2, u_char param_3, int param_4);
;

extern u_char FUN_a0063288(int *param_1, int param_2, int param_3, int param_4);
;

extern u_char FUN_a0063364(int *param_1, int param_2, int param_3, int param_4);
;

extern u_char FUN_a00633f4(int *param_1, u_char *param_2, int param_3, int param_4);
;

extern u_int FUN_a00634b0(u_char param_1, int param_2, u_char param_3);
;

extern u_int FUN_a00634e4(u_char param_1, int param_2, u_char param_3);
;

extern u_char FUN_a0063518(int *param_1, u_char *param_2, int param_3, int param_4);
;

extern u_char FUN_a0063644(u_char param_1, int param_2, int param_3, int param_4);
;

extern u_char FUN_a0063748(u_char param_1, StackType *param_2, u_char param_3);
;

extern u_int FUN_a0063864(u_char *param_1, int *param_2, u_char *param_3);
;

extern u_char FUN_a00638bc(u_short **param_1, u_char *param_2);
;

extern u_int FUN_a0063a7c(u_short **param_1);
;

extern u_char FUN_a0063b44(int *param_1, u_char *param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_a0063e20(int **param_1, u_char *param_2);
;

extern u_char FUN_a0063e9c(u_char param_1, u_char *param_2, int param_3);
;

extern u_char FUN_a0063ef4(u_char param_1, int param_2, int param_3);
;

extern u_char FUN_a0063f2c(u_char param_1, StackType *param_2, u_char param_3, int param_4);
;

extern void FUN_a0064028(_PCodeStack *param_1, long param_2, short *param_3);
;

extern u_char FUN_a0064058(int *param_1, u_char *param_2);
;

extern void FUN_a0064160(int *param_1);
;

extern void FUN_a00641e8(int *param_1);
;

extern u_char FUN_a0064270(InstanceSpline *param_1, u_char *param_2);
;

extern u_char FUN_a006463c(_Instance **param_1, int *param_2);
;

extern u_char FUN_a0064910(_Instance **param_1, int *param_2, ScriptPCode *param_3);
;

extern u_int FUN_a00653b4(int *param_1);
;

extern u_char FUN_a0065540(BSPTree **param_1, u_char *param_2);
;

extern u_char FUN_a0065844(Camera **param_1, int *param_2);
;

extern u_char FUN_a0065bc4(int param_1, u_char *param_2);
;

extern u_char FUN_a0065cf8(int param_1, u_char *param_2);
;

extern u_char FUN_a0065e2c(void);
;

extern u_char FUN_a0065e34(int *param_1, u_char *param_2);
;

extern u_char FUN_a0065ee0(Intro **param_1, u_char *param_2);
;

extern void FUN_a00660b8(_PCodeStack *param_1, short *param_2);
;

extern u_int FUN_a00661a4(short *param_1, short *param_2);
;

extern u_int FUN_a0066360(u_short *param_1, u_short *param_2, u_int param_3);
;

extern u_char FUN_a0066558(_PCodeStack *param_1, int *param_2, StackType *param_3, int param_4);
;

extern u_char FUN_a0066758(_PCodeStack *param_1, int *param_2, StackType *param_3, int param_4);
;

extern u_int FUN_a0066900(_PCodeStack *param_1, StackType *param_2, StackType *param_3, int param_4);
;

extern void FUN_a0066c38(_PCodeStack *param_1, int param_2);
;

extern u_short *FUN_a0066e20(_PCodeStack *param_1, u_short *param_2, u_char *param_3);
;

extern u_int FUN_a006709c(int *param_1);
;

extern void FUN_a0067130(int *param_1, StackType *param_2, _PCodeStack *param_3, short *param_4);
;

extern u_long FUN_a0067228(_Instance **param_1);
;

extern void FUN_a00673a0(int *param_1);
;

extern u_int FUN_a00673e4(InstanceSpline *param_1);
;

extern u_int FUN_a00674e0(int *param_1);
;

extern u_long FUN_a0067590(_Instance **param_1);
;

extern long FUN_a0067608(_PCodeStack *param_1, long param_2, short *param_3);
;

extern void FUN_a006765c(int *param_1, int param_2);
;

extern void FUN_a0067838(int param_1, int param_2);
;

extern void FUN_a00679b4(int param_1, int param_2);
;

extern undefined *FUN_a0067af0(undefined2 param_1, undefined param_2);
;

extern void FUN_a0067b5c(int param_1);
;

extern void FUN_a0067c48(int *param_1, int param_2);
;

extern void FUN_a0067cec(int param_1);
;

extern int FUN_a0067ddc(int param_1, byte *param_2);
;

extern void FUN_a0067e7c(int param_1);
;

extern void FUN_a0068160(int *param_1);
;

extern void FUN_a006844c(int *param_1);
;

extern void FUN_a0068618(short *param_1, short *param_2, int param_3);
;

extern void FUN_a0068824(void);
;

extern void FUN_a006882c(u_char *param_1, StackType *param_2, _PCodeStack *param_3, short *param_4);
;

extern u_int FUN_a00689f4(u_char *param_1, u_char *param_2, undefined2 *param_3);
;

extern long FUN_a0068b64(StackType *param_1, _PCodeStack *param_2, long param_3, short *param_4);
;

extern void FUN_a0068d0c(int param_1);
;

extern int FUN_a0068e2c(int param_1);
;

extern int FUN_a0068eb4(int param_1);
;

extern u_int FUN_a0068efc(int param_1);
;

extern u_char FUN_a0068f28(int param_1, u_short param_2);
;

extern u_char FUN_a0068fa4(int param_1, short param_2);
;

extern u_int FUN_a0068fe8(int param_1);
;

extern u_char FUN_a0069040(void);
;

extern void FUN_a00690e0(_Instance *param_1, undefined2 *param_2);
;

extern u_int FUN_a006972c(int param_1, short param_2, short param_3, undefined2 param_4, u_int param_5);
;

extern void FUN_a0069888(int param_1);
;

extern u_char FUN_a0069920(int param_1);
;

extern u_char FUN_a0069afc(int param_1, int param_2, u_char param_3, u_int param_4);
;

extern void FUN_a0069e4c(int param_1);
;

extern void FUN_a006a368(int param_1);
;

extern void FUN_a006a388(int param_1, int param_2, int param_3, undefined2 param_4, u_int *param_5);
;

extern u_int FUN_a006a4f8(int param_1, short param_2, short param_3, u_int param_4);
;

extern u_char FUN_a006a63c(int param_1, int param_2, int param_3);
;

extern u_char FUN_a006a7d4(int param_1, undefined2 param_2, u_int param_3, int param_4);
;

extern _Instance *FUN_a006a8d4(_Instance *param_1, short param_2, short param_3, u_int param_4, u_char param_5, int param_6);
;

extern int FUN_a006a984(_Instance *param_1, u_char param_2, int param_3, u_int param_4);
;

extern _Instance *FUN_a006a9dc(_Instance *param_1, u_char param_2, int param_3, u_int param_4);
;

extern void FUN_a006ab70(byte *param_1, int param_2, short param_3);
;

extern void FUN_a006acd8(int param_1, int param_2);
;

extern void FUN_a006acfc(int param_1, byte *param_2);
;

extern void FUN_a006ad6c(int param_1);
;

extern void FUN_a006adf8(int param_1, byte *param_2);
;

extern void FUN_a006ae34(int param_1);
;

extern void FUN_a006ae54(int param_1);
;

extern void FUN_a006ae78(int param_1, int param_2);
;

extern void FUN_a006aed8(int param_1);
;

extern void FUN_a006b748(int param_1, int param_2);
;

extern void FUN_a006c7d4(_Instance *param_1, undefined *param_2, int *param_3);
;

extern void FUN_a006d00c(int param_1);
;

extern int FUN_a006da0c(int param_1);
;

extern u_char FUN_a006dab0(int param_1);
;

extern int FUN_a006dae8(int param_1);
;

extern void FUN_a006db1c(int param_1, u_int param_2);
;

extern void FUN_a006dbc0(int param_1, u_int param_2);
;

extern u_char FUN_a006dc48(int param_1);
;

extern void FUN_a006def4(int param_1);
;

extern void FUN_a006e004(int param_1, u_int param_2);
;

extern void FUN_a006e0ac(int param_1, u_int param_2);
;

extern void FUN_a006e138(int param_1, u_int param_2);
;

extern u_int FUN_a006e1f8(int param_1, int param_2, int param_3);
;

extern void FUN_a006e218(int param_1, short param_2, short param_3, short param_4, short param_5, short param_6, short param_7);
;

extern u_char FUN_a006e2d8(int param_1, int param_2, u_char *param_3);
;

extern u_char FUN_a006e358(int param_1, int param_2);
;

extern u_char FUN_a006e628(int param_1, int param_2);
;

extern void FUN_a006ea24(int param_1, short param_2, short param_3, short param_4);
;

extern u_char FUN_a006ea98(int param_1, short param_2, short param_3);
;

extern void FUN_a006eb14(int param_1, u_int *param_2, u_int param_3, undefined2 param_4, int param_5);
;

extern u_char FUN_a006eb8c(int param_1, int param_2, int param_3);
;

extern u_int FUN_a006ecc0(int param_1);
;

extern void FUN_a006f20c(int param_1);
;

extern void FUN_a006f580(int param_1);
;

extern void FUN_a006f5d8(short *param_1);
;

extern void FUN_a006f674(u_char param_1, short *param_2, short *param_3);
;

extern u_int FUN_a006f94c(int param_1, short param_2);
;

extern void FUN_a006fee0(int param_1, u_int param_2);
;

extern int FUN_a0070174(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_a0070244(int param_1, int param_2, int param_3, u_char *param_4);
;

extern void FUN_a00702d4(int param_1, int param_2, int param_3, u_char *param_4);
;

extern void FUN_a0070364(int param_1, int param_2, int param_3, u_char *param_4);
;

extern void FUN_a00703f8(u_char param_1, int param_2, int param_3, u_char *param_4);
;

extern void FUN_a007044c(short *param_1, short *param_2);
;

extern void FUN_a00704b0(u_int *param_1);
;

extern void FUN_a0070538(u_char *param_1);
;

extern int *FUN_a0070544(int *param_1);
;

extern void FUN_a0070580(u_char *param_1);
;

extern int *FUN_a007058c(int *param_1);
;

extern void FUN_a00705b4(int *param_1, int *param_2);
;

extern void FUN_a00705e0(int *param_1, int param_2, int param_3);
;

extern char *FUN_a007065c(int param_1);
;

extern void FUN_a00706a4(u_char *param_1);
;

extern void FUN_a0070700(u_char param_1, u_char param_2, u_char param_3, undefined2 param_4, undefined2 param_5);
;

extern void FUN_a007076c(u_char param_1, undefined2 *param_2, undefined2 param_3);
;

extern void FUN_a00707d4(u_char param_1, undefined2 *param_2, undefined2 param_3);
;

extern void FUN_a007083c(u_char param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4);
;

extern void FUN_a0070898(u_char param_1, undefined2 *param_2, undefined2 *param_3, undefined2 param_4);
;

extern void FUN_a0070930(undefined2 param_1, undefined2 param_2, undefined2 param_3, u_char param_4, undefined2 param_5);
;

extern void FUN_a007099c(undefined2 param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_a00709e8(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6);
;

extern void FUN_a0070a64(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, u_char param_7, u_char param_8, u_char param_9);
;

extern void FUN_a0070b10(undefined2 param_1, u_char param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5);
;

extern void FUN_a0070b7c(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, u_char param_5);
;

extern void FUN_a0070be8(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7);
;

extern void FUN_a0070c74(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4);
;

extern void FUN_a0070cd0(u_char param_1, u_char param_2, u_int param_3, u_int param_4);
;

extern void FUN_a0070d70(undefined2 *param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_a0070de0(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0070e3c(u_char param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5);
;

extern short *FUN_a0070ea8(int param_1, int param_2, short param_3, short param_4);
;

extern void FUN_a0070fa4(u_char *param_1, u_char *param_2, undefined2 param_3, u_short param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7, undefined2 param_8);
;

extern void FUN_a0071110(u_char param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6, undefined2 param_7);
;

extern void FUN_a007119c(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_a00711e8(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_a0071234(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5);
;

extern void FUN_a00712a0(u_char param_1, undefined2 param_2, undefined2 param_3);
;

extern void FUN_a00712ec(u_char param_1, u_char param_2);
;

extern void FUN_a0071328(u_char param_1, u_char param_2);
;

extern void FUN_a0071364(u_char param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5, u_char param_6);
;

extern void FUN_a00713e0(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_a0071430(u_char param_1);
;

extern void FUN_a007145c(void);
;

extern void FUN_a0071648(int param_1);
;

extern void FUN_a00716b0(int *param_1);
;

extern void FUN_a00716d4(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a00717cc(int param_1, int param_2, int param_3);
;

extern void FUN_a00718c0(int param_1, u_int param_2, int param_3);
;

extern void FUN_a0071930(int *param_1, int param_2, int param_3);
;

extern void FUN_a0071974(int *param_1, u_int param_2, int param_3);
;

extern void FUN_a00719ec(int *param_1, u_int param_2, u_int param_3);
;

extern void FUN_a0071bb8(int param_1, int param_2, int param_3, u_char param_4, u_char param_5, int param_6);
;

extern void FUN_a0071ca4(int *param_1, int param_2, u_char param_3, u_char param_4, int param_5);
;

extern void FUN_a0071d98(int *param_1, int param_2, u_char param_3, u_char param_4, int param_5, int param_6);
;

extern void FUN_a0071df0(int param_1, u_int param_2, int param_3);
;

extern void FUN_a0071e98(int *param_1, u_int param_2, int param_3);
;

extern void FUN_a0071ed0(int param_1, u_int param_2, int param_3);
;

extern void FUN_a0071f50(int *param_1, u_int param_2, int param_3);
;

extern void FUN_a0071f74(int param_1, u_int param_2, u_char param_3);
;

extern u_int FUN_a0071f90(int param_1, u_int param_2);
;

extern void FUN_a0071fb0(int *param_1, u_int param_2);
;

extern void FUN_a0071fd4(int param_1, u_int param_2);
;

extern void FUN_a0072008(int param_1, u_int param_2);
;

extern u_int FUN_a007203c(int param_1, u_int param_2, int param_3);
;

extern void FUN_a00720e4(int *param_1, u_int param_2);
;

extern u_char FUN_a0072108(int param_1, u_int param_2);
;

extern void FUN_a0072150(int *param_1, u_int param_2);
;

extern void FUN_a0072174(int param_1, u_int param_2, char param_3, char param_4);
;

extern void FUN_a00721a0(int *param_1, u_int param_2, char param_3, char param_4);
;

extern void FUN_a00721d0(int param_1, short param_2);
;

extern void FUN_a0072254(u_char *param_1, short param_2);
;

extern void FUN_a0072284(int param_1, u_int param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00722a8(int param_1, u_int param_2, u_int param_3, short *param_4, int param_5, u_char param_6);
;

extern void FUN_a0072330(int param_1, int param_2, undefined *param_3, int param_4);
;

extern void FUN_a0072398(int param_1, undefined *param_2, int param_3);
;

extern void FUN_a0072410(int param_1, int param_2, undefined *param_3, int param_4);
;

extern void FUN_a00724dc(int param_1, undefined *param_2, int param_3);
;

extern void FUN_a0072554(int *param_1);
;

extern void FUN_a00726d4(void);
;

extern void FUN_a00726dc(void);
;

extern void FUN_a0072724(void);
;

extern void FUN_a0072788(void);
;

extern void FUN_a00727b8(void);
;

extern u_char FUN_a00727e4(u_char *param_1);
;

extern void FUN_a00729cc(void);
;

extern u_char FUN_a0072a00(int **param_1);
;

extern void FUN_a0072a90(u_char *param_1);
;

extern void FUN_a0072af8(int *param_1);
;

extern void FUN_a0072b2c(u_char *param_1);
;

extern _BlockVramEntry *FUN_a0072b90(void);
;

extern int FUN_a0072bc8(short param_1, short param_2, short param_3, short param_4);
;

extern u_char FUN_a0072cf8(u_int param_1, short param_2, short param_3, short param_4, u_char param_5);
;

extern int *FUN_a0072e98(undefined2 *param_1, undefined2 *param_2, int param_3, int param_4, undefined param_5, short param_6);
;

extern void FUN_a00732d4(int **param_1);
;

extern void FUN_a0073308(u_int param_1, u_int param_2, u_int param_3, int param_4, int param_5);
;

extern int **FUN_a00734f4(int **param_1, int **param_2);
;

extern void FUN_a0073550(int param_1);
;

extern void FUN_a0073b18(u_char param_1, int param_2);
;

extern u_char FUN_a0073b38(short *param_1, int param_2);
;

extern void FUN_a0073c30(void);
;

extern void FUN_a0073c38(void);
;

extern void FUN_a0073c40(void);
;

extern int FUN_a0073c48(byte *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a0073c98(int param_1, byte *param_2, char *param_3, u_char param_4);
;

extern int FUN_a0073cc8(int param_1, byte *param_2, char **param_3);
;

extern char *FUN_a0073f44(u_int param_1, char *param_2, u_int param_3);
;

extern int FUN_a0074014(byte *param_1);
;

extern int FUN_a0074084(int param_1);
;

extern int FUN_a00740a0(byte *param_1, byte *param_2);
;

extern void FUN_a0074100(int param_1);
;

extern void FUN_a0074148(int param_1);
;

extern void FUN_a0074194(int param_1, undefined2 *param_2);
;

extern void FUN_a00741b8(int param_1, undefined2 *param_2);
;

extern u_char FUN_a007422c(int param_1, int *param_2, u_short param_3);
;

extern void FUN_a0074688(int param_1, int param_2, int param_3);
;

extern u_int FUN_a0074710(int param_1, u_short *param_2, u_short param_3);
;

extern void FUN_a0074e90(int param_1, int param_2);
;

extern u_char FUN_a0074f08(int param_1, u_char param_2, u_short *param_3, u_int param_4);
;

extern void FUN_a007559c(int param_1, int param_2, int param_3);
;

extern void FUN_a0075840(int param_1, short *param_2);
;

extern void FUN_a0075cec(int param_1, short *param_2);
;

extern u_char FUN_a0075de8(int param_1, u_char param_2, int param_3, u_int param_4);
;

extern u_int FUN_a0076188(int param_1, short *param_2, u_int param_3);
;

extern u_int FUN_a0076378(int param_1, int param_2);
;

extern void FUN_a0076570(u_char param_1, u_int *param_2, int param_3, int param_4);
;

extern void FUN_a0076648(int param_1, int param_2);
;

extern u_char FUN_a0076678(int param_1, short *param_2);
;

extern u_char FUN_a007690c(int param_1, short *param_2);
;

extern u_char FUN_a0076b30(int param_1, u_char param_2, short *param_3, u_int param_4);
;

extern void FUN_a0076fa4(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a007707c(int param_1, short *param_2, int param_3);
;

extern void FUN_a0077218(u_char param_1, short param_2);
;

extern void FUN_a0077288(int param_1, u_char param_2, short param_3);
;

extern void FUN_a00772f8(int param_1, u_char param_2, int param_3, int param_4);
;

extern int FUN_a00773e8(int param_1, int param_2);
;

extern void FUN_a007745c(int param_1, int param_2, int param_3, int param_4);
;

extern u_int FUN_a007753c(int param_1, u_char param_2, u_char param_3, int param_4);
;

extern u_int FUN_a0077584(int param_1, u_char param_2, u_char param_3, int param_4);
;

extern u_int FUN_a00775c8(int param_1, u_char param_2, u_char param_3, int param_4);
;

extern u_int FUN_a0077634(short *param_1);
;

extern u_int FUN_a0077698(short *param_1);
;

extern void FUN_a00777c0(undefined2 param_1, undefined2 param_2, undefined2 param_3, undefined2 *param_4);
;

extern void FUN_a00777d0(void);
;

extern void FUN_a00777f4(int param_1, int param_2, u_char *param_3, undefined2 *param_4);
;

extern void FUN_a0077924(u_int *param_1, u_int *param_2, u_int *param_3, u_int *param_4);
;

extern u_char FUN_a0077a34(short *param_1, u_int *param_2, u_int *param_3, u_char *param_4, int param_5);
;

extern void FUN_a0077b0c(short *param_1, int *param_2, int param_3, u_char *param_4);
;

extern void FUN_a0077b98(void);
;

extern void FUN_a0078090(void);
;

extern void FUN_a0078104(int param_1);
;

extern u_int FUN_a00781c8(u_char *param_1, int param_2);
;

extern void FUN_a00782a0(u_short *param_1, u_int *param_2);
;

extern void FUN_a0078434(u_short *param_1, u_int *param_2);
;

extern undefined8 FUN_a00785a0(u_int param_1, int param_2);
;

extern undefined8 FUN_a00786d4(u_int param_1, u_int *param_2);
;

extern undefined8 FUN_a0078808(u_int param_1, u_int *param_2);
;

extern int *FUN_a0078998(int *param_1, u_char *param_2);
;

extern int FUN_a0078a80(u_int param_1);
;

extern int FUN_a0078ab0(u_int param_1);
;

extern int FUN_a0078ae0(int param_1);
;

extern void FUN_a0078b40(void);
;

extern u_char *FUN_a0078b48(u_char *param_1, u_char *param_2, u_int param_3);
;

extern void FUN_a0078c00(int **param_1, u_char *param_2, int *param_3);
;

extern int FUN_a00791d0(undefined2 *param_1, short *param_2);
;

extern void FUN_a00793dc(short *param_1, short *param_2);
;

extern void FUN_a00794cc(int param_1, short *param_2);
;

extern void FUN_a0079b60(int param_1, int param_2);
;

extern void FUN_a0079bec(int param_1, int param_2);
;

extern void FUN_a0079d20(int param_1, int param_2);
;

extern u_char FUN_a007a088(int param_1);
;

extern void FUN_a007a0ac(u_char param_1);
;

extern void FUN_a007a350(int param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_a007a42c(int param_1, undefined *param_2);
;

extern int FUN_a007a4cc(int param_1);
;

extern u_int FUN_a007a4e0(int param_1);
;

extern u_int FUN_a007a51c(int param_1);
;

extern u_int FUN_a007a558(void);
;

extern u_int FUN_a007a580(int param_1, int param_2);
;

extern void FUN_a007a590(int param_1);
;

extern void FUN_a007a628(u_char *param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a007a6b8(int param_1);
;

extern int FUN_a007aa1c(int param_1);
;

extern void FUN_a007aa38(int param_1);
;

extern void FUN_a007ab64(int param_1);
;

extern void FUN_a007b228(u_char param_1, u_char param_2);
;

extern void FUN_a007b2d0(_Instance *param_1, u_char param_2);
;

extern void FUN_a007b4a4(int param_1, int param_2);
;

extern void FUN_a007b74c(void);
;

extern void FUN_a007b760(_Instance *param_1);
;

extern void FUN_a007b948(void);
;

extern void FUN_a007b964(void);
;

extern void FUN_a007b980(int param_1);
;

extern void FUN_a007ba10(u_short *param_1, short param_2, u_short *param_3, short param_4);
;

extern void FUN_a007ba58(void);
;

extern void FUN_a007ba8c(int param_1);
;

extern void FUN_a007bac0(void);
;

extern void FUN_a007bd08(void);
;

extern void FUN_a007c1ac(int param_1, u_int *param_2);
;

extern void FUN_a007c290(int param_1, int param_2, u_int *param_3);
;

extern _Instance *FUN_a007c3e8(_Instance *param_1, int param_2, undefined2 param_3, u_int param_4);
;

extern void FUN_a007c4bc(int param_1);
;

extern void FUN_a007c620(int param_1);
;

extern void FUN_a007cea4(void);
;

extern void FUN_a007cf6c(int param_1);
;

extern u_char FUN_a007cfac(int param_1);
;

extern int FUN_a007d840(int param_1, int param_2);
;

extern int FUN_a007d8bc(_Instance *param_1, int param_2, u_char param_3, u_int param_4);
;

extern int FUN_a007d990(_Instance *param_1, u_short *param_2, u_char param_3, u_int param_4);
;

extern void FUN_a007da50(_Instance *param_1, u_short *param_2, u_char param_3);
;

extern void FUN_a007ddac(int param_1, int param_2, int param_3);
;

extern MATRIX *FUN_a007e3b8(_Instance *param_1, u_long param_2);
;

extern void FUN_a007e834(int param_1, int param_2);
;

extern void FUN_a007e99c(int param_1, int param_2, int param_3);
;

extern void FUN_a007ea98(u_int *param_1);
;

extern void FUN_a007ef6c(int param_1, short *param_2, short *param_3);
;

extern void FUN_a007efe8(int param_1);
;

extern void FUN_a007f018(int param_1);
;

extern u_int FUN_a007f048(int param_1);
;

extern void FUN_a007f05c(u_char *param_1);
;

extern void FUN_a007f0a8(void);
;

extern void FUN_a007f1d0(int param_1);
;

extern void FUN_a007f270(int param_1);
;

extern void FUN_a007f2dc(int param_1);
;

extern void FUN_a007f3d4(int param_1);
;

extern void FUN_a007f48c(int param_1, u_int param_2);
;

extern void FUN_a007f594(int param_1);
;

extern void FUN_a007f63c(int param_1);
;

extern void FUN_a007f6f0(int param_1);
;

extern void FUN_a007f71c(int param_1);
;

extern void FUN_a007f748(int param_1, int param_2);
;

extern void FUN_a007f844(int param_1, int param_2);
;

extern void FUN_a007f8ac(int param_1);
;

extern int FUN_a007f8d4(int param_1, int param_2, int param_3);
;

extern void FUN_a007f908(int param_1, int param_2);
;

extern void FUN_a007fac0(int param_1, int param_2, int param_3);
;

extern u_int FUN_a007fae8(int param_1, int param_2);
;

extern void FUN_a007fb0c(int param_1, int param_2);
;

extern void FUN_a007fb5c(int param_1, int param_2, int param_3);
;

extern void FUN_a007fb84(int param_1, int param_2, int param_3);
;

extern void FUN_a007fbdc(int param_1, int param_2);
;

extern void FUN_a007fc10(int param_1, int param_2);
;

extern void FUN_a007fc44(int param_1, int param_2);
;

extern void FUN_a007fd28(int param_1);
;

extern void FUN_a007fea0(int param_1, int param_2);
;

extern u_int FUN_a007fedc(int param_1, int param_2, char *param_3);
;

extern u_char FUN_a007ffb4(int param_1, int param_2, short *param_3);
;

extern short *FUN_a00801b0(int param_1, int param_2);
;

extern u_char FUN_a0080310(int param_1);
;

extern u_char FUN_a00803bc(int param_1, int param_2);
;

extern u_char FUN_a0080460(int param_1);
;

extern u_int FUN_a00804bc(int param_1, int param_2);
;

extern void FUN_a00807b4(void);
;

extern void FUN_a0080958(int param_1);
;

extern void FUN_a0080998(void);
;

extern void FUN_a0080a44(int param_1);
;

extern int FUN_a0080c60(int param_1, short *param_2);
;

extern void FUN_a0080e48(int param_1);
;

extern void FUN_a0080e98(int param_1, short *param_2);
;

extern void FUN_a0080f08(int param_1, short *param_2);
;

extern void FUN_a0080f4c(int param_1);
;

extern void FUN_a0081058(int param_1);
;

extern void FUN_a008107c(_Instance *param_1, int param_2);
;

extern void FUN_a0081104(int param_1);
;

extern void FUN_a0081500(int param_1, int param_2, int param_3);
;

extern u_int FUN_a0081584(int param_1, int param_2, int param_3);
;

extern u_char FUN_a0081644(int param_1, u_char param_2, undefined2 *param_3);
;

extern u_char FUN_a008171c(int param_1);
;

extern void FUN_a0081770(_Instance *param_1, int param_2, u_char param_3, u_int param_4);
;

extern void FUN_a00818c8(int param_1);
;

extern void FUN_a0081de0(int param_1);
;

extern void FUN_a0081fe0(int param_1);
;

extern u_char FUN_a0082024(_Instance *param_1, int param_2, int param_3);
;

extern void FUN_a00822ec(int param_1);
;

extern void FUN_a008235c(int param_1);
;

extern void FUN_a0082404(int param_1);
;

extern void FUN_a0082490(int param_1, short param_2, short param_3);
;

extern void FUN_a0082604(int param_1, short *param_2);
;

extern void FUN_a00826e0(int param_1);
;

extern u_char FUN_a00827d4(int param_1, int param_2, int param_3);
;

extern void FUN_a008287c(int param_1, u_int *param_2);
;

extern void FUN_a00829b8(_Instance *param_1, u_int *param_2);
;

extern void FUN_a0082b78(int param_1);
;

extern u_int FUN_a0082c74(int param_1);
;

extern u_char FUN_a0082de0(int param_1, int param_2);
;

extern u_char FUN_a0082ed0(int param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0082fbc(int param_1, short *param_2);
;

extern u_char FUN_a0083018(int param_1, short param_2);
;

extern u_int FUN_a0083064(int param_1, u_char param_2, u_int param_3);
;

extern void FUN_a00830bc(int param_1, int param_2, short *param_3);
;

extern u_int *FUN_a008312c(int param_1);
;

extern Intro *FUN_a00831b8(int param_1, short *param_2);
;

extern int FUN_a00832e8(int param_1, int param_2);
;

extern void FUN_a00833e4(int param_1);
;

extern u_char FUN_a00834c8(int param_1, short *param_2, short *param_3);
;

extern u_char FUN_a0083890(int param_1);
;

extern void FUN_a0083a04(int param_1);
;

extern void FUN_a0083a60(int param_1);
;

extern void FUN_a0083abc(int param_1);
;

extern void FUN_a0083cf8(int param_1, int param_2, int param_3);
;

extern void FUN_a0083d60(int param_1);
;

extern void FUN_a0083e18(int param_1, u_char param_2);
;

extern void FUN_a0083ec4(int param_1);
;

extern void FUN_a0083f7c(int param_1);
;

extern void FUN_a0083ff4(int param_1, int param_2, int param_3);
;

extern void FUN_a00840f8(u_char param_1, int param_2);
;

extern void FUN_a0084384(int param_1, undefined2 *param_2, undefined2 param_3, undefined2 param_4);
;

extern u_char FUN_a00843c0(_Instance *param_1);
;

extern void FUN_a0084448(int param_1, int *param_2);
;

extern void FUN_a008474c(_Instance *param_1, __Event *param_2);
;

extern void FUN_a0084890(int param_1, int *param_2);
;

extern void FUN_a00855e8(int param_1);
;

extern void FUN_a0085634(_Instance *param_1);
;

extern void FUN_a0085680(int param_1);
;

extern int FUN_a00856cc(int param_1, int param_2);
;

extern u_char FUN_a0085704(int param_1, int param_2);
;

extern u_char FUN_a00858a0(int param_1, int *param_2);
;

extern u_int FUN_a0085930(int param_1, int param_2);
;

extern u_int FUN_a0085958(int param_1);
;

extern u_char *FUN_a0085980(int param_1, int param_2);
;

extern void FUN_a0085b18(int param_1, int *param_2, int param_3);
;

extern void FUN_a0085f44(int param_1, int *param_2);
;

extern void FUN_a0086138(int param_1);
;

extern u_char *FUN_a008624c(int param_1);
;

extern void FUN_a0086274(int param_1, u_char *param_2, int param_3);
;

extern u_char *FUN_a00862a0(int param_1, int param_2);
;

extern void FUN_a00863c0(int param_1);
;

extern void FUN_a00865c8(int param_1);
;

extern void FUN_a0086700(int param_1);
;

extern void FUN_a0086764(int param_1);
;

extern int FUN_a00869a4(int param_1, short param_2, int param_3);
;

extern void FUN_a0086ae8(int param_1);
;

extern void FUN_a0086be8(int param_1);
;

extern void FUN_a0086dcc(int param_1);
;

extern void FUN_a0086fb4(int param_1);
;

extern void FUN_a0087050(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a0087294(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_a0087378(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_a0088b14(int param_1);
;

extern void FUN_a0088cc4(int param_1);
;

extern void FUN_a00892f8(int param_1);
;

extern void FUN_a008936c(int param_1);
;

extern void FUN_a008954c(int param_1);
;

extern void FUN_a0089578(_Instance *param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0089844(int param_1);
;

extern void FUN_a008989c(_Instance *param_1);
;

extern void FUN_a00899e0(int param_1);
;

extern void FUN_a0089a98(_Instance *param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0089cb8(int param_1);
;

extern void FUN_a0089d0c(int param_1, u_char param_2, u_int param_3);
;

extern void FUN_a0089e3c(int param_1);
;

extern void FUN_a0089ecc(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_a008a508(void);
;

extern void FUN_a008a528(_Instance *param_1);
;

extern void FUN_a008a6a4(int param_1);
;

extern void FUN_a008a738(int param_1);
;

extern void FUN_a008a768(int param_1, u_char param_2, int param_3, int param_4, int param_5);
;

extern void FUN_a008adbc(int param_1);
;

extern void FUN_a008ae1c(_Instance *param_1);
;

extern void FUN_a008b15c(int param_1);
;

extern void FUN_a008b1bc(int param_1);
;

extern int FUN_a008b450(int param_1, int param_2);
;

extern void FUN_a008b468(int param_1, u_char param_2, undefined *param_3, u_char param_4);
;

extern void FUN_a008b73c(int param_1, int *param_2);
;

extern int FUN_a008b7a4(int param_1, u_int param_2, u_char param_3);
;

extern void FUN_a008b92c(int param_1, int param_2, int param_3);
;

extern int FUN_a008bba4(int param_1, u_int param_2, int *param_3);
;

extern void FUN_a008bd24(int param_1, int param_2);
;

extern void FUN_a008bdd0(int param_1, int param_2);
;

extern void FUN_a008c250(int param_1);
;

extern void FUN_a008c460(int param_1);
;

extern void FUN_a008c530(int param_1);
;

extern _MonsterState *FUN_a008c580(int param_1, int param_2);
;

extern int FUN_a008c5f0(int param_1);
;

extern int FUN_a008c624(int param_1);
;

extern int FUN_a008c658(int param_1);
;

extern void FUN_a008c68c(int param_1);
;

extern void FUN_a008c6c0(int param_1);
;

extern u_char FUN_a008c6f4(int param_1);
;

extern u_int FUN_a008c7dc(int param_1);
;

extern u_char FUN_a008c850(int param_1);
;

extern void FUN_a008c968(int param_1, short *param_2);
;

extern void FUN_a008d504(int param_1);
;

extern void FUN_a008d5a0(int param_1, int param_2);
;

extern void FUN_a008d600(int param_1);
;

extern void FUN_a008d6bc(int param_1, int param_2, int param_3);
;

extern int FUN_a008d980(int param_1, int param_2, int param_3);
;

extern void FUN_a008e568(int param_1, int param_2, int param_3);
;

extern u_int FUN_a008e674(int param_1);
;

extern void FUN_a008e940(int param_1);
;

extern u_char FUN_a008ec8c(int param_1, int param_2);
;

extern void FUN_a008f308(int param_1, u_int param_2);
;

extern void FUN_a008f330(int param_1, u_int param_2);
;

extern int FUN_a008f35c(int param_1);
;

extern u_char FUN_a008f380(int param_1);
;

extern void FUN_a008f3a4(int param_1, int param_2, int param_3);
;

extern void FUN_a008f3d4(byte *param_1);
;

extern u_char FUN_a008f478(int param_1, u_int param_2);
;

extern void FUN_a008f4e0(char *param_1, u_char param_2);
;

extern void FUN_a008f550(byte *param_1, u_char param_2, u_char param_3);
;

extern void FUN_a008f58c(byte *param_1);
;

extern void FUN_a008f5ec(byte *param_1);
;

extern void FUN_a008f64c(byte *param_1);
;

extern void FUN_a008f6ac(byte *param_1, u_char param_2);
;

extern void FUN_a008f6e0(byte *param_1);
;

extern void FUN_a008f740(byte *param_1);
;

extern int FUN_a008f7c0(int param_1);
;

extern int FUN_a008f7e8(int param_1);
;

extern void FUN_a008f820(int param_1, u_int param_2);
;

extern int FUN_a008f834(int param_1);
;

extern int FUN_a008f890(int param_1);
;

extern void FUN_a008f8b0(void);
;

extern u_char FUN_a008f8f0(int param_1);
;

extern u_char FUN_a008f920(byte *param_1);
;

extern void FUN_a008f97c(int param_1, u_char param_2);
;

extern void FUN_a008f998(int param_1, undefined *param_2);
;

extern void FUN_a008f9c8(byte *param_1);
;

extern void FUN_a008fa08(int param_1);
;

extern void FUN_a008fa38(byte *param_1);
;

extern void FUN_a008fa4c(byte *param_1);
;

extern void FUN_a008fa60(byte *param_1);
;

extern void FUN_a008fa74(byte *param_1);
;

extern void FUN_a008fa88(int param_1);
;

extern void FUN_a008faa8(int *param_1, short *param_2);
;

extern void FUN_a008fbd4(int param_1, short *param_2);
;

extern void FUN_a008fc68(int *param_1, undefined2 *param_2);
;

extern void FUN_a008fca0(int param_1, u_short *param_2);
;

extern void FUN_a008fccc(int param_1, undefined param_2, undefined param_3);
;

extern void FUN_a008fd04(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_a008fdcc(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_a008fea8(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_a008fee8(byte *param_1, u_int param_2, u_int param_3, short param_4);
;

extern u_int FUN_a0090008(int param_1, u_int param_2, u_int param_3);
;

extern u_int FUN_a0090054(int param_1, u_int param_2, u_int param_3);
;

extern u_int FUN_a00900a8(byte *param_1, u_int param_2, u_int param_3, u_int *param_4);
;

extern void FUN_a0090208(int param_1, u_int param_2, u_int param_3, u_char param_4);
;

extern void FUN_a0090230(int param_1, u_int param_2, u_int param_3, u_short param_4);
;

extern void FUN_a0090268(int param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void FUN_a00902b0(byte *param_1, u_int param_2, u_int param_3, short *param_4, short param_5);
;

extern void FUN_a0090414(int param_1, u_int param_2, u_int param_3, u_char *param_4, undefined2 param_5);
;

extern void FUN_a0090490(byte *param_1);
;

extern void FUN_a00904f0(int param_1);
;

extern void FUN_a00906d0(_G2Matrix_Type *param_1, u_int *param_2, _G2AnimController_Type *param_3, int param_4, u_int param_5);
;

extern u_char FUN_a00909e0(_G2AnimController_Type *param_1, int param_2, _G2Matrix_Type *param_3, u_int *param_4);
;

extern void FUN_a0090d88(int param_1);
;

extern void FUN_a0090f14(undefined2 *param_1, undefined2 *param_2, int param_3);
;

extern void FUN_a0090f78(int param_1);
;

extern u_char FUN_a00911f0(int param_1, u_int *param_2);
;

extern void FUN_a0091344(int param_1, u_int *param_2);
;

extern void FUN_a009141c(int param_1, u_char *param_2);
;

extern void FUN_a00914a4(int param_1, u_int param_2, u_int param_3);
;

extern void FUN_a0091500(undefined param_1, undefined param_2);
;

extern u_short *FUN_a009156c(u_short *param_1);
;

extern void FUN_a00915d4(u_short *param_1, u_short *param_2);
;

extern void FUN_a0091704(int param_1, byte *param_2, u_char *param_3);
;

extern void FUN_a0091840(int param_1, int param_2, undefined2 *param_3);
;

extern u_short *FUN_a00918c4(u_int param_1, u_int param_2, u_short *param_3);
;

extern u_short *FUN_a0091934(u_int param_1, u_int param_2, u_short **param_3);
;

extern u_short *FUN_a00919d4(u_int param_1, u_int param_2, u_short *param_3);
;

extern void FUN_a0091aa4(int param_1);
;

extern void FUN_a0091d88(byte *param_1);
;

extern void FUN_a0091f7c(int param_1);
;

extern void FUN_a009210c(int param_1, int param_2);
;

extern u_char FUN_a009229c(int param_1);
;

extern void FUN_a009233c(int *param_1);
;

extern u_char FUN_a0092380(void);
;

extern void FUN_a00923f8(void);
;

extern void FUN_a0092460(undefined *param_1, int param_2);
;

extern byte *FUN_a00924f4(byte *param_1, byte param_2, byte param_3);
;

extern void FUN_a0092590(byte *param_1);
;

extern void FUN_a009264c(byte *param_1);
;

extern void FUN_a00926cc(byte *param_1);
;

extern void FUN_a0092798(byte *param_1);
;

extern byte *FUN_a0092914(byte *param_1, int param_2);
;

extern u_int FUN_a0092980(byte *param_1, int param_2, u_int param_3);
;

extern void FUN_a0092ac0(byte *param_1, int param_2, undefined2 *param_3, u_int param_4);
;

extern void FUN_a0092b70(int param_1, int param_2, u_int param_3, u_char *param_4);
;

extern void FUN_a0092e4c(int param_1);
;

extern void FUN_a0093004(int param_1);
;

extern u_char FUN_a0093670(byte *param_1);
;

extern void FUN_a00938b0(int param_1);
;

extern void FUN_a0093a04(u_int *param_1, u_char *param_2, int param_3, int param_4);
;

extern void FUN_a0093c30(u_int *param_1, u_int *param_2);
;

extern u_int FUN_a0093cc8(int *param_1);
;

extern void FUN_a0093d50(int param_1, u_char *param_2, int param_3);
;

extern void FUN_a0093da4(int param_1, int param_2);
;

extern void FUN_a0094058(byte *param_1, int param_2, u_char param_3, int param_4, int param_5);
;

extern void FUN_a00944e4(byte *param_1, int param_2);
;

extern int FUN_a00945b4(int param_1);
;

extern void FUN_a00945d4(int param_1, short param_2, short param_3);
;

extern void FUN_a0094700(int *param_1);
;

extern int FUN_a0094744(u_short *param_1, int param_2);
;

extern void FUN_a00947a8(int param_1);
;

extern void FUN_a009496c(int param_1);
;

extern void FUN_a00949c8(int param_1);
;

extern u_char FUN_a0094a24(int param_1, int param_2);
;

extern void FUN_a0094a44(int param_1);
;

extern void FUN_a0094e78(int param_1);
;

extern void FUN_a0094ecc(int param_1);
;

extern void FUN_a0094f88(int param_1);
;

extern void FUN_a0095214(int param_1);
;

extern void FUN_a0095374(int param_1);
;

extern void FUN_a0095430(int param_1, u_int *param_2, int param_3, int param_4);
;

extern u_char FUN_a00957cc(void);
;

extern void FUN_a00957d4(void);
;

extern void FUN_a00957dc(undefined2 *param_1, int param_2, int param_3);
;

extern void FUN_a0095848(int param_1);
;

extern int FUN_a0095884(u_short *param_1);
;

extern void FUN_a00958e0(u_short *param_1, int param_2);
;

extern void FUN_a0095918(short *param_1, u_char param_2, u_int param_3);
;

extern void FUN_a009595c(u_char param_1, int param_2, u_int param_3);
;

extern int FUN_a0095cc0(void);
;

extern void FUN_a0095d00(void);
;

extern void FUN_a0095d38(int param_1, u_short *param_2, u_short *param_3, undefined2 *param_4);
;

extern void FUN_a0095fe8(int param_1);
;

extern int FUN_a0096008(void);
;

extern int FUN_a0096048(void);
;

extern void FUN_a00960a4(int param_1);
;

extern u_int FUN_a009610c(u_short *param_1, u_short *param_2, u_short *param_3);
;

extern u_char FUN_a0096278(short *param_1, short *param_2, short *param_3);
;

extern void FUN_a0096328(int param_1);
;

extern void FUN_a0096354(u_short *param_1, u_short *param_2);
;

extern u_char FUN_a00964b0(u_int param_1, u_int param_2, int param_3, short *param_4, u_int param_5);
;

extern u_int FUN_a009698c(int param_1, int param_2);
;

extern int FUN_a0096adc(int param_1);
;

extern int FUN_a0096b14(short *param_1, short *param_2, char param_3);
;

extern void FUN_a0096bb4(u_char *param_1, short *param_2);
;

extern void FUN_a0096dfc(int param_1, short *param_2);
;

extern void FUN_a0096f24(void);
;

extern void FUN_a0097130(int param_1);
;

extern void FUN_a0097164(u_char *param_1, short *param_2, u_short param_3, int param_4);
;

extern void FUN_a009723c(int param_1);
;

extern void FUN_a009728c(u_char *param_1, int param_2);
;

extern void FUN_a0097348(u_char *param_1, int param_2);
;

extern int FUN_a0097430(int param_1);
;

extern void FUN_a00974ec(u_int param_1, int param_2, int param_3, u_int param_4);
;

extern u_char FUN_a00975a0(int param_1, int param_2, int param_3, u_int param_4);
;

extern void FUN_a0097628(u_int param_1, int param_2);
;

extern u_char FUN_a0097748(short *param_1, u_char param_2);
;

extern void FUN_a0097828(u_int param_1);
;

extern void FUN_a00978c4(int param_1);
;

extern void FUN_a009795c(short *param_1, int param_2, u_int param_3);
;

extern void FUN_a00979c0(int param_1);
;

extern u_int FUN_a0097a48(int param_1, int param_2);
;

extern u_char FUN_a0097a90(int param_1, int param_2);
;

extern void FUN_a0097afc(int param_1, u_char param_2);
;

extern u_int FUN_a0097e28(void);
;

extern void FUN_a0097e3c(int param_1);
;

extern u_char FUN_a0097f60(int param_1);
;

extern u_char FUN_a0097fc8(int param_1, undefined2 *param_2, u_int param_3, int param_4);
;

extern u_int FUN_a00981f0(undefined2 *param_1, undefined2 *param_2, u_char param_3, int param_4, short param_5);
;

extern long FUN_a00982f4(short *param_1);
;

extern u_char FUN_a0098468(int *param_1, int *param_2, short param_3, short param_4, int param_5, int param_6);
;

extern u_int FUN_a0098730(undefined2 *param_1, undefined2 *param_2, u_char param_3);
;

extern void FUN_a00987bc(u_short *param_1, u_short *param_2, u_char param_3, short *param_4, int param_5);
;

extern int FUN_a00988f4(int param_1, int param_2);
;

extern int FUN_a0098940(u_int param_1);
;

extern void FUN_a0098960(int param_1);
;

extern void FUN_a0098984(int param_1);
;

extern int FUN_a00989a8(int param_1, u_short param_2);
;

extern int FUN_a00989f8(int param_1, u_short param_2);
;

extern int FUN_a0098a44(int param_1, u_short param_2);
;

extern int FUN_a0098a94(int param_1, short param_2, short param_3);
;

extern short *FUN_a0098b00(short *param_1, short *param_2);
;

extern short *FUN_a0098bd4(short *param_1, short *param_2, char param_3);
;

extern u_char FUN_a0098cd4(short *param_1, short *param_2);
;

extern u_char FUN_a0098e48(int param_1, int param_2, int param_3);
;

extern void FUN_a0098eb8(short *param_1, short *param_2, int param_3);
;

extern void FUN_a0098ffc(int param_1, int param_2, int param_3);
;

extern short *FUN_a00990ac(short *param_1, short *param_2);
;

extern void FUN_a00991bc(u_int param_1, u_int param_2, int param_3);
;

extern undefined2 *FUN_a0099274(undefined2 *param_1, int param_2, undefined2 param_3, undefined2 param_4, u_char param_5);
;

extern void FUN_a0099368(u_char *param_1, int param_2);
;

extern short *FUN_a0099534(short *param_1, short *param_2, int param_3);
;

extern void FUN_a009964c(int param_1, int param_2);
;

extern void FUN_a009977c(int param_1);
;

extern int FUN_a00997c8(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a0099900(int param_1, short param_2, u_char param_3, u_char param_4, u_char param_5);
;

extern void FUN_a0099974(int param_1, short param_2);
;

extern void FUN_a0099a30(int param_1, int param_2);
;

extern void FUN_a0099ad8(int param_1, int param_2);
;

extern void FUN_a0099c08(void);
;

extern void FUN_a0099c40(int param_1, int param_2);
;

extern void FUN_a0099cc0(u_char *param_1, int param_2, int param_3, int param_4, int param_5, int param_6);
;

extern void FUN_a0099d28(int param_1, int *param_2, u_char param_3, int param_4);
;

extern void FUN_a0099f20(u_char param_1, u_char param_2, int *param_3, int param_4, int *param_5);
;

extern void FUN_a009a710(_Instance **param_1, int param_2, int param_3, u_int param_4);
;

extern u_char FUN_a009b184(int *param_1, int *param_2);
;

extern void FUN_a009d750(int param_1, short *param_2, u_short *param_3);
;

extern void FUN_a009d870(int param_1, u_short *param_2);
;

extern void FUN_a009d9b4(u_short *param_1);
;

extern void FUN_a009e290(_Instance **param_1, int param_2);
;

extern void FUN_a00a0f00(int param_1);
;

extern void FUN_a00a1098(int param_1);
;

extern void FUN_a00a1128(int param_1, int param_2);
;

extern void FUN_a00a1198(int param_1, int param_2);
;

extern int FUN_a00a141c(int param_1, int param_2);
;

extern int FUN_a00a1458(u_char *param_1, u_int *param_2);
;

extern void FUN_a00a1638(short param_1, short param_2);
;

extern void FUN_a00a1728(u_char param_1, u_int *param_2);
;

extern void FUN_a00a1c54(int param_1, int param_2);
;

extern void FUN_a00a1ce8(int param_1, int param_2);
;

extern void FUN_a00a1d98(int param_1);
;

extern void FUN_a00a202c(void);
;

extern void FUN_a00a211c(void);
;

extern void FUN_a00a2150(int param_1);
;

extern void FUN_a00a21e4(_Instance *param_1, int param_2);
;

extern void FUN_a00a2418(int param_1);
;

extern void FUN_a00a2558(int param_1);
;

extern void FUN_a00a2630(void);
;

extern u_char FUN_a00a2638(int param_1, u_char *param_2, u_int param_3);
;

extern void FUN_a00a26d0(evCollideInstanceStatsData *param_1, __Player *param_2);
;

extern void FUN_a00a36f0(int param_1, int param_2);
;

extern void FUN_a00a3730(void);
;

extern void FUN_a00a37d0(int param_1);
;

extern void FUN_a00a385c(int param_1);
;

extern void FUN_a00a3934(int param_1);
;

extern void FUN_a00a3a18(void);
;

extern int FUN_a00a3a44(void);
;

extern void FUN_a00a3a94(int param_1);
;

extern u_char FUN_a00a3f4c(void);
;

extern void FUN_a00a3fb8(short param_1);
;

extern void FUN_a00a3ffc(int param_1);
;

extern void FUN_a00a4024(void);
;

extern void FUN_a00a40a4(short param_1);
;

extern void FUN_a00a40fc(void);
;

extern void FUN_a00a415c(void);
;

extern void FUN_a00a417c(int param_1);
;

extern void FUN_a00a4274(int param_1, short param_2, short *param_3, int param_4, short param_5);
;

extern void FUN_a00a4338(int param_1, u_char param_2, short *param_3);
;

extern void FUN_a00a4410(int param_1, int param_2, short param_3, u_int param_4, int param_5);
;

extern void FUN_a00a4504(int param_1, short *param_2);
;

extern int FUN_a00a4530(int param_1);
;

extern void FUN_a00a4648(int param_1, short **param_2);
;

extern void FUN_a00a4818(undefined2 param_1, undefined2 param_2, u_char param_3);
;

extern u_char FUN_a00a483c(void);
;

extern void FUN_a00a4898(void);
;

extern void FUN_a00a499c(void);
;

extern u_int FUN_a00a4a40(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_a00a4ad4(int *param_1, int param_2);
;

extern u_int FUN_a00a4ca4(u_char *param_1, u_char *param_2, u_int param_3);
;

extern int FUN_a00a4d04(int param_1);
;

extern void FUN_a00a4da0(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern int FUN_a00a4e34(void);
;

extern int FUN_a00a4e6c(void);
;

extern void FUN_a00a4ecc(void);
;

extern void FUN_a00a4efc(void);
;

extern u_char FUN_a00a4f2c(void);
;

extern u_char FUN_a00a4fa0(void);
;

extern void FUN_a00a5070(u_char param_1, int param_2);
;

extern void FUN_a00a512c(int param_1);
;

extern int FUN_a00a516c(u_int param_1);
;

extern void FUN_a00a5190(u_char param_1);
;

extern void FUN_a00a51dc(int param_1, int param_2);
;

extern void FUN_a00a52c0(short *param_1, undefined2 *param_2);
;

extern void FUN_a00a530c(int param_1, int param_2, short param_3);
;

extern void FUN_a00a54e0(int param_1);
;

extern void FUN_a00a5554(int param_1);
;

extern void FUN_a00a55ac(int *param_1, int param_2, u_char param_3, int *param_4);
;

extern int FUN_a00a5c1c(int *param_1, int param_2);
;

extern void FUN_a00a5dac(int param_1);
;

extern void FUN_a00a5e00(int param_1);
;

extern void FUN_a00a5e38(int *param_1, int param_2, int param_3);
;

extern void FUN_a00a60dc(int param_1, int param_2, int param_3);
;

extern void FUN_a00a6130(int param_1, int param_2);
;

extern u_char FUN_a00a621c(int param_1, int param_2);
;

extern u_char FUN_a00a62d8(int param_1, int param_2, int param_3);
;

extern void FUN_a00a6334(int param_1, int param_2);
;

extern void FUN_a00a63ec(int param_1, int param_2, int param_3);
;

extern void FUN_a00a6420(int param_1, int param_2, byte *param_3);
;

extern int FUN_a00a64ec(int param_1, undefined *param_2);
;

extern void FUN_a00a6664(int param_1, int param_2);
;

extern int FUN_a00a672c(int param_1, undefined *param_2);
;

extern void FUN_a00a678c(int param_1);
;

extern void FUN_a00a67e4(u_int param_1, int param_2);
;

extern void FUN_a00a687c(int param_1);
;

extern void FUN_a00a6934(void);
;

extern void FUN_a00a69a0(void);
;

extern void FUN_a00a6c8c(void);
;

extern void FUN_a00a6cc4(u_int param_1);
;

extern u_int FUN_a00a6cdc(int param_1, undefined2 param_2);
;

extern u_char FUN_a00a6da8(u_int param_1);
;

extern int FUN_a00a6de0(int param_1, int *param_2);
;

extern void FUN_a00a6ee4(int param_1, int *param_2, u_char param_3, u_char param_4, undefined2 param_5, int param_6, undefined2 param_7, int param_8, int param_9);
;

extern void FUN_a00a6f88(u_int param_1, int param_2);
;

extern void FUN_a00a7004(void);
;

extern u_int FUN_a00a7030(char *param_1, int param_2);
;

extern void FUN_a00a7090(_Instance *param_1);
;

extern void FUN_a00a73b0(int *param_1, int param_2, int *param_3);
;

extern void FUN_a00a930c(int *param_1, int param_2);
;

extern void FUN_a00a9a1c(int *param_1, int param_2, u_char param_3);
;

extern void FUN_a00aed74(_Instance **param_1, int param_2, u_char param_3, u_int param_4);
;

extern u_char FUN_a00b08b4(_Instance *param_1, int param_2, u_int *param_3);
;

extern void FUN_a00b0ee0(void);
;

extern void FUN_a00b11a4(short *param_1);
;

extern void FUN_a00b1304(int param_1);
;

extern void FUN_a00b1528(void);
;

extern void FUN_a00b164c(int param_1);
;

extern void FUN_a00b17fc(_Instance *param_1);
;

extern void FUN_a00b1d1c(int param_1);
;

extern void FUN_a00b1d2c(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern u_char FUN_a00b1ee4(int param_1);
;

extern u_char FUN_a00b25e4(int param_1);
;

extern int FUN_a00b263c(int param_1, int param_2);
;

extern u_int FUN_a00b2738(int param_1);
;

extern void FUN_a00b2744(int param_1, u_int param_2);
;

extern void FUN_a00b2794(int param_1, u_int param_2);
;

extern u_char FUN_a00b27e4(int param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00b2944(_Instance *param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_a00b297c(_Instance *param_1, int param_2, u_int *param_3);
;

extern void FUN_a00b2b50(int param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00b2db8(int param_1, u_short *param_2, u_short *param_3);
;

extern void FUN_a00b2fe0(int param_1);
;

extern void FUN_a00b3058(int param_1);
;

extern u_int FUN_a00b30d4(int param_1);
;

extern void FUN_a00b315c(int param_1, u_char param_2, int param_3);
;

extern void FUN_a00b34dc(void);
;

extern int FUN_a00b3554(int param_1);
;

extern void FUN_a00b36c0(undefined *param_1, short *param_2, int param_3);
;

extern void FUN_a00b370c(u_int param_1, u_short *param_2, u_short *param_3, short *param_4, u_int param_5);
;

extern void FUN_a00b3884(u_char *param_1, u_int param_2);
;

extern void FUN_a00b39dc(void);
;

extern void FUN_a00b3a8c(void);
;

extern u_char *FUN_a00b3b4c(byte *param_1, byte *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00b3e48(int param_1, int param_2);
;

extern void FUN_a00b3ea8(int param_1, undefined2 *param_2);
;

extern void FUN_a00b3f30(void);
;

extern void FUN_a00b3fb8(int param_1);
;

extern undefined *FUN_a00b403c(int param_1, int param_2);
;

extern u_char FUN_a00b4120(void);
;

extern u_int FUN_a00b41c0(int param_1);
;

extern undefined *FUN_a00b42ac(int param_1, int *param_2, undefined *param_3, u_int *param_4);
;

extern undefined *FUN_a00b43b8(int param_1, int *param_2, undefined *param_3, u_int *param_4);
;

extern char *FUN_a00b44f0(int param_1, u_int param_2);
;

extern void FUN_a00b4598(int param_1, u_int param_2);
;

extern char *FUN_a00b45c8(int param_1, int param_2);
;

extern void FUN_a00b466c(SavedBasic *param_1);
;

extern void FUN_a00b46f4(void);
;

extern void FUN_a00b47c8(int *param_1, u_char param_2, int param_3, int param_4);
;

extern u_char FUN_a00b488c(int param_1);
;

extern char *FUN_a00b491c(int param_1);
;

extern void FUN_a00b4980(int *param_1);
;

extern SavedBasic *FUN_a00b4acc(int param_1, u_short **param_2, u_char param_3, u_int param_4);
;

extern void FUN_a00b4c88(SavedBasic *param_1);
;

extern void FUN_a00b4d20(int param_1, int *param_2);
;

extern void FUN_a00b4f54(int param_1);
;

extern void FUN_a00b5024(int param_1, int param_2);
;

extern void FUN_a00b50f8(void);
;

extern u_int FUN_a00b5150(int param_1);
;

extern void FUN_a00b520c(int param_1);
;

extern void FUN_a00b523c(int param_1);
;

extern void FUN_a00b5250(int param_1);
;

extern char *FUN_a00b5270(int param_1);
;

extern char *FUN_a00b52dc(int param_1);
;

extern void FUN_a00b5348(void);
;

extern void FUN_a00b53e0(void);
;

extern void FUN_a00b54b8(u_char param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_a00b5570(u_char param_1, u_char param_2, u_char param_3, u_int param_4);
;

extern void FUN_a00b55ac(void);
;

extern int FUN_a00b565c(void);
;

extern void FUN_a00b5714(void);
;

extern void FUN_a00b5754(void);
;

extern void FUN_a00b5824(int param_1, undefined param_2, int param_3, undefined *param_4);
;

extern void FUN_a00b5918(int param_1);
;

extern void FUN_a00b59c0(int param_1, undefined param_2, undefined param_3, undefined2 param_4);
;

extern void FUN_a00b5a3c(int param_1);
;

extern void FUN_a00b5d34(int param_1, int param_2);
;

extern u_int FUN_a00b5dfc(int param_1);
;

extern void FUN_a00b5e40(void);
;

extern void FUN_a00b5eb4(void);
;

extern void FUN_a00b5f28(void);
;

extern u_char FUN_a00b6084(void);
;

extern void FUN_a00b6114(u_char param_1, char *param_2, u_char param_3);
;

extern u_int FUN_a00b6178(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern u_int FUN_a00b621c(void);
;

extern void FUN_a00b622c(void);
;

extern void FUN_a00b6274(char *param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_a00b62c4(void);
;

extern void FUN_a00b62d0(u_char param_1, u_char param_2, u_char param_3, undefined *param_4);
;

extern undefined *FUN_a00b6360(int param_1);
;

extern u_char FUN_a00b6390(void);
;

extern void FUN_a00b6398(u_char *param_1, u_char param_2);
;

extern void FUN_a00b63dc(int *param_1, int param_2, int param_3, int param_4, int param_5, int param_6, int param_7, int param_8);
;

extern void FUN_a00b642c(int *param_1, int param_2);
;

extern void FUN_a00b6450(int *param_1, int param_2);
;

extern void FUN_a00b64c0(int *param_1);
;

extern void FUN_a00b64d4(int param_1, char *param_2, char *param_3, char *param_4, byte *param_5);
;

extern void FUN_a00b6564(int param_1, char *param_2, char *param_3, byte *param_4);
;

extern void FUN_a00b6608(int *param_1);
;

extern void FUN_a00b6660(int param_1, int param_2);
;

extern void FUN_a00b678c(short param_1, short param_2, int param_3, int param_4);
;

extern int FUN_a00b69cc(int *param_1, int param_2, int param_3, int param_4, char *param_5, int param_6, u_int param_7, int *param_8);
;

extern void FUN_a00b6dd0(int *param_1);
;

extern void FUN_a00b6f18(int *param_1);
;

extern void FUN_a00b7108(int *param_1);
;

extern u_char FUN_a00b713c(int param_1);
;

extern void FUN_a00b71b8(short param_1, short param_2, byte *param_3, int param_4);
;

extern void FUN_a00b7220(byte *param_1);
;

extern void FUN_a00b7240(int param_1);
;

extern void FUN_a00b7274(int param_1);
;

extern void FUN_a00b73ec(char *param_1);
;

extern void FUN_a00b7424(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00b746c(void);
;

extern void FUN_a00b7490(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern int FUN_a00b7518(int param_1, int param_2);
;

extern void FUN_a00b7584(int param_1, int param_2);
;

extern void FUN_a00b768c(int param_1, u_char param_2, char *param_3);
;

extern undefined *FUN_a00b79d4(void);
;

extern void FUN_a00b7d3c(void);
;

extern void FUN_a00b7f44(void);
;

extern void FUN_a00b7ff4(void);
;

extern void FUN_a00b811c(void);
;

extern int FUN_a00b81cc(int param_1);
;

extern void FUN_a00b81e0(u_long **param_1);
;

extern void FUN_a00b82ac(u_long **param_1);
;

extern u_char FUN_a00b8308(u_long **param_1, u_char param_2, u_char param_3, u_char param_4, u_char param_5);
;

extern void FUN_a00b83c8(u_long **param_1);
;

extern u_char FUN_a00b840c(u_long **param_1);
;

extern void FUN_a00b86ac(void);
;

extern void FUN_a00b86dc(void);
;

extern void FUN_a00b870c(void);
;

extern void FUN_a00b873c(u_char param_1);
;

extern void FUN_a00b87a0(void);
;

extern u_int FUN_a00b87d0(void);
;

extern u_int FUN_a00b87e0(word param_1);
;

extern void FUN_a00b88d0(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00b8d00(u_char *param_1, int param_2);
;

extern int FUN_a00b8d24(char *param_1, char *param_2, int param_3);
;

extern u_int FUN_a00b8da4(u_int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_int FUN_a00b8f18(char param_1);
;

extern u_char FUN_a00b8f74(u_char param_1);
;

extern void FUN_a00b8fd4(int param_1);
;

extern void FUN_a00b906c(int param_1);
;

extern void FUN_a00b90d4(u_char param_1, short *param_2);
;

extern void FUN_a00b91f0(short *param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void FUN_a00b9280(short *param_1, u_char param_2);
;

extern u_int FUN_a00b92e0(u_char *param_1, u_int param_2, int param_3);
;

extern void FUN_a00b9398(u_char *param_1, dword param_2);
;

extern void FUN_a00b9444(int param_1);
;

extern void FUN_a00b94a0(u_char *param_1);
;

extern u_char *FUN_a00b9510(u_char *param_1);
;

extern u_char *FUN_a00b95d0(u_char *param_1);
;

extern void FUN_a00b9ac8(int param_1, u_short *param_2);
;

extern void FUN_a00b9b48(int param_1, int param_2);
;

extern void FUN_a00b9d68(int param_1, u_char *param_2);
;

extern u_int FUN_a00b9fd8(int param_1, int param_2, u_int param_3);
;

extern u_int FUN_a00ba128(u_int param_1, u_int param_2);
;

extern u_int FUN_a00ba144(byte *param_1);
;

extern void FUN_a00baa20(dword param_1);
;

extern u_int FUN_a00baa68(u_int param_1);
;

extern u_int FUN_a00baabc(undefined *param_1, u_char *param_2, int param_3, u_char param_4);
;

extern u_int FUN_a00bad6c(void);
;

extern u_char FUN_a00bafcc(u_int param_1);
;

extern void FUN_a00bb258(void);
;

extern u_char FUN_a00bb28c(void);
;

extern undefined8 FUN_a00bb3d0(u_int param_1);
;

extern void FUN_a00bb594(undefined *param_1, undefined param_2, int param_3);
;

extern u_char *FUN_a00bb5c0(u_char *param_1, u_char *param_2, u_char *param_3);
;

extern undefined *FUN_a00bb610(undefined *param_1, undefined param_2, int param_3);
;

extern u_int FUN_a00bb640(void);
;

extern void FUN_a00bb670(u_char param_1);
;

extern void FUN_a00bb680(int param_1);
;

extern void FUN_a00bb6a0(u_char *param_1);
;

extern void FUN_a00bb6d0(undefined2 *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, int param_5);
;

extern void FUN_a00bb784(undefined2 *param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4, undefined2 param_5);
;

extern void FUN_a00bb7c0(u_char param_1);
;

extern undefined2 *FUN_a00bb7d0(u_char *param_1, u_char *param_2, undefined2 *param_3);
;

extern int FUN_a00bb830(u_int param_1, u_int param_2);
;

extern u_char FUN_a00bb9b0(u_int *param_1, u_int *param_2, u_char param_3, u_char param_4, u_int *param_5);
;

extern u_char FUN_a00bba38(byte *param_1, byte *param_2, u_char param_3, u_char param_4, undefined *param_5);
;

extern void FUN_a00bbab8(int param_1, int param_2, int param_3);
;

extern char *FUN_a00bbbc8(char *param_1, char param_2);
;

extern char *FUN_a00bbc08(char *param_1, char *param_2);
;

extern int *FUN_a00bbc58(u_char *param_1, u_int *param_2, int *param_3);
;

extern u_char *FUN_a00bbdb8(u_char *param_1, u_char *param_2);
;

extern void FUN_a00bbdf8(u_char *param_1, u_char *param_2, u_char *param_3);
;

extern void FUN_a00bbe28(int param_1);
;

extern int FUN_a00bbe48(char *param_1);
;

extern u_char FUN_a00bbea8(u_int param_1, undefined2 param_2, u_int param_3);
;

extern u_int FUN_a00bbf44(u_int param_1);
;

extern u_int FUN_a00bbf7c(u_int param_1);
;

extern u_char FUN_a00bbfac(u_int param_1);
;

extern void FUN_a00bbfe0(u_char param_1, u_char param_2);
;

extern void FUN_a00bc29c(int param_1);
;

extern char *FUN_a00bc640(char *param_1, char *param_2);
;

extern void FUN_a00bc6b0(void);
;

extern u_int FUN_a00bc6f0(void);
;

extern u_int FUN_a00bc7b0(u_char param_1, int param_2, int param_3);
;

extern void FUN_a00bc97c(u_char param_1, u_char param_2);
;

extern void FUN_a00bc9b4(u_char param_1, u_char param_2, undefined param_3);
;

extern u_int FUN_a00bca04(int param_1);
;

extern void FUN_a00bcb7c(int param_1, int param_2);
;

extern int FUN_a00bcc14(char *param_1, char *param_2);
;

extern void FUN_a00bcc84(u_char *param_1);
;

extern void FUN_a00bccd4(u_char *param_1);
;

extern u_int *FUN_a00bcd04(u_char *param_1, u_short *param_2, u_int *param_3);
;

extern u_int FUN_a00bce14(void);
;

extern u_int FUN_a00bce24(void);
;

extern undefined1 *FUN_a00bce34(void);
;

extern u_char FUN_a00bce40(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00bceac(void);
;

extern u_char FUN_a00bcecc(u_char param_1);
;

extern void FUN_a00bcee0(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern void FUN_a00bcf00(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern u_char FUN_a00bcf20(u_char param_1);
;

extern u_char FUN_a00bcf34(u_char param_1);
;

extern u_char FUN_a00bcf48(byte param_1, byte *param_2, undefined *param_3);
;

extern u_char FUN_a00bd084(byte param_1, byte *param_2);
;

extern u_int FUN_a00bd1b8(byte param_1, byte *param_2, char *param_3);
;

extern u_int FUN_a00bd304(dword param_1, u_int param_2);
;

extern u_int FUN_a00bd324(dword param_1, u_int param_2);
;

extern void FUN_a00bd344(void);
;

extern void FUN_a00bd368(int param_1);
;

extern void FUN_a00bd388(int param_1, char *param_2);
;

extern int FUN_a00bd48c(byte *param_1);
;

extern u_char FUN_a00bd50c(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern u_int FUN_a00bd59c(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char *FUN_a00bd65c(u_char *param_1, char *param_2, u_char param_3, undefined *param_4);
;

extern u_int FUN_a00bd934(char *param_1, char *param_2);
;

extern u_char FUN_a00bd954(void);
;

extern int FUN_a00bdc18(int param_1, char *param_2);
;

extern u_char FUN_a00bdcbc(int param_1, u_char param_2, u_char param_3, undefined *param_4);
;

extern u_int FUN_a00bdf58(u_char param_1, int param_2, u_char param_3, undefined *param_4);
;

extern void FUN_a00bdfcc(void);
;

extern int FUN_a00bdfdc(int param_1);
;

extern void FUN_a00be08c(void);
;

extern u_int FUN_a00be0c4(void);
;

extern void FUN_a00be14c(void);
;

extern void FUN_a00be16c(void);
;

extern u_char FUN_a00be21c(void);
;

extern void FUN_a00be300(void);
;

extern void FUN_a00be310(void);
;

extern void FUN_a00be320(void);
;

extern u_int *FUN_a00be330(u_char *param_1, u_int *param_2);
;

extern u_int *FUN_a00be440(u_char *param_1, u_short *param_2, u_int *param_3);
;

extern int FUN_a00be5a0(int param_1, u_char *param_2);
;

extern u_int FUN_a00be5d0(u_int param_1, u_int param_2, u_int param_3, u_int param_4);
;

extern void FUN_a00be610(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00be6b4(u_char param_1, char *param_2, u_char param_3, u_char param_4);
;

extern char *FUN_a00be760(char *param_1, char *param_2, int param_3);
;

extern int FUN_a00be7d0(u_int param_1);
;

extern u_int FUN_a00be830(word *param_1, u_int param_2, u_int param_3, u_char param_4);
;

extern void FUN_a00be890(word param_1, word param_2);
;

extern void FUN_a00be8c0(int param_1, word *param_2);
;

extern void FUN_a00be8e0(int param_1, word param_2);
;

extern void FUN_a00be950(int param_1);
;

extern void FUN_a00be990(int param_1, u_int param_2);
;

extern void FUN_a00beb50(undefined *param_1);
;

extern u_char FUN_a00bebdc(u_int param_1, u_char param_2, u_int param_3);
;

extern void FUN_a00bed7c(u_char param_1, u_char param_2);
;

extern u_int FUN_a00bed9c(u_int param_1, u_int param_2, u_int param_3);
;

extern void FUN_a00bedfc(int param_1);
;

extern void FUN_a00bee2c(int param_1, u_int param_2);
;

extern int FUN_a00bee5c(int param_1);
;

extern void FUN_a00bef2c(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00bef4c(void);
;

extern void FUN_a00bef5c(void);
;

extern u_char FUN_a00befdc(u_int param_1);
;

extern void FUN_a00bf1ac(int param_1, u_char param_2, u_char param_3);
;

extern void FUN_a00bf22c(int param_1, u_int param_2);
;

extern void FUN_a00bf2ac(int param_1, u_int param_2, u_int param_3, u_int param_4, u_char param_5, u_char param_6, int param_7, int param_8, int param_9);
;

extern int thunk_FUN_a00bf408(byte *param_1, byte *param_2, int param_3);
;

extern int FUN_a00bf408(byte *param_1, byte *param_2, int param_3);
;

extern dword FUN_a00bf43c(void);
;

extern void FUN_a00bf4d0(byte *param_1);
;

extern undefined *FUN_a00bf530(undefined *param_1, undefined *param_2, int param_3);
;

extern void FUN_a00bf5a0(void);
;

extern void FUN_a00bf5b0(u_int *param_1);
;

extern char *FUN_a00bf930(char *param_1, char *param_2);
;

extern void FUN_a00bfa50(u_char param_1, u_char param_2, undefined *param_3, undefined *param_4);
;

extern void FUN_a00c036c(u_char *param_1, u_char *param_2, u_int param_3);
;

extern void FUN_a00c0398(u_int param_1, dword param_2, int param_3, u_int param_4, dword param_5, char param_6);
;

extern void FUN_a00c0540(void);
;

extern void FUN_a00c0760(u_char param_1, u_char param_2, u_char param_3);
;

extern void FUN_a00c0870(void);
;

extern u_char FUN_a00c0a30(u_char *param_1);
;

extern void FUN_a00c0a6c(void);
;

extern undefined *FUN_a00c0a7c(void);
;

extern void FUN_a00c0b6c(u_char *param_1, int param_2);
;

extern undefined *FUN_a00c0b9c(void);
;

extern void FUN_a00c0e14(u_char *param_1, int param_2);
;

extern void FUN_a00c0e44(void);
;

extern void FUN_a00c0e5c(void);
;

extern void FUN_a00c0e6c(void);
;

extern void FUN_a00c0e7c(void);
;

extern void FUN_a00c0e8c(void);
;

extern void FUN_a00c0e9c(void);
;

extern u_char FUN_a00c0eac(void);
;

extern void FUN_a00c0ec8(u_char param_1);
;

extern void FUN_a00c0ed4(u_char param_1);
;

extern void FUN_a00c0ee0(void);
;

extern void FUN_a00c10e0(void);
;

extern void FUN_a00c11ac(void);
;

extern u_char FUN_a00c11f0(int param_1);
;

extern void FUN_a00c1524(void);
;

extern u_int FUN_a00c15ec(int param_1, int param_2);
;

extern u_int FUN_a00c17c4(int param_1, undefined param_2);
;

extern u_char FUN_a00c19fc(void);
;

extern void FUN_a00c1a8c(void);
;

extern void FUN_a00c1ab4(void);
;

extern void FUN_a00c1e38(int param_1);
;

extern u_char FUN_a00c1f14(int param_1);
;

extern undefined *FUN_a00c1f44(undefined *param_1, int param_2);
;

extern void FUN_a00c1f74(int param_1, u_char param_2, undefined param_3);
;

extern void FUN_a00c1f80(int param_1);
;

extern u_char FUN_a00c2004(int *param_1);
;

extern int FUN_a00c2150(int param_1);
;

extern u_char FUN_a00c2188(int *param_1, int param_2);
;

extern u_int FUN_a00c2578(int param_1, u_char param_2);
;

extern void FUN_a00c26c4(int param_1, undefined param_2);
;

extern void FUN_a00c26e4(int param_1);
;

extern void FUN_a00c26f8(int param_1, undefined param_2);
;

extern void FUN_a00c2718(int param_1, undefined param_2);
;

extern void FUN_a00c2738(int param_1, undefined param_2);
;

extern void FUN_a00c2758(int param_1);
;

extern u_char FUN_a00c2778(u_char param_1, char *param_2, u_int param_3, u_int param_4);
;

extern undefined *FUN_a00c2cd4(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern undefined *FUN_a00c2f54(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern u_char FUN_a00c321c(byte param_1, byte *param_2, undefined *param_3, undefined *param_4);
;

extern void FUN_a00c3628(void);
;

extern u_char FUN_a00c36fc(void);
;

extern void FUN_a00c37ec(void);
;

extern u_char FUN_a00c3838(u_char param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_a00c3a18(int param_1);
;

extern u_char FUN_a00c3b80(dword param_1, u_int param_2);
;

extern u_char FUN_a00c3c80(dword param_1, u_int param_2);
;

extern void FUN_a00c3e50(void);
;

extern u_char FUN_a00c41ac(int param_1);
;

extern u_int FUN_a00c4394(u_char param_1, u_char param_2, u_int param_3);
;

extern int FUN_a00c4494(int param_1, char *param_2, undefined *param_3, undefined *param_4);
;

extern void FUN_a00c455c(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00c4644(void);
;

extern u_char FUN_a00c46bc(int param_1, u_char param_2, u_char param_3, u_char param_4);
;

extern void FUN_a00c493c(word *param_1, u_int param_2, u_char param_3, u_char param_4);
;

extern u_char FUN_a00c4bb8(int param_1, u_int param_2, u_int param_3);
;

extern u_int FUN_a00c4e38(word *param_1, u_int param_2, u_int param_3, u_char param_4);
;

extern u_int FUN_a00c4ebc(u_int param_1, u_int param_2, u_int param_3);
;

extern void FUN_a00c4f20(int param_1, u_int param_2, int param_3);
;

extern u_int FUN_a00c4f64(int param_1, u_int param_2);
;

extern void FUN_a00c5060(void);
;

extern void FUN_a00c5088(void);
;

extern void FUN_a00c50b0(void);
;

extern void FUN_a00c5118(void);
;

extern void FUN_a00c5128(void);
;

extern void FUN_a00c5208(void);
;

extern void FUN_a00c521c(void);
;

extern void FUN_a00c522c(void);
;

extern void FUN_a00c523c(void);
;

extern u_char FUN_a00c524c(int param_1);
;

extern void FUN_a00c52dc(void);
;

extern u_int FUN_a00c52ec(int param_1, u_int param_2, int param_3, int param_4);
;

extern void FUN_a00c55ac(void);
;

extern void FUN_a00c55dc(u_int *param_1);
;

extern void FUN_a00c5aac(byte param_1);
;

extern void FUN_a00c5ba8(void);
;

extern void FUN_a00c5cd4(void);
;

extern void FUN_a00c5fb4(int param_1, u_int param_2);
;

extern u_char FUN_a00c5ff4(u_char param_1);
;

extern void FUN_a00c6008(void);
;

extern void FUN_a00c602c(u_char param_1);
;

extern u_int FUN_a00c604c(void);
;

extern void FUN_a00c66dc(void);
;

extern void FUN_a00c66fc(void);
;

extern void FUN_a00c6710(void);
;

extern void FUN_a00c6e28(void);
;

extern void FUN_a00c8a48(void);
;

extern void FUN_a00c9bdc(void);
;

extern void FUN_a00caaa0(int param_1, int param_2, int param_3, int param_4);
;

extern void FUN_a00cac44(void);
;

extern void FUN_a00cacac(void);
;

extern void FUN_a00cade4(void);
;

extern void FUN_a00caf80(void);
;

extern void FUN_a00cb348(void);
;

extern void FUN_a00cb604(u_char param_1, u_char param_2);
;

extern void FUN_a00cb81c(void);
;

extern void FUN_a00cb944(void);
;

extern void FUN_a00cb980(void);
;

extern void FUN_a00cb9d4(void);
;

extern void FUN_a00cba64(void);
;

extern void FUN_a00cbae0(void);
;

extern void FUN_a00cbaf4(void);
;

extern void FUN_a00cbc3c(void);
;

extern void FUN_a00cbd94(void);
;

extern void FUN_a00cbf6c(void);
;

extern void FUN_a00cc1b4(void);
;

extern void FUN_a00cc260(void);
;

extern void FUN_a00cc46c(void);
;

extern void FUN_a00cc4e4(void);
;

extern void FUN_a00cc55c(void);
;

extern void FUN_a00cc5d4(void);
;

extern void FUN_a00cca54(void);
;

extern void FUN_a01c3084(void);
;

extern void FUN_a01c64d8(void);
;

extern void FUN_a01d0080(void);
;

extern void FUN_a01d00a0(void);
;

static unsigned short __currentData;

static unsigned short __dataCount;

static unsigned short *__demoBuffer;

static unsigned short *__demoBufferStart;

static unsigned long __hblankEvent;

extern unsigned long __timerEvent;

static struct _G2AppDataVM_Type _appDataVM;

static struct _G2AnimChanStatusBlockPool_Type _chanStatusBlockPool;

static struct _G2AnimControllerPool_Type _controllerPool;

static int _indexTable[16];

static struct _G2AnimInterpStateBlockPool_Type _interpStateBlockPool;

extern int _ramsize;

static struct _G2AnimSegValue_Type _segValues[80];

extern int _stacksize;

static int _stepSizeTable[64];

static struct AadProgramAtr aadDummySfxProgram;

extern unsigned long aadGp;

static unsigned short aadHblanksPerUpdate[4];

extern struct AadMemoryStruct *aadMem;

extern unsigned short aadPitchTable[85];

static unsigned long aadReverbModeSize[10];

extern unsigned long aadStepsPerCent[85];

extern short aadStepsPerSemitone[85];

static unsigned long aadUpdateRate[4];

static long ACE_amount;

extern struct DebugMenuLine AIMenu[6];

static int AlgoControlFlag;

static short align_flag;

extern struct DebugMenuLine AlukaMenu[10];

extern struct DebugMenuLine AnteRoomsMenu[8];

extern struct DebugMenuLine AshVillageMenu[7];

extern int AutoFaceAngle;

extern short AXIS_LENGTH;

extern struct _ButtonTexture BexitLine[2];

static int blast_range;

static int BlockCount;

extern struct _ButtonTexture BmenuLines[3][2];

extern struct DebugMenuLine BossAreasMenu[9];

static struct SavedBasic(*bufferSavedIntroArray[64]);

static struct burntTuneType burntTest;

static short Camera_lookDist;

static short Camera_lookHeight;

extern long camera_modeToIndex[15];

static struct _SVector camera_plane;

static struct _SVector camera_shakeOffset[16];

static short camera_still;

extern int CameraCenterDelay;

static short CameraLookStickyFlag;

extern struct DebugMenuLine cameraMenu[4];

extern long cameraMode;

extern long campoint_hh;

extern long campoint_hw;

extern struct __CannedSound cannedSound[4];

static int cem_cursor_width;

static int cem_item_leading;

static int cem_line_leading;

static int cem_line_width;

static int cem_x_base;

static int cem_y_base;

static short CenterFlag;

extern char charMap[92][3];

static long cheatCodeLastCommand;

static long cheatCodeStage;

static long cheatCombo[4];

extern struct DebugMenuLine cheatsMenu[8];

static int checkMusicDelay;

static char circBuf[4096];

static void *circWhere;

extern struct DebugMenuLine CityMenu[5];

extern struct BLK_FILL clearRect[2];

extern struct DebugMenuLine CliffMenu[3];

extern long collide_acceptAttr;

extern long collide_ignoreAttr;

extern struct _SVector collide_localPoint;

extern struct MATRIX *collide_lwTransform;

extern struct _SVector *collide_normal0;

extern struct _SVector *collide_normal1;

extern struct _SVector *collide_point0;

extern struct _SVector *collide_point1;

extern long collide_t0;

extern long collide_t1;

static short combat_cam_angle;

static short combat_cam_debounce;

static short combat_cam_distance;

static short combat_cam_weight;

static struct __FitPoint constrictData[32];

extern int ControlFlag;

extern struct __razController controllerList[24];

extern unsigned char controllerType[2];

extern long *controlsScreen;

static unsigned short cowlList[19];

extern long crap1;

static long current_roll_amount;

static struct ScriptPCode *currentActionScript;

static char currentDynamicSoundName[16];

static struct Event *currentEventInstance;

static long CurrentEventLine;

extern int currentIdleCount;

extern struct __Idle **currentIdleList;

extern int currentIdleListCount;

extern struct DebugMenuLine *currentMenu;

static int currentMusicPlane;

static struct Level *CurrentPuzzleLevel;

extern long CurrentWarpNumber;

static struct MATRIX cwTransform2X;

extern struct DebugMenuLine DarkEdenMenu[3];

extern long debug_cameraMode;

static struct debug_dispatch_t debug_dispatch_table[5];

extern long debugFogBlu;

extern long debugFogFar;

extern long debugFogGrn;

extern long debugFogNear;

extern long debugFogRed;

extern struct DebugMenuLine debugForgedAbilitiesMenu[7];

extern long debugGameTime;

extern struct DebugMenuLine debugGlyphAbilitiesMenu[11];

extern long debugHealthLevel;

extern struct DebugMenuLine debugHealthSystemMenu[5];

extern struct DebugMenuLine debugImbueSoulReaverMenu[7];

static long debugMenuChoice;

extern unsigned char debugOrgFogBlu;

extern short debugOrgFogFar;

extern unsigned char debugOrgFogGrn;

extern short debugOrgFogNear;

extern unsigned char debugOrgFogRed;

extern unsigned long debugRazielFlags1;

extern unsigned long debugRazielFlags2;

extern struct DebugMenuLine debugRazielMenu[8];

extern struct DebugMenuLine debugSoundMenu[1];

extern struct DebugMenuLine debugSpecialAbilitiesMenu[10];

extern unsigned long debugTimeMult;

extern long debugVoiceIndex;

static struct LightGroup default_lightgroup;

static struct _MonsterFunctionTable DefaultFunctionTable;

static struct _MonsterState DefaultStateTable[31];

extern struct DebugMenuLine DemoAreaMenu[10];

extern struct DebugMenuLine demoMenu[8];

extern int devstation;

static struct _fth directionList[6];

extern struct DISPENV disp[2];

extern long DoMainMenu;

static int Down;

extern struct DRAWENV draw[2];

extern long draw_belowSplit;

extern unsigned char *draw_stack;

static int dualShock;

extern unsigned char dualshock_align[6];

extern unsigned char dualshock_motors[2];

static short dualshock_onflag;

static long dualshock0_time;

static long dualshock1_time;

extern long dyna_clddyna[8];

extern long dyna_cldstat[8];

extern short ecostable[3072];

static void *enemyPlanPool;

static struct __EngagedInstance EngagedList[15];

static short *EventAbortedPosition;

static short EventAbortLine;

static long EventCurrentEventIndex;

static short EventJustRecievedTimer;

extern struct _Instance(*eventListArray[20][10]);

extern long eventListNumInstances[20];

extern struct DebugMenuLine eventMenu[10];

static struct EventTimer eventTimerArray[24];

static struct __Force *ExternalForces;

static struct __Force ExternalForces[4];

static struct _G2SVector3_Type *ExtraRot;

static struct _G2SVector3_Type ExtraRotData;

extern struct UVTYPE *face_uv0;

extern struct UVTYPE *face_uv01;

extern struct UVTYPE *face_uv1;

extern struct UVTYPE *face_uv12;

extern struct UVTYPE *face_uv2;

extern struct UVTYPE *face_uv20;

extern struct SVECTOR *face_v0;

extern struct SVECTOR *face_v01;

extern struct SVECTOR *face_v1;

extern struct SVECTOR *face_v12;

extern struct SVECTOR *face_v2;

extern struct SVECTOR *face_v20;

static struct _ButtonTexture *FaceButtons;

extern struct DebugMenuLine fogMenu[8];

extern struct _BlockVramEntry *FONT_vramBlock;

extern struct FontPos fontPos[72];

extern struct Object *fontsObject;

extern struct FontTracker fontTracker;

extern unsigned char fontTransTable[128];

extern short forceDrawInFront;

static char fp_str[512];

extern long FRAC_BITS;

static struct MONTABLE_202fake functionChoiceTable[8];

extern struct _FXBlastringEffect *fx_blastring;

extern long FX_ColorArray[6];

static struct _Instance *FX_ConstrictInstance;

static struct _Position FX_ConstrictPosition;

static struct _Position *FX_ConstrictPositionPtr;

static struct _FXRibbon *FX_ConstrictRibbon;

static short FX_ConstrictStage;

static short FX_Frames;

static struct _FXGeneralEffect *FX_GeneralEffectTracker;

static short fx_going;

static struct _FX_PRIM *FX_LastUsedPrim;

static int fx_radius_old;

static struct _Instance *FX_reaver_instance;

static short FX_TimeCount;

extern struct _FXTracker *fxTracker;

static struct _G2AnimAlphaTable_Type(*G2AlphaTables[7]);

extern int gamePadControllerOut;

static struct GameTracker *gameTracker;

extern struct GameTracker gameTrackerX;

static int gCurDir;

static int gDfragRequest;

extern long gDummyCommand[2][2];

extern short gEndGameNow;

extern struct _FXTracker *gFXT;

extern struct HintSystemStruct gHintSystem;

static struct LightInfo *gLightInfo;

static struct _ObjectTracker *GlobalObjects;

extern struct _GlobalSaveTracker *GlobalSave;

static int glowdeg;

static short glyph_cost;

static short glyph_time;

static short glyph_trigger;

static struct MEMCARD_211fake gMcmenu;

extern struct memcard_t gMemcard;

extern struct _Normal gNormalList[244];

static int gNumMonsters;

extern struct DebugMenuLine goodiesMenu[17];

static unsigned long(**gOt[2]);

extern struct DebugMenuLine gpadConfigMenu[4];

extern struct ControllerPacket gpbuffer1;

extern struct ControllerPacket gpbuffer2;

static struct _PolytopeList *gPolytopeList;

static int gpSaved;

extern int gSramCheckRequest;

extern int gSramFreeBlocks;

extern int gSramFullAlarm;

static int gSramFullMsgCnt;

extern int gSramLargestFree;

extern int gSramTotalFree;

extern int gSramTotalUsed;

extern int gSramUsedBlocks;

extern long gTimerEnabled;

static struct _VertexPool *gVertexPool;

static int hack_attract;

static int hack_attract_movie;

static int hack_initialized;

static int hack_reset_attract;

extern unsigned long **hackOT;

extern char HashExtensions[7][4];

static short hitline_rot;

extern struct DebugMenuLine HubAMenu[5];

extern struct DebugMenuLine HubBMenu[3];

static struct _SVector HUD_Cap_Pos;

static struct _SVector HUD_Cap_Vel;

static short HUD_Captured;

static int HUD_Count;

static short HUD_Pos_vel;

static short HUD_Position;

static short HUD_Rot_vel;

static short HUD_Rotation;

static short HUD_State;

static short HUD_Wait;

extern int hud_warp_arrow_flash;

extern struct _MonsterFunctionTable HUMAN_FunctionTable;

extern struct _MonsterStateChoice HUMAN_StateChoiceTable[6];

extern struct _MonsterFunctionTable HUNTER_FunctionTable;

extern struct _MonsterStateChoice HUNTER_StateChoiceTable[6];

extern short identityMatrix[3][3];

static struct _InstanceList *instanceList;

static struct _InstancePool *instancePool;

extern int InStreamUnit;

extern struct InterfaceItem InterfaceItems[5];

static int ITEMSKIP;

extern struct DebugMenuLine keybConfigMenu[4];

static int LastBlock;

extern unsigned short lastData[2];

static int LastRC;

static int lastSenseFrame;

static struct _SVector left_point;

extern struct DebugMenuLine level2SelectMenu[14];

extern struct DebugMenuLine levelSelectMenu[15];

extern void *light_light;

extern struct LightInfo *light_lightInfo;

extern struct _Terrain *light_terrain;

static int LINESKIP;

static int loadBufferedFromHead;

static struct _LoadQueueEntry *loadFree;

static struct _LoadQueueEntry *loadHead;

static struct _LoadQueueEntry LoadQueue[40];

static struct _LoadStatus loadStatus;

static struct _LoadQueueEntry *loadTail;

static struct LocalizationHeader *LocalizationTable;

static char **LocalStrings;

extern int LoopCounter;

extern short M_TrackClutUpdate;

static int MAIN_WIDTH;

static int MAIN_XPOS;

static int MAIN_YPOS;

static char mainFormatString[20];

extern struct DebugMenuLine mainMenu[8];

extern short mainMenuFadeInTime;

extern short mainMenuFading;

extern long mainMenuMode;

extern long *mainMenuScreen;

extern long *mainMenuScreen;

static int mainMenuSfx;

extern short mainMenuTimeOut;

extern char mainOptionsInit;

extern struct MainTracker mainTrackerX;

static int MANNA_Pickup_Time;

static short MANNA_Pos_vel;

static short MANNA_Position;

extern struct DebugMenuLine mcardMenu[8];

extern struct DebugMenuLine mcardMenu[1];

extern struct DebugMenuLine mcardSaveMenu[8];

extern struct DebugMenuLine mcardSaveMenu[1];

static struct menuface_t MenuFaces[8];

extern long menuPauseSel;

static char midiDataByteCount[8];

static struct MissileGraphics MISSILE_objectTable[4];

extern long modelDQP;

static struct _MonsterVars(*monsterSenseArray[40]);

static char monsterSensed[40];

extern char monVersion[12];

extern struct DebugMenuLine MorlockMenu[3];

extern short MORPH_Component[3];

extern struct _TFace *MORPH_SavedFace;

extern struct Level *MORPH_SavedLevel;

extern short MORPH_Track[2];

static long MoveCodeStreamExtra;

extern struct DebugMenuLine MovieAreaMenu[8];

extern int musicLoadInProgress;

static struct NewMemTracker newMemTracker;

extern int nomusic;

static struct _Normal Norm;

extern int nosound;

static long numActiveEventTimers;

static long numbufferedIntros;

static int numLoads;

extern long numOfBlocksUsed;

extern long NumSignalsToReset;

extern struct ObjectAccess objectAccess[28];

extern struct ObjectFunc objectFunc[8];

static long objectOneShotTriggerTbl[3];

extern struct _BlockVramEntry *openVramBlocks;

extern struct DebugMenuLine optsMenu[15];

extern struct DebugMenuLine OracleMenu[10];

static long overrideCommand[2][5];

static long overrideData[2][5];

static long *PadData;

static short panic_count;

static int PAUSE_WIDTH;

static int PAUSE_XPOS;

static int PAUSE_YPOS;

extern struct _ButtonTexture PauseButtons[4][2];

static char pauseFormatString[20];

extern struct DebugMenuLine pauseMenu[7];

extern struct DebugMenuLine pauseSaveMenu[5];

extern int pcverify;

static int Pending;

static int PhysicsMode;

static unsigned char PickupList[4];

extern struct DebugMenuLine PillarsMenu[6];

static void *planningPool;

extern long playerCameraMode;

static struct RazielData *PlayerData;

extern struct PoolManagementData *poolManagementData;

static struct PoolManagementData poolManagementDataStorage;

extern char *primBase;

static struct _PrimPool(*primPool[2]);

extern unsigned short psxData[2];

extern struct DebugMenuLine PushMenu[10];

static struct RadarInfo radarDir[8];

static unsigned char radarDirIndex[8];

static short rain_amount;

static struct __Player Raziel;

extern long RazielCommands[10];

static struct _G2AnimInterpInfo_Type razInterpInfo[3];

extern struct ControllerPacket readGPBuffer1;

extern struct ControllerPacket readGPBuffer2;

extern short RENDER_currentStreamUnitID;

static int reqMusicNewPlane;

static int reqMusicStartPlaneShift;

extern struct SignalResetStruct ResetSignalArray[16];

static struct _SVector right_point;

static int roll_inc;

static long roll_target;

static int s_zval;

extern long SaveArraySize[10];

static struct SavedInfoTracker savedInfoTracker;

extern struct DebugMenuLine saveMenu[4];

extern struct LightInfo *sbsp_lightInfo;

static struct UW_ScreenXY *ScreenMorphArray;

extern char(*selectMenuText[5]);

extern struct SVECTOR shadow_vertices[11];

static short shorten_count;

static short shorten_flag;

extern long SignalEndGame;

extern struct SignalInfo signalInfoList[27];

extern struct DebugMenuLine SilencedCathedralMenu[11];

extern struct _MonsterFunctionTable SKINNER_FunctionTable;

extern struct _MonsterStateChoice SKINNER_StateChoiceTable[5];

extern struct DebugMenuLine SkinnerMenu[7];

extern struct _MonsterFunctionTable SLUAGH_FunctionTable;

extern struct _MonsterStateChoice SLUAGH_StateChoiceTable[4];

static unsigned long smfBytesLeft;

static unsigned char *smfDataPtr;

static struct AadDynamicSfxLoadInfo *smfInfo;

static short snow_amount;

extern struct _MonsterFunctionTable SOUL_FunctionTable;

extern struct _MonsterStateChoice SOUL_StateChoiceTable[7];

extern char soundBuffer[13256];

extern struct SoundEffectChannel soundEffectChannelTbl[16];

extern unsigned short SpecialFogClut;

static struct DVECTOR Spiral_Array[65];

static long Spiral_Current;

static short Spiral_Degrees;

static int Spiral_Glow_Size;

static int Spiral_Glow_X;

static int Spiral_Glow_Y;

static long Spiral_Max;

static int Spiral_Mod;

static short Spiral_Number;

static struct DVECTOR Spiral_OffsetM[64];

static struct DVECTOR Spiral_OffsetP[64];

static struct _Rotation splinecam_helprot;

extern unsigned long StackSave;

extern struct DebugMenuLine standardMenu[12];

static int StartGameFading;

extern long stat_clddyna[8];

extern struct DebugMenuLine statsMenu[1];

extern int StCdIntrFlag;

extern struct DebugMenuLine StoneMenu[5];

extern struct STracker StreamTracker;

extern struct DebugMenuLine SunLightMenu[7];

static struct MATRIX TempMat;

static struct MATRIX TempMat;

extern struct _BlockVramEntry TerrainVramBlock;

extern struct DebugMenuLine TestMenu[18];

extern struct DebugMenuLine TestMenu2[16];

static char(*the_attract_movies[4]);

static struct cinema_fn_table_t *the_cine_table;

static struct _ObjectTracker *the_cine_tracker;

static struct font_color_t the_font_color_table[3];

static char *the_format_string;

static int the_header_size;

static enum language_t the_language;

extern struct mcmenu_table_t the_mcmenu_table;

static struct menu_sound_entry_t the_menu_sounds[6];

extern struct DebugMenuLine *the_previous_menu;

extern struct Camera theCamera;

static long timerArray[10];

static long timerIndex;

extern struct DebugMenuLine TombMenu[6];

extern struct DebugMenuLine TrainingMenu[5];

extern struct DebugMenuLine UnderMenu[3];

static int Up;

extern struct _BlockVramEntry *usedVramBlocks;

static long UW_angle;

static long UW_angleInc;

static long UW_scalex;

static long UW_scalexInc;

static long vmClock;

static long vmRealClock;

extern struct XAVoiceListEntry *voiceList;

extern struct XAVoiceTracker voiceTracker;

extern long VRAM_NeedToUpdateMorph;

extern struct _BlockVramEntry vramBlockList[75];

extern struct _MonsterFunctionTable VWRAITH_FunctionTable;

extern struct _MonsterStateChoice VWRAITH_StateChoiceTable[7];

extern long WaitingForVoiceNumber;

extern long WaitingToLoadSound;

static int warpDraw;

extern struct STREAM_289fake WarpGateLoadInfo;

extern struct WarpRoom WarpRoomArray[14];

extern long WaterInUse;

static struct WaterLevelProcess WaterLevelArray[5];

extern struct DebugMenuLine WaterMenu[4];

static int WaterStatus;

static struct MATRIX wcTransform2X;

static struct MATRIX wcTransformX;

static short wind_deg;

static short wind_speed;

static short windx;

static short windy;

extern struct _MonsterFunctionTable WORSHIP_FunctionTable;

extern struct _MonsterStateChoice WORSHIP_StateChoiceTable[5];

static int ZoneDelta;

struct TCB
{
    long status;
    long mode;
    unsigned long reg[40];
    long system[6];
};

struct EXEC
{
    unsigned long pc0;
    unsigned long gp0;
    unsigned long t_addr;
    unsigned long t_size;
    unsigned long d_addr;
    unsigned long d_size;
    unsigned long b_addr;
    unsigned long b_size;
    unsigned long s_addr;
    unsigned long s_size;
    unsigned long sp;
    unsigned long fp;
    unsigned long gp;
    unsigned long ret;
    unsigned long base;
};

struct DIRENTRY
{
    char name[20];
    long attr;
    long size;
    struct DIRENTRY *next;
    long head;
    char system[4];
};

struct MATRIX
{
    short m[3][3];
    long t[3];
};

struct VECTOR
{
    long vx;
    long vy;
    long vz;
    long pad;
};

struct SVECTOR
{
    short vx;
    short vy;
    short vz;
    short pad;
};

struct CVECTOR
{
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char cd;
};

struct DVECTOR
{
    short vx;
    short vy;
};

struct RVECTOR
{
    struct SVECTOR v;
    unsigned char uv[2];
    unsigned short pad;
    struct CVECTOR c;
    struct DVECTOR sxy;
    unsigned long sz;
};

struct CRVECTOR3
{
    struct RVECTOR r01;
    struct RVECTOR r12;
    struct RVECTOR r20;
    struct RVECTOR *r0;
    struct RVECTOR *r1;
    struct RVECTOR *r2;
    unsigned long *rtn;
};

struct CRVECTOR4
{
    struct RVECTOR r01;
    struct RVECTOR r02;
    struct RVECTOR r31;
    struct RVECTOR r32;
    struct RVECTOR rc;
    struct RVECTOR *r0;
    struct RVECTOR *r1;
    struct RVECTOR *r2;
    struct RVECTOR *r3;
    unsigned long *rtn;
};

struct RECT
{
    short x;
    short y;
    short w;
    short h;
};

struct DR_ENV
{
    unsigned long tag;
    unsigned long code[15];
};

struct P_TAG
{
    unsigned int addr;
    unsigned int len;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
};

struct CdlLOC
{
    unsigned char minute;
    unsigned char second;
    unsigned char sector;
    unsigned char track;
};

struct LightInstance
{
    struct _Instance *lightInstance;
    long r;
    long g;
    long b;
    short radius;
    unsigned char segment;
    unsigned char flags;
};

struct _Instance
{
    struct NodeType node;
    struct _Instance *next;
    struct _Instance *prev;
    long instanceID;
    long flags;
    long flags2;
    struct Object *object;
    struct Intro *intro;
    void *data;
    void *introData;
    struct _Instance *parent;
    long introNum;
    long birthStreamUnitID;
    long currentStreamUnitID;
    long introUniqueID;
    struct MATRIX *matrix;
    struct MATRIX *oldMatrix;
    struct SoundInstance soundInstanceTbl[4];
    unsigned long maxCheckDistance;
    unsigned long checkMask;
    struct _Position position;
    unsigned char lightGroup;
    struct _Position oldPos;
    unsigned char spectralLightGroup;
    short currentTextureAnimFrame;
    struct _Position initialPos;
    struct _Rotation rotation;
    struct _Rotation oldRotation;
    struct _SVector scale;
    long attachedID;
    long attachedSegment;
    struct MATRIX relativeMatrix;
    struct _TFace *tface;
    struct _TFace *oldTFace;
    void *tfaceLevel;
    void *collideInfo;
    long bspTree;
    short cachedTFace;
    short cachedBSPTree;
    struct _Normal oldWNormal;
    struct _Normal wNormal;
    struct _SVector offset;
    void *dsignal;
    void *shadow0;
    void *shadow1;
    void *extraLight;
    struct _Position extraLightDir;
    short extraLightScale;
    struct _HModel *hModelList;
    short fadeValue;
    short lightMatrix;
    void (*processFunc)();
    void (*collideFunc)();
    void (*additionalCollideFunc)();
    void *additionalDrawFunc;
    unsigned long (*queryFunc)();
    void (*messageFunc)();
    struct _Position shadowPosition;
    short currentModel;
    struct _TFace *waterFace;
    struct _TFace *oldWaterFace;
    struct _Terrain *waterFaceTerrain;
    struct _PlaneConstants halvePlane;
    struct _SVector splitPoint;
    struct _Instance *LinkParent;
    struct _Instance *LinkChild;
    struct _Instance *LinkSibling;
    long ParentLinkNode;
    void *InstanceState;
    char introName[16];
    void *extraData;
    short constrictAngle;
    short petrifyValue;
    long xVel;
    long yVel;
    long zVel;
    long xAccl;
    long yAccl;
    long zAccl;
    long maxXVel;
    long maxYVel;
    long maxZVel;
    long currentMainState;
    long currentSubState;
    long work0;
    long work1;
    long work2;
    long work3;
    long work4;
    long work5;
    long work6;
    long work7;
    long work8;
    long work9;
    struct _G2Anim_Type anim;
    enum _G2Bool_Enum (*rebuildCallback)();
    short splineFlags;
    short targetFrame;
    short clipBeg;
    short clipEnd;
    struct EventAliasCommandStruct aliasCommand;
    long light_color;
    struct CVECTOR *perVertexColor;
};

struct _GameTrackerASMData_Type
{
    long drawBackFaces;
    long dispPage;
    short MorphTime;
    short MorphType;
    struct LightInstance lightInstances[1];
};

struct _GameData_Type
{
    struct _GameTrackerASMData_Type asmData;
};

struct NodeType
{
    struct NodeType *prev;
    struct NodeType *next;
};

struct TextureFT3
{
    unsigned char u0;
    unsigned char v0;
    unsigned short clut;
    unsigned char u1;
    unsigned char v1;
    unsigned short tpage;
    unsigned char u2;
    unsigned char v2;
    unsigned short attr;
};

struct TextureMT3
{
    unsigned char u0;
    unsigned char v0;
    unsigned short clut;
    unsigned char u1;
    unsigned char v1;
    unsigned short tpage;
    unsigned char u2;
    unsigned char v2;
    char pad1;
    char sortPush;
    long color;
};

struct AniTexInfo
{
    struct TextureMT3 *texture;
    long numFrames;
    long speed;
};

struct AniTex
{
    long numAniTextues;
    struct AniTexInfo aniTexInfo;
};

struct DrMoveAniTexSrcInfo
{
    short pixSrcX;
    short pixSrcY;
    short clutSrcX;
    short clutSrcY;
};

struct DrMoveAniTexDestInfo
{
    short pixDstX;
    short pixDstY;
    short pixW;
    short pixH;
    short clutDstX;
    short clutDstY;
    short clutW;
    short clutH;
    short pixCurrentX;
    short pixCurrentY;
    short clutCurrentX;
    short clutCurrentY;
    long numFrames;
    long speed;
    struct DrMoveAniTexSrcInfo frame;
};

struct DrMoveAniTex
{
    long numAniTextues;
    struct DrMoveAniTexDestInfo *aniTexInfo;
};

struct MemHeader
{
    unsigned short magicNumber;
    unsigned char memStatus;
    unsigned char memType;
    unsigned long memSize;
};

enum _G2Bool_Enum
{
    G2FALSE = 0,
};

struct _G2SVector3_Type
{
    short x;
    short y;
    short z;
};

struct _G2LVector3_Type
{
    long x;
    long y;
    long z;
};

struct _G2Matrix_Type
{
    short rotScale[3][3];
    short scaleFlag;
    struct _G2LVector3_Type trans;
};

struct _G2Quat_Type
{
    short x;
    short y;
    short z;
    short w;
};

struct _G2AnimQuatInfo_Type
{
    struct _G2Quat_Type srcQuat;
    struct _G2Quat_Type destQuat;
    struct _G2SVector3_Type srcScale;
    struct _G2SVector3_Type destScale;
    struct _G2SVector3_Type srcTrans;
    struct _G2SVector3_Type destTrans;
};

struct _G2AnimAlphaTable_Type
{
    unsigned short size;
    long data[0];
};

struct _G2AnimInterpStateBlock_Type
{
    struct _G2AnimInterpStateBlock_Type *next;
    struct _G2AnimQuatInfo_Type quatInfo[4];
};

struct _G2AnimInterpInfo_Type
{
    short duration;
    short targetTime;
    struct _G2AnimAlphaTable_Type *alphaTable;
    struct _G2AnimInterpStateBlock_Type *stateBlockList;
};

struct _G2AnimChanStatus_Type
{
    short keyData;
    short index;
};

struct _G2AnimChanStatusBlock_Type
{
    struct _G2AnimChanStatusBlock_Type *next;
    struct _G2AnimChanStatus_Type chunks[8];
};

struct _G2AnimFxHeader_Type
{
    unsigned char sizeAndSection;
    char type;
    unsigned short keyframeID;
};

struct _G2AnimKeylist_Type
{
    unsigned char sectionCount;
    unsigned char s0TailTime;
    unsigned char s1TailTime;
    unsigned char s2TailTime;
    unsigned short keyCount;
    short timePerKey;
    unsigned short pad00;
    short pad01;
    unsigned short pad10;
    short pad11;
    struct _G2AnimFxHeader_Type *fxList;
    unsigned short(*sectionData[0]);
};

union PLAYER_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

struct _G2AnimSection_Type
{
    unsigned char flags;
    unsigned char sectionID;
    unsigned char firstSeg;
    unsigned char segCount;
    short elapsedTime;
    short storedTime;
    short loopStartTime;
    short loopEndTime;
    short *swAlarmTable;
    long speedAdjustment;
    unsigned short keylistID;
    unsigned long alarmFlags;
    long (*callback)();
    void *callbackData;
    struct _G2AnimKeylist_Type *keylist;
    struct _G2AnimChanStatusBlock_Type *chanStatusBlockList;
    struct _G2AnimInterpInfo_Type *interpInfo;
};

struct _G2Anim_Type
{
    unsigned char sectionCount;
    unsigned char masterSection;
    unsigned short controllerList;
    unsigned short disabledControllerList;
    unsigned short pad;
    struct _G2SVector3_Type rootTrans;
    unsigned short flags;
    struct _Model *modelData;
    struct _G2Matrix_Type *segMatrices;
    unsigned long disabledBits[3];
    struct _G2AnimSection_Type section[3];
};

struct _Model
{
    long numVertices;
    struct _MVertex *vertexList;
    long numNormals;
    struct _SVectorNoPad *normalList;
    long numFaces;
    struct _MFace *faceList;
    long numSegments;
    struct _Segment *segmentList;
    struct AniTex *aniTextures;
    short maxRad;
    short pad;
    long maxRadSq;
    struct MultiSpline *multiSpline;
    struct TextureMT3 *startTextures;
    struct TextureMT3 *endTextures;
};

struct _SVector
{
    short x;
    short y;
    short z;
    short pad;
};

struct _SVectorNoPad
{
    short x;
    short y;
    short z;
};

struct _Position
{
    short x;
    short y;
    short z;
};

struct _Rotation
{
    short x;
    short y;
    short z;
    short pad;
};

struct _Normal
{
    short x;
    short y;
    short z;
    short pad;
};

struct _PlaneConstants
{
    short a;
    short b;
    short c;
    short flags;
    long d;
};

struct _Vertex
{
    short x;
    short y;
    short z;
};

struct _Face
{
    unsigned short v0;
    unsigned short v1;
    unsigned short v2;
};

struct _MVertex
{
    struct _Vertex vertex;
    unsigned short normal;
};

struct _MFace
{
    struct _Face face;
    unsigned char normal;
    unsigned char flags;
    long color;
};

struct _RGBAColor
{
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char a;
};

union PLAYER_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct _PVertex
{
    short x;
    short y;
    long otz;
};

struct _VertexPool
{
    struct _PVertex vertex[528];
    struct CVECTOR color[528];
};

struct _PrimPool
{
    long numPrims;
    unsigned long *nextPrim;
    unsigned long *lastPrim;
    unsigned long prim[24000];
};

struct _Sphere
{
    struct _Position position;
    unsigned short radius;
    unsigned long radiusSquared;
};

struct _Sphere_noSq
{
    struct _Position position;
    unsigned short radius;
};

struct _CameraKey
{
    short x;
    short y;
    short z;
    short id;
    short rx;
    short ry;
    short rz;
    short flags;
    short tx;
    short ty;
    short tz;
    short pad;
};

struct Object
{
    long oflags;
    short id;
    short sfxFileHandle;
    short numModels;
    short numAnims;
    struct _Model **modelList;
    struct _G2AnimKeylist_Type **animList;
    short introDist;
    short vvIntroDist;
    short removeDist;
    short vvRemoveDist;
    void *data;
    char *script;
    char *name;
    unsigned char *soundData;
    long oflags2;
    short sectionA;
    short sectionB;
    short sectionC;
    short numberOfEffects;
    struct ObjectEffect *effectList;
    unsigned long *relocList;
    void *relocModule;
    struct VramSize vramSize;
};

struct _BVertex
{
    short x;
    short y;
    short z;
    short pad;
};

struct _BFace
{
    short v0;
    short v1;
    short v2;
    short pad;
    struct TextureFT3 *texture;
};

struct _BGObject
{
    short flags;
    short numFaces;
    struct _BVertex *vertexList;
    struct _BFace *faceList;
    short x;
    short y;
    short z;
    short radius;
    long numVertices;
};

struct Signal
{
    long id;
    union {
        struct
        {
            union {
                long l;
                short s[2];
                char c[4];
            } size;
        } misc;
        struct _CameraKey *cameraKey;
        struct
        {
            short x;
            short y;
            short z;
            short zrot;
            struct _SVector offset;
        } teleport;
        struct
        {
            long index;
            long value;
        } cameraValue;
        struct
        {
            long index;
            long value;
        } miscValue;
        struct
        {
            long index;
            long value;
        } logicValue;
        long timer;
        long times;
        long lightGroup;
        long farPlane;
        long cameraAdjust;
        long cameraMode;
        long cameraLock;
        long cameraUnlock;
        long cameraSmooth;
        long cameraTimer;
        struct
        {
            long time;
            long scale;
        } cameraShake;
        long cameraSave;
        long cameraRestore;
        struct _BGObject *bgObject;
        long value[2];
        struct
        {
            long action;
            long value[2];
        } sound;
        void *intro;
        long deathZ;
        struct
        {
            void *intro;
            void *data;
        } dsignal;
        void *mirror;
        long fogNear;
        long fogFar;
        struct
        {
            void *intro;
            long frame;
        } gotoFrame;
        struct
        {
            void *intro;
            long model;
        } changeModel;
        void *vmObject;
        struct
        {
            unsigned char target;
            unsigned char source1;
            unsigned char source2;
            unsigned char pad;
            struct Signal *gotoLabel;
        } logic;
        void *callSignal;
        struct _SVector offset;
        struct Signal *gotoLabel;
        struct Signal *gosubLabel;
        struct
        {
            long timer;
            long action;
        } control;
        struct
        {
            short index;
            short z;
            struct MultiSignal *upSignal;
            struct MultiSignal *downSignal;
        } zSignal;
        struct
        {
            long currentnum;
            long streamID;
            char toname[16];
        } StreamLevel;
        struct
        {
            char num;
            char vel;
            short misc;
            char flags;
            char timeToLive;
            short dummy2;
            struct Object *object;
        } shards;
        struct
        {
            long index;
            void *intro;
        } cameraSpline;
        struct
        {
            short type;
            short time;
        } screenWipe;
        long voiceSitId;
        struct
        {
            long time;
            void *intro;
        } introFX;
        struct
        {
            void *intro;
            struct Signal *gotoLabel;
        } introActive;
        struct
        {
            char world[9];
            char level[9];
        } levelChange;
        long blendStart;
        struct
        {
            struct Signal *signal;
            long times;
        } setTimes;
        struct
        {
            unsigned char r;
            unsigned char g;
            unsigned char b;
            unsigned char pad;
        } color;
        struct
        {
            short x;
            short y;
            short time;
            short index;
            char *text;
        } print;
        long slideAngle;
    } data;
};

struct _MultiSignal
{
    long numSignals;
    short signalNum;
    short flags;
    struct Signal signalList[32];
};

struct _HFace
{
    short v0;
    short v1;
    short v2;
    unsigned char attr;
    char pad;
    unsigned short normal;
    unsigned short n0;
};

struct _HSphere
{
    long attr;
    unsigned char id;
    unsigned char rank;
    short pad;
    struct _Position position;
    unsigned short radius;
    unsigned long radiusSquared;
};

struct _HBox
{
    short flags;
    unsigned char id;
    unsigned char rank;
    short minX;
    short minY;
    short minZ;
    short maxX;
    short maxY;
    short maxZ;
    short refMinX;
    short refMinY;
    short refMinZ;
    short refMaxX;
    short refMaxY;
    short refMaxZ;
};

struct _HPrim
{
    unsigned char hpFlags;
    unsigned char withFlags;
    unsigned char type;
    unsigned char segment;
    union {
        struct _HSphere *hsphere;
        struct _HBox *hbox;
        struct _HFace *hface;
    } data;
};

struct _HModel
{
    struct _HPrim *hPrimList;
    long numHPrims;
};

struct _HInfo
{
    long numHFaces;
    struct _HFace *hfaceList;
    long numHSpheres;
    struct _HSphere *hsphereList;
    long numHBoxes;
    struct _HBox *hboxList;
};

struct _Segment
{
    long flags;
    short firstTri;
    short lastTri;
    short firstVertex;
    short lastVertex;
    short px;
    short py;
    short pz;
    short parent;
    struct _HInfo *hInfo;
};

struct MultiSpline
{
    struct Spline *positional;
    struct RSpline *rotational;
    struct Spline *scaling;
    struct Spline *color;
    struct SplineDef curPositional;
    struct SplineDef curRotational;
    struct SplineDef curScaling;
    struct SplineDef curColor;
    struct MATRIX curRotMatrix;
};

struct SoundInstance
{
    unsigned char channel;
    unsigned char state;
    unsigned char delay;
};

struct ObjectEffect
{
    unsigned char effectNumber;
    unsigned char modifierList[3];
};

struct VramSize
{
    short x;
    short y;
    short w;
    short h;
};

struct _TFace
{
    struct _Face face;
    unsigned char attr;
    char sortPush;
    unsigned short normal;
    unsigned short textoff;
};

struct _TVertex
{
    struct _Vertex vertex;
    unsigned short rgb15;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
};

struct EventAliasCommandStruct
{
    struct _Instance *hostInstance;
    short newanim;
    short newframe;
    short interpframes;
    short speed;
};

struct Intro
{
    char name[16];
    long intronum;
    long UniqueID;
    struct _Rotation rotation;
    struct _Position position;
    short maxRad;
    long maxRadSq;
    long flags;
    void *data;
    struct _Instance *instance;
    struct MultiSpline *multiSpline;
    void *dsignal;
    short specturalLightGroup;
    short meshColor;
    struct _Position spectralPosition;
    short spad;
};

struct _Terrain
{
    short UnitChangeFlags;
    short spad;
    long lpad2;
    long numIntros;
    struct Intro *introList;
    long numVertices;
    long numFaces;
    long numNormals;
    struct _TVertex *vertexList;
    struct _TFace *faceList;
    struct _Normal *normalList;
    struct DrMoveAniTex *aniList;
    long pad;
    void *StreamUnits;
    struct TextureFT3 *StartTextureList;
    struct TextureFT3 *EndTextureList;
    struct _MorphVertex *MorphDiffList;
    struct _MorphColor *MorphColorList;
    long numBSPTrees;
    struct BSPTree *BSPTreeArray;
    short *morphNormalIdx;
    struct _MultiSignal *signals;
};

struct _InstancePool
{
    long nextInstanceID;
    long numFreeInstances;
    struct _Instance instance[60];
    struct _Instance *first_free;
};

struct _InstanceList
{
    long numInstances;
    struct _Instance *first;
    struct _InstancePool *pool;
    struct NodeType group[32];
};

struct _ObjectTracker
{
    char name[16];
    struct Object *object;
    short objectStatus;
    short numInUse;
    void *vramBlock;
    char numObjectsUsing;
    char objectsUsing[7];
};

struct _BoundingBox
{
    short minX;
    short minY;
    short minZ;
    short maxX;
    short maxY;
    short maxZ;
};

struct CDLight
{
    struct NodeType node;
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char flags;
    struct _Sphere sphere;
};

struct _BSPNode
{
    struct _Sphere_noSq sphere;
    short a;
    short b;
    short c;
    short flags;
    long d;
    void *front;
    void *back;
    struct _Sphere_noSq spectralSphere;
    short front_spectral_error;
    short back_spectral_error;
    short front_material_error;
    short back_material_error;
};

struct _BSPLeaf
{
    struct _Sphere_noSq sphere;
    struct _TFace *faceList;
    short numFaces;
    short flags;
    struct _BoundingBox box;
    struct _BoundingBox spectralBox;
    struct _Sphere_noSq spectralSphere;
};

struct _MorphVertex
{
    short x;
    short y;
    short z;
    short vindex;
    short hx;
    short hy;
    short hz;
};

struct _MorphColor
{
    short morphColor15;
};

struct Level
{
    struct _Terrain *terrain;
    struct LightList *lightList;
    long numVMObjects;
    struct _VMObject *vmobjectList;
    long numSpotLights;
    struct SpotLight *spotLightList;
    long numPointLights;
    struct PointLight *pointLightList;
    long numSpotSpecturalLights;
    struct SpotLight *spotSpecturalLightList;
    long numPointSpecturalLights;
    struct PointLight *pointSpecturalLightList;
    long numBGObjects;
    struct _BGObject *bgObjectList;
    long waterZLevel;
    unsigned char backColorR;
    unsigned char backColorG;
    unsigned char backColorB;
    unsigned char cpad1;
    unsigned char specturalColorR;
    unsigned char specturalColorG;
    unsigned char specturalColorB;
    unsigned char cpad2;
    unsigned short fogFar;
    unsigned short fogNear;
    unsigned short spectralFogFar;
    unsigned short spectralFogNear;
    unsigned short waterFogFar;
    unsigned short waterFogNear;
    long depthQBlendStart;
    struct LightList *spectrallightList;
    long numCameras;
    void *cameraList;
    long bspPlaneError;
    long numVGroups;
    struct _VGroup *vGroupList;
    long deathZ;
    long flags;
    struct _MultiSignal *startSignal;
    long numIntros;
    struct Intro *introList;
    struct DrMoveAniTex *bgAniList;
    long numHotSpots;
    struct _HotSpot *hotSpotList;
    void *objectNameList;
    long depthQFogStart;
    long morphLastStep;
    char *worldName;
    struct VramSize vramSize;
    unsigned short holdFogFar;
    unsigned short holdFogNear;
    long numberEnemyUnits;
    char **enemyUnitsNames;
    long **timesSignalList;
    struct _MultiSignal *spectralSignal;
    struct _MultiSignal *materialSignal;
    struct _MultiSignal *startUnitLoadedSignal;
    struct _MultiSignal *startUnitMainSignal;
    struct _MultiSignal *startGoingIntoWaterSignal;
    struct _MultiSignal *startGoingOutOfWaterSignal;
    long unitFlags;
    struct _MultiSignal *SignalListStart;
    struct _MultiSignal *SignalListEnd;
    long numBSPLeaves;
    struct EventPointers *PuzzleInstances;
    long NumberOfPlanMarkers;
    struct _PlanMkr *PlanMarkerList;
    long NumberOfSFXMarkers;
    struct _SFXMkr *SFXMarkerList;
    unsigned long versionNumber;
    char *dynamicMusicName;
    long streamUnitID;
    struct TClassAttr tClassAttr[16];
    short TODLighting[4][3];
    unsigned char TODbackColor[4][3];
    unsigned short TODfogNearFar[4][2];
    short TODRedScale;
    short TODGrnScale;
    short TODBluScale;
    short TODfogNear;
    short TODfogFar;
    short short_pad;
    unsigned char TODbackColorR;
    unsigned char TODbackColorG;
    unsigned char TODbackColorB;
    unsigned char cpad3;
    struct LightGroup *razielLightGroup;
    struct LightGroup *razielSpectralLightGroup;
};

struct _SavedCinematic
{
    struct _Position position;
    struct _Position focusPoint;
    struct _Position base;
    struct _Position targetPos;
    struct _Position targetFocusPoint;
    struct _Position targetBase;
    struct _Rotation baseRot;
    struct _Rotation focusRotation;
    struct _Rotation targetFocusRotation;
    short focusDistance;
    short targetFocusDistance;
    struct _SVector focusPointVel;
    struct _SVector focusPointAccl;
    struct _SVector baseVel;
    struct _SVector baseAccl;
    long maxVel;
    struct MultiSpline *posSpline;
    struct MultiSpline *targetSpline;
    struct Level *level;
};

struct BSPTree
{
    struct _BSPNode *bspRoot;
    struct _BSPLeaf *startLeaves;
    struct _BSPLeaf *endLeaves;
    struct _Position globalOffset;
    short flags;
    struct _Position localOffset;
    short ID;
    long splineID;
    struct _Instance *instanceSpline;
};

struct LightGroup
{
    struct MATRIX lightMatrix;
    struct MATRIX colorMatrix;
};

struct LightList
{
    struct CVECTOR ambient;
    long numLightGroups;
    struct LightGroup *lightGroupList;
};

struct PointLight
{
    struct NodeType node;
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char flags;
    struct _Position position;
    short radius;
    long radiusSquared;
};

struct SpotLight
{
    struct NodeType node;
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char flags;
    struct _Position centroid;
    short radius;
    long radiusSquared;
    struct _Position position;
    struct _Position direction;
    short cosFalloffAngle;
    short attenuationScale;
};

struct LightInfo
{
    long numPointLights;
    struct PointLight pointLightPool[32];
    struct NodeType usedPointLightList;
    struct NodeType freePointLightList;
    struct NodeType activePointLightList;
    long numSpotLights;
    struct SpotLight spotLightPool[8];
    struct NodeType usedSpotLightList;
    struct NodeType freeSpotLightList;
    struct NodeType activeSpotLightList;
    long numSavedColors;
};

struct _VMOffset
{
    short dx;
    short dy;
    short dz;
};

struct _VMColorOffset
{
    char dr;
    char dg;
    char db;
};

struct _VMInterpolated
{
    short tvIdx;
    short startIdx;
    short endIdx;
    short time;
};

struct _VMOffsetTable
{
    long numVMOffsets;
    union {
        struct _VMOffset moveOffsets;
        struct _VMColorOffset colorOffsets;
    } offsets;
};

struct _VMObject
{
    unsigned short flags;
    short bspIdx;
    short materialIdx;
    short spectralIdx;
    short currentIdx;
    short timeScale;
    long timer;
    struct _Position position;
    short radius;
    long radiusSquared;
    long numVMOffsetTables;
    struct _VMOffsetTable **vmoffsetTableList;
    struct _VMOffsetTable *curVMOffsetTable;
    long numVMVertices;
    void *vmvertexList;
    long numVMInterpolated;
    struct _VMInterpolated *vminterpolatedList;
    char *name;
};

struct _VGroup
{
    long id;
    long numVertices;
    struct _TVertex **vertexList;
};

struct _HotSpot
{
    short x;
    short y;
    short z;
    short id;
};

struct _PlanMkr
{
    struct _Position pos;
    short id;
};

struct _SFXMkr
{
    unsigned char *soundData;
    long uniqueID;
    struct SoundInstance sfxTbl[4];
    struct _Position pos;
    short pad;
    long livesInOnePlace;
    long inSpectral;
};

struct TClassAttr
{
    short flags;
    unsigned short sound;
};

struct _ColorType
{
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char code;
};

struct _CameraCore_Type
{
    struct _Position position;
    short pad1;
    struct MATRIX vvNormalWorVecMat[2];
    long vvPlaneConsts[6];
    struct MATRIX *wcTransform;
    long farPlane;
    long projDistance;
    long nearPlane;
    struct MATRIX *wcTransform2;
    struct MATRIX *cwTransform2;
    struct _Normal viewVolumeNormal[5];
    int leftX;
    int rightX;
    int topY;
    int bottomY;
    struct _Rotation rotation;
    short pad2;
    struct _SVector screenScale;
    short pad3;
    struct _Position debugPos;
    short pad4;
    struct _Rotation debugRot;
    short pad5;
    struct _Position nondebugPos;
    short pad6;
};

struct PLAYER_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct SpuVolume
{
    short left;
    short right;
};

struct SpuExtAttr
{
    struct SpuVolume volume;
    long reverb;
    long mix;
};

struct SpuStVoiceAttr
{
    char status;
    char pad1;
    char pad2;
    char pad3;
    long last_size;
    unsigned long buf_addr;
    unsigned long data_addr;
};

struct AadSoundBankHdr
{
    unsigned long bankID;
    unsigned long headerSize;
    int bankVersion;
    int numPrograms;
    int numTones;
    int numWaves;
    int numSequences;
    int numLabels;
    int reverbMode;
    int reverbDepth;
};

struct AadProgramAtr
{
    unsigned short numTones;
    unsigned short firstTone;
    unsigned char volume;
    unsigned char panPosition;
    unsigned short unused;
};

struct AadToneAtr
{
    unsigned char priority;
    unsigned char parentProgram;
    unsigned char volume;
    unsigned char panPosition;
    unsigned char centerNote;
    char centerFine;
    unsigned char minNote;
    unsigned char maxNote;
    unsigned char mode;
    unsigned char pitchBendMax;
    unsigned short adsr1;
    unsigned short adsr2;
    short waveIndex;
};

struct _AadDynSfxFileHdr
{
    unsigned long snfID;
    unsigned short snfVersion;
    unsigned short uniqueID;
    unsigned short handle;
    unsigned short numSfxInFile;
    struct _AadDynSfxFileHdr *prevDynSfxFile;
    struct _AadDynSfxFileHdr *nextDynSfxFile;
};

struct AadDynSfxAttr
{
    unsigned short sfxID;
    unsigned short waveID;
    struct AadToneAtr toneAttr;
    unsigned long waveSize;
};

struct AadTempoCounter
{
    unsigned long currentTick;
    unsigned long currentError;
    unsigned long tickTimeFixed;
    unsigned long errorPerUpdate;
    unsigned short ticksPerUpdate;
    unsigned short ppqn;
    unsigned long quarterNoteTime;
};

struct AadSeqEvent
{
    unsigned long deltaTime;
    unsigned char track;
    unsigned char statusByte;
    char dataByte[6];
};

struct _AadSequenceSlot
{
    struct AadTempoCounter tempo;
    struct AadSeqEvent eventQueue[4][16];
    unsigned char eventIn[16];
    unsigned char eventOut[16];
    unsigned char eventsInQueue[16];
    unsigned char(*sequencePosition[16]);
    unsigned long lastEventExecutedTime[16];
    unsigned char runningStatus[16];
    unsigned char trackFlags[16];
    unsigned char(*loopSequencePosition[4][16]);
    unsigned char loopCurrentNestLevel[16];
    unsigned char loopCounter[4][16];
    struct _AadSequenceSlot *selectedSlotPtr;
    unsigned char selectedSlotNum;
    unsigned char selectedChannel;
    unsigned char sequenceNumberAssigned;
    unsigned char thisSlotNumber;
    unsigned short status;
    unsigned short channelMute;
    unsigned short delayedMuteMode;
    unsigned short delayedMuteCmds;
    unsigned short delayedUnMuteCmds;
    unsigned short unused;
    unsigned short enableSustainUpdate;
    unsigned short ignoreTranspose;
    unsigned char slotFlags;
    unsigned char slotID;
    unsigned char slotVolume;
    unsigned char slotPan;
    int *masterVolPtr;
    int selectedDynamicBank;
    int sequenceAssignedDynamicBank;
    unsigned char currentDynamicBank[16];
    unsigned short pitchWheel[16];
    unsigned char currentProgram[16];
    unsigned char volume[16];
    unsigned char panPosition[16];
    char transpose[16];
};

struct AadSfxCommand
{
    unsigned char statusByte;
    unsigned char dataByte[3];
    unsigned long u_longParam;
    short shortParam;
    unsigned short unused;
};

struct AadSfxSlot
{
    struct AadSfxCommand commandQueue[32];
    unsigned char commandIn;
    unsigned char commandOut;
    unsigned short commandsInQueue;
    unsigned short handleCounter;
    unsigned char sfxVolume;
    unsigned char sfxPan;
};

struct AadSynthVoice
{
    unsigned long voiceMask;
    unsigned long handle;
    unsigned char voiceID;
    unsigned char priority;
    unsigned char note;
    unsigned char unused;
    unsigned char program;
    unsigned char baseProg;
    unsigned char volume;
    unsigned char updateVol;
    unsigned char pan;
    unsigned char voiceNum;
    unsigned short flags;
    struct AadToneAtr *toneAtr;
    struct AadProgramAtr *progAtr;
};

struct AadDynamicLoadRequest
{
    int type;
    int handle;
    long directoryID;
    long flags;
    char fileName[12];
};

struct AadDynamicBankLoadInfo
{
    char sndFileName[32];
    char smpFileName[32];
    int dynamicBankIndex;
    int loadOption;
    void (*userCallbackProc)();
    unsigned long sramDataSize;
    unsigned long nextSramAddr;
    unsigned long flags;
};

struct AadDynamicSfxLoadInfo
{
    char snfFileName[40];
    char smfFileName[40];
    int fileHandle;
    long directoryID;
    long loadFlags;
    long flags;
    int smfLoadingState;
    unsigned long bytesToLoad;
    int numSfxToLoad;
    int error;
    unsigned long waveTransferAddr;
    unsigned long totalSramUsed;
    struct _AadDynSfxFileHdr *snfFile;
    struct AadDynSfxAttr attr;
};

struct AadNewSramBlockDesc
{
    unsigned short waveID;
    unsigned short address;
    unsigned short size;
    unsigned char prevIndex;
    unsigned char nextIndex;
};

struct AadLoadedSfxToneAttr
{
    unsigned short referenceCount;
    unsigned short waveID;
    struct AadToneAtr toneAttr;
};

struct AadLoadedSfxWaveAttr
{
    unsigned short referenceCount;
    unsigned char unused;
    unsigned char sramHandle;
};

struct AadSramDefragInfo
{
    int status;
    unsigned char *fragBuffer;
    int masterListEntry;
    int waveID;
    unsigned long destSramAddr;
    unsigned long srcSramAddr;
    unsigned long moveSize;
    unsigned long readSize;
};

struct AadVolFader
{
    int volumeStep;
    int targetVolume;
    void (*fadeCompleteCallback)();
};

struct gSoundData
{
    unsigned long gMasterVol;
    unsigned long gMusicVol;
    unsigned long gSfxVol;
    unsigned long gVoiceVol;
    char gSfxOn;
    char gMusicOn;
    char gVoiceOn;
    char soundsLoaded;
};

struct GameTracker
{
    struct _GameData_Type gameData;
    struct menu_t *menu;
    struct memcard_t *memcard;
    struct Level *level;
    struct _Instance *playerInstance;
    long drawPage;
    struct _InstanceList *instanceList;
    struct _InstancePool *instancePool;
    struct _VertexPool *vertexPool;
    struct _PrimPool *primPool;
    struct _ObjectTracker *GlobalObjects;
    long controlCommand[2][5];
    long controlData[2][5];
    long overrideData[2][5];
    long debugFlags;
    long debugFlags2;
    struct CVECTOR wipeColor;
    short wipeTime;
    short maxWipeTime;
    short wipeType;
    short numGSignals;
    void(*gSignal[16]);
    struct LightInfo *lightInfo;
    void *reqDisp;
    long *drawTimerReturn;
    long usecsStartDraw;
    void *disp;
    unsigned long displayFrameCount;
    unsigned long frameCount;
    unsigned long fps30Count;
    unsigned long vblFrames;
    unsigned long vblCount;
    long numMatrices;
    long gameFlags;
    long streamFlags;
    void *drawNonAnimatedSegmentFunc;
    void *drawAnimatedModelFunc;
    void *drawDisplayPolytopeListFunc;
    void *drawBgFunc;
    struct Level *mainDrawUnit;
    char baseAreaName[16];
    short levelDone;
    short levelChange;
    short hideBG;
    short gameMode;
    long currentHotSpot;
    long StreamUnitID;
    short SwitchToNewStreamUnit;
    short SwitchToNewWarpIndex;
    char S_baseAreaName[16];
    short toSignal;
    short fromSignal;
    char LastSignal;
    short StreamNormalA;
    short StreamNormalB;
    short StreamNormalC;
    long StreamNormalD;
    long moveRazielToStreamID;
    struct _ColorType animObjLine;
    struct _ColorType animObjShade;
    long introFXTime;
    long maxIntroFXTime;
    struct gSoundData sound;
    short controllerMode;
    unsigned char plan_collide_override;
    unsigned char cheatMode;
    char currentLvl;
    char lastLvl;
    struct Object *introFX;
    struct Intro *introFXIntro;
    unsigned long **drawOT;
    unsigned long **dispOT;
    struct P_TAG *savedOTStart;
    struct P_TAG *savedOTEnd;
    long introWaitTime;
    long mirrorZPush;
    long defVVRemoveDist;
    long defRemoveDist;
    struct _Position forcedStartPosition;
    short hudCollDisplay;
    long primMemUsed;
    char demoMode;
    char setDemoMode;
    char demoIndex;
    char demoEnabled;
    long cheatTimerCount;
    long playerCheatFlags;
    long savedPlayerCameraMode;
    long debugDrawFlags;
    void *planningPool;
    void *enemyPlanPool;
    unsigned char block_collide_override;
    unsigned char raziel_collide_override;
    short timeOfDay;
    long decoupleGame;
    long multGameTime;
    short spectral_fadeValue;
    short material_fadeValue;
    unsigned long drawTime;
    unsigned long currentTime;
    unsigned long currentMaterialTime;
    unsigned long currentSpectralTime;
    unsigned long currentTimeOfDayTime;
    unsigned long lastLoopTime;
    unsigned long timeMult;
    unsigned long globalTimeMult;
    unsigned long spectralTimeMult;
    unsigned long materialTimeMult;
    unsigned long currentTicks;
    unsigned long totalTime;
    unsigned long idleTime;
    long visibleInstances;
    int gameFramePassed;
    unsigned long timeSinceLastGameFrame;
    long frameRateLock;
    short frameRate24fps;
};

struct Spline
{
    struct SplineKey *key;
    short numkeys;
    unsigned char type;
    unsigned char flags;
};

struct vecS
{
    short x;
    short y;
    short z;
};

struct vecL
{
    long x;
    long y;
    long z;
};

struct SplineRotKey
{
    short count;
    struct _G2Quat_Type q;
};

struct RSpline
{
    struct SplineRotKey *key;
    short numkeys;
    unsigned char type;
    unsigned char flags;
};

struct SplineKey
{
    short count;
    struct vecS point;
    struct vecL dd;
    struct vecL ds;
};

struct SplineDef
{
    short currkey;
    unsigned short denomFlag;
    long fracCurr;
};

struct _HVertex
{
    short x;
    short y;
    short z;
    short normal;
    long pad;
};

struct _MONAPI_Regenerator
{
    unsigned long regenTime;
    short introUniqueID;
    short streamUnitID;
};

enum DEBUG_LINE_TYPE
{
    DEBUG_LINE_TYPE_BIT = 0,
    DEBUG_LINE_TYPE_LONG = 1,
    DEBUG_LINE_TYPE_ACTION = 2,
    DEBUG_LINE_TYPE_ACTION_WITH_LINE = 3,
    DEBUG_LINE_TYPE_MENU = 4,
    DEBUG_LINE_TYPE_ENDLIST = 5,
    DEBUG_LINE_TYPE_FORMAT = 6,
    DEBUG_LINE_TYPE_INFO = 7,
};

struct __Event
{
    int ID;
    int Data;
};

struct __MessageQueue
{
    int Head;
    int Tail;
    struct __Event Queue[16];
};

struct __State
{
    void (*Process)();
    struct __MessageQueue Event;
    struct __MessageQueue Defer;
    int Data1;
    int Data2;
};

union PLAYER_203fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

typedef struct MATRIX MATRIX;

typedef struct VECTOR VECTOR;

typedef struct SVECTOR SVECTOR;

typedef struct CVECTOR CVECTOR;

typedef struct DVECTOR DVECTOR;

typedef struct RVECTOR RVECTOR;

typedef struct CRVECTOR3 CRVECTOR3;

typedef struct CRVECTOR4 CRVECTOR4;

typedef struct RECT RECT;

typedef struct DR_ENV DR_ENV;

typedef struct P_TAG P_TAG;

typedef struct CdlLOC CdlLOC;

typedef struct LightInstance LightInstance;

typedef struct _GameTrackerASMData_Type GameTrackerASMData;

typedef struct _GameData_Type GameData;

typedef struct NodeType NodeType;

typedef struct TextureFT3 TextureFT3;

typedef struct TextureMT3 TextureMT3;

typedef struct AniTexInfo AniTexInfo;

typedef struct AniTex AniTex;

typedef struct DrMoveAniTexSrcInfo DrMoveAniTexSrcInfo;

typedef struct DrMoveAniTexDestInfo DrMoveAniTexDestInfo;

typedef struct DrMoveAniTex DrMoveAniTex;

typedef struct MemHeader MemHeader;

typedef enum _G2Bool_Enum G2Bool;

typedef struct _G2SVector3_Type G2SVector3;

typedef struct _G2LVector3_Type G2LVector3;

typedef struct _G2Matrix_Type G2Matrix;

typedef struct _G2Quat_Type G2Quat;

typedef struct _G2AnimQuatInfo_Type G2AnimQuatInfo;

typedef struct _G2AnimAlphaTable_Type G2AnimAlphaTable;

typedef struct _G2AnimInterpStateBlock_Type G2AnimInterpStateBlock;

typedef struct _G2AnimInterpInfo_Type G2AnimInterpInfo;

typedef struct _G2AnimChanStatus_Type G2AnimChanStatus;

typedef struct _G2AnimChanStatusBlock_Type G2AnimChanStatusBlock;

typedef struct _G2AnimFxHeader_Type G2AnimFxHeader;

typedef struct _G2AnimKeylist_Type G2AnimKeylist;

typedef struct _G2AnimSection_Type G2AnimSection;

typedef struct _G2Anim_Type G2Anim;

typedef struct _SVector SVector;

typedef struct _SVectorNoPad SVectorNoPad;

typedef struct MATRIX Transform;

typedef struct _Position Position;

typedef struct _Rotation Rotation;

typedef struct _Normal Normal;

typedef struct _PlaneConstants PlaneConstants;

typedef struct _Vertex Vertex;

typedef struct _Face Face;

typedef struct _MVertex MVertex;

typedef struct _MFace MFace;

typedef struct _RGBAColor RGBAColor;

typedef struct _PVertex PVertex;

typedef struct _VertexPool VertexPool;

typedef struct _PrimPool PrimPool;

typedef struct _Sphere Sphere;

typedef struct _Sphere_noSq Sphere_noSq;

typedef struct _CameraKey CameraKey;

typedef struct Object Object;

typedef struct _BVertex BVertex;

typedef struct _BFace BFace;

typedef struct _BGObject BGObject;

typedef struct Signal Signal;

typedef struct _MultiSignal MultiSignal;

typedef struct _HFace HFace;

typedef struct _HSphere HSphere;

typedef struct _HBox HBox;

typedef struct _HPrim HPrim;

typedef struct _HModel HModel;

typedef struct _HInfo HInfo;

typedef struct _Segment Segment;

typedef struct MultiSpline MultiSpline;

typedef struct _Model Model;

typedef struct SoundInstance SoundInstance;

typedef struct ObjectEffect ObjectEffect;

typedef struct ObjectEffect AnimEffectData;

typedef struct VramSize VramSize;

typedef struct _TFace TFace;

typedef struct _TVertex TVertex;

typedef struct EventAliasCommandStruct EventAliasCommandStruct;

typedef struct _Instance Instance;

typedef struct _InstancePool InstancePool;

typedef struct _InstanceList InstanceList;

typedef struct _ObjectTracker ObjectTracker;

typedef struct Intro Intro;

typedef struct _BoundingBox BoundingBox;

typedef struct CDLight CDLight;

typedef struct _BSPNode BSPNode;

typedef struct _BSPNode SBSPNode;

typedef struct _BSPLeaf BSPLeaf;

typedef struct _MorphVertex MorphVertex;

typedef struct _MorphColor MorphColor;

typedef struct _SavedCinematic SavedCinematic;

typedef struct BSPTree BSPTree;

typedef struct _Terrain Terrain;

typedef struct LightGroup LightGroup;

typedef struct LightList LightList;

typedef struct PointLight PointLight;

typedef struct SpotLight SpotLight;

typedef struct LightInfo LightInfo;

typedef struct _VMOffset VMMoveOffset;

typedef struct _VMColorOffset VMColorOffset;

typedef struct _VMInterpolated VMInterpolated;

typedef struct _VMOffsetTable VMOffsetTable;

typedef struct _VMObject VMObject;

typedef struct _VGroup VGroup;

typedef struct _HotSpot HotSpot;

typedef struct _PlanMkr PlanMkr;

typedef struct _SFXMkr SFXMkr;

typedef struct TClassAttr TClassAttr;

typedef struct Level Level;

typedef struct _ColorType ColorType;

typedef struct _CameraCore_Type CameraCore;

typedef struct SpuVolume SpuVolume;

typedef struct SpuExtAttr SpuExtAttr;

typedef struct SpuStVoiceAttr SpuStVoiceAttr;

typedef struct AadSoundBankHdr AadSoundBankHdr;

typedef struct AadProgramAtr AadProgramAtr;

typedef struct AadToneAtr AadToneAtr;

typedef struct _AadDynSfxFileHdr AadDynSfxSnfFileHdr;

typedef struct AadDynSfxAttr AadDynSfxAttr;

typedef struct AadTempoCounter AadTempoCounter;

typedef struct AadSeqEvent AadSeqEvent;

typedef struct _AadSequenceSlot AadSequenceSlot;

typedef struct AadSfxCommand AadSfxCommand;

typedef struct AadSfxSlot AadSfxSlot;

typedef struct AadSynthVoice AadSynthVoice;

typedef struct AadDynamicLoadRequest AadDynamicLoadRequest;

typedef struct AadDynamicBankLoadInfo AadDynamicBankLoadInfo;

typedef struct AadDynamicSfxLoadInfo AadDynamicSfxLoadInfo;

typedef struct AadNewSramBlockDesc AadNewSramBlockDesc;

typedef struct AadLoadedSfxToneAttr AadLoadedSfxToneAttr;

typedef struct AadLoadedSfxWaveAttr AadLoadedSfxWaveAttr;

typedef struct AadSramDefragInfo AadSramDefragInfo;

typedef struct AadVolFader AadVolFader;

typedef struct gSoundData gSoundData;

typedef struct GameTracker GameTracker;

typedef struct Spline Spline;

typedef struct vecS vecS;

typedef struct vecL vecL;

typedef struct SplineRotKey SplineRotKey;

typedef struct RSpline RSpline;

typedef struct SplineKey SplineKey;

typedef struct SplineDef SplineDef;

typedef struct _HVertex HVertex;

typedef struct _MONAPI_Regenerator MONAPI_Regenerator;

typedef enum DEBUG_LINE_TYPE DEBUG_LINE_TYPE;

typedef struct __Event Message;

typedef struct __MessageQueue MessageQueue;

typedef struct __State State;

typedef unsigned char u_char;

typedef unsigned short u_short;

typedef unsigned int u_int;

typedef unsigned long u_long;

typedef unsigned short u_short;

typedef struct _physadr *physadr;

typedef long daddr_t;

typedef char *caddr_t;

typedef long *qaddr_t;

typedef unsigned long ino_t;

typedef long swblk_t;

typedef unsigned int size_t;

typedef long time_t;

typedef short dev_t;

typedef long off_t;

typedef unsigned short uid_t;

typedef unsigned short gid_t;

typedef unsigned long wchar_t;

typedef void (*CdlCB)();

typedef void *va_list;

typedef unsigned char u_char;

typedef unsigned char u_byte;

typedef unsigned char ubyte;

typedef unsigned long u_long;

typedef char int8;

typedef short int16;

typedef long int32;

typedef long int64;

typedef unsigned char u_int8;

typedef unsigned short u_int16;

typedef unsigned long u_int32;

typedef unsigned long u_int64;

typedef char BYTE;

typedef unsigned char UBYTE;

typedef unsigned long u_long;

typedef unsigned short u_short;

typedef unsigned long bool;

typedef long ListOrderFunc();

typedef unsigned long *OTag;

typedef unsigned char G2u_int8;

typedef unsigned short G2u_int16;

typedef unsigned long G2u_int32;

typedef char G2Int8;

typedef short G2Int16;

typedef long G2Int32;

typedef long G2fp4dot12;

typedef long G2fp8dot24;

typedef short G2TimerAtomicUnit;

typedef int G2AnimKeyframeNumber;

typedef int G2AnimKeylistID;

typedef int G2AnimSectionID;

typedef unsigned char G2AnimSegmentID;

typedef unsigned char G2AnimControllerType;

typedef unsigned short G2AnimChanMask;

typedef long (*G2AnimCallback)();

typedef unsigned long (*G2AnimControllerFn)();

typedef short G2AnimChanKeyData;

typedef short G2AnimChanFinalValue;

typedef enum _G2Bool_Enum (*G2InstanceRebuildCallback)();

typedef long lfixed;

typedef short sfixed;

typedef short MatEntry;

typedef short Fraction;

typedef long VectorCoord;

typedef short SVectorCoord;

typedef short NormalCoord;

typedef short TrigVal;

typedef short Angle;

typedef short Matrix[3][3];

typedef void InitFunc();

typedef void ProcessFunc();

typedef void CollideFunc();

typedef unsigned long QueryFunc();

typedef void MessageFunc();

typedef void RelocateTuneFunc();

typedef void (*SpuIRQCallbackProc)();

typedef void (*SpuTransferCallbackProc)();

typedef void (*SpuStCallbackProc)();

typedef int AADRESULT;

typedef int AadFileHandle;

typedef unsigned long AadChannelList;

typedef void (*AadFadeCompleteCallbackProc)();

typedef void (*AadLockVoiceCallbackProc)();

typedef void (*AadController11CallbackProc)();

typedef void (*AadEndSequenceCallbackProc)();

typedef void (*AadLoadDynamicSoundBankReturnProc)();

typedef void (*AadLoadDynamicSfxReturnProc)();

typedef void (**AadMemoryMallocProc)();

typedef void (*AadMemoryFreeProc)();

typedef void (*AadNonBlockLoadReturnProc)();

typedef void (*AadNonBlockLoadProc)();

typedef void (*AadNonBlockBufferedLoadReturnProc)();

typedef void (*AadNonBlockBufferedLoadProc)();

typedef unsigned char AadNewSramBlockHandle;

typedef unsigned long AadSfxHandle;

typedef unsigned int AadSfxToneID;

typedef void (*EndSequenceCallbackProc)();

typedef void (*Controller11CallbackProc)();

typedef unsigned long *DrawNonAnimatedSegmentFunc();

typedef unsigned long *DrawAnimatedModelFunc();

typedef unsigned long *DrawDisplayPolytopeListFunc();

typedef unsigned long *AdditionalDrawFunc();

typedef void BG_DisplayFunc();

typedef void RelocateInstObFunc();

typedef void (*VoidProc)();

typedef void (*StateHandler)();

struct POLY_F4
{
    unsigned long tag;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    short x1;
    short y1;
    short x2;
    short y2;
    short x3;
    short y3;
};

union DEBUG_117fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

struct _SmallRotation
{
    short x;
    short y;
    short z;
};

union DEBUG_118fake {
    long color;
    struct _RGBAColor rgba;
};

struct EventPointers
{
    long numPuzzles;
    struct Event(*eventInstances[1]);
};

struct Camera
{
    struct _CameraCore_Type core;
    long shake;
    short shakeFrame;
    short shakeScale;
    long flags;
    long lock;
    short mode;
    short state;
    short posState;
    short rotState;
    short tiltState;
    short distanceState;
    short lagZ;
    short tilt;
    struct _Position focusPoint;
    short focusDistance;
    struct _Instance *focusInstance;
    struct _Position oldFocusInstancePos;
    struct _Position newFocusInstancePos;
    struct _Rotation oldFocusInstanceRot;
    struct _Rotation newFocusInstanceRot;
    struct _SVector focusInstanceVelVec;
    struct _Position focusLeadPivot;
    struct _Position focusOffset;
    struct _Rotation focusRotation;
    short tiltVel;
    short tiltAccl;
    struct _SVector positionVel;
    struct _SVector positionAccl;
    struct _SVector focusPointVel;
    struct _SVector focusPointAccl;
    short focusDistanceVel;
    short focusDistanceAccl;
    struct _SVector focusRotVel;
    struct _SVector focusRotAccl;
    struct _SVector maxFocusVel;
    struct _SVector rotationVel;
    struct _SVector rotationAccl;
    short maxVel;
    short maxRot;
    struct _Position targetPos;
    short targetTilt;
    struct _Rotation targetRotation;
    short targetFocusDistance;
    struct _Position targetFocusPoint;
    short collisionTargetFocusDistance;
    struct _Rotation targetFocusRotation;
    short tfaceTilt;
    struct _Rotation collisionTargetFocusRotation;
    short smooth;
    struct _CameraKey *cameraKey;
    struct _Sphere focusSphere;
    struct _Sphere smallBaseSphere;
    struct _Sphere posSphere;
    short lookTimer;
    short lookSavedMode;
    short presetIndex;
    short presetFocusDistance[3];
    long minFocusDistance;
    long maxFocusDistance;
    long minTilt;
    long maxTilt;
    long pad[3];
    long minXYDist;
    long maxXYDist;
    long oppositeError;
    long tempsplinePointAhead;
    long noTeleport;
    long focusDistanceList[3][3];
    long tiltList[3][3];
    long cineControl;
    short stack;
    short targetStack;
    long savedMode[3];
    long savedTargetFocusDistance[3];
    struct _Rotation savedFocusRotation;
    short savedFocusDistance;
    short signalFocusDistance;
    struct _SavedCinematic savedCinematic[3];
    struct _Rotation savedfocusRotation;
    struct _Position signalPos;
    short pad11;
    struct _Rotation signalRot;
    short forced_movement;
    short last_forced_movement;
    short rotDirection;
    unsigned long lastModTime;
    struct _Rotation lookRot;
    struct MultiSpline *Spline00;
    struct MultiSpline *Spline01;
    struct
    {
        struct
        {
            struct MultiSpline *posSpline;
            struct MultiSpline *targetSpline;
            struct _SVector lastSplinePos;
            short splinePointAhead;
            short cinema_done;
            int splinecam_currkey;
            int splinecam_helpkey;
        } Cinematic;
        struct
        {
            struct _Position offset;
            struct _Rotation rotation;
            long focusDistance;
        } Idle;
        struct
        {
            struct _TFace *tface;
            struct _TFace *oldTFace;
            struct _SVector oldTargetRot;
            long timer;
            struct _SVector oldFocusInstancePos;
        } Behind;
        struct
        {
            long stopTimer;
            long stopHit;
            struct _TFace *tface;
            struct _TFace *oldTFace;
            long hit;
        } Follow;
    } data;
    long cuckooTimer;
    short teleportZRot;
    short extraZRot;
    short extraXRot;
    short leftTimer;
    short rightTimer;
    short collideRotControl;
    short collision_lastPush;
    short collision_timer;
    unsigned long prev_instance_mode;
    unsigned long instance_mode;
    long instance_xyvel;
    long instance_prev_xyvel;
    struct _Position real_focuspoint;
    short always_rotate_flag;
    short follow_flag;
    short actual_x_rot;
    short actual_vel_x;
    short actual_acc_x;
    short x_rot_change;
    short focuspoint_fallz;
    short lead_angle;
    short lead_vel;
    short lead_accl;
    short lead_timer;
};

struct DebugMenuLine
{
    enum DEBUG_LINE_TYPE type;
    long lower;
    long upper;
    char *text;
    long *var_address;
    long bit_mask;
};

struct _ButtonTexture
{
    short tpage;
    short clut;
    short textureW;
    short textureH;
    struct _BlockVramEntry *vramBlock;
    long xshift;
};

struct _BlockVramEntry
{
    struct _BlockVramEntry *next;
    unsigned char type;
    unsigned char flags;
    short time;
    long ID;
    short x;
    short y;
    short w;
    short h;
    long area;
    union {
        struct _StreamUnit *streamUnit;
        struct _ObjectTracker *streamObject;
        struct _ButtonTexture *button;
    } udata;
};

struct FontChar
{
    short x;
    short y;
    char c;
    char color;
};

struct _BigFileEntry
{
    long fileHash;
    long fileLen;
    long filePos;
    long checkSumFull;
};

struct _BigFileDirEntry
{
    short streamUnitID;
    short numFiles;
    long subDirOffset;
};

struct _BigFileDir
{
    long numFiles;
    struct _BigFileEntry fileList[0];
};

struct _BigFile
{
    long bigfileBaseOffset;
    struct _BigFileDir *rootDir;
    struct _BigFileDir *currentDir;
    struct _BigFileDir *cachedDir;
    long currentDirID;
    long cachedDirID;
    long searchDirID;
    long numSubDirs;
    struct _BigFileDirEntry *subDirList;
};

struct _NonBlockLoadEntry
{
    long fileHash;
    long dirHash;
    long filePos;
    long *loadAddr;
    long loadSize;
    long checksum;
    long checksumType;
    long memType;
    long posInFile;
    void *retFunc;
    void *retData;
    void *retData2;
    void **retPointer;
    char fileName[48];
};

struct _ReadQueueEntry
{
    long readStartPos;
    long readSize;
    long readCurSize;
    void *readStartDest;
    void *readCurDest;
    long readStatus;
    long checksum;
    long checksumType;
    void *retFunc;
    void *retData;
    void *retData2;
};

struct _FX_MATRIX
{
    struct NodeType node;
    long flags;
    struct MATRIX lwTransform;
};

struct _FX_PRIM
{
    struct NodeType node;
    struct TextureMT3 *texture;
    long flags;
    long timeToLive;
    void *process;
    struct _FX_MATRIX *matrix;
    long color;
    long startColor;
    long endColor;
    short colorFadeValue;
    short colorFadeStep;
    struct _Position position;
    short fadeStep;
    short fadeValue[4];
    struct _Position v0;
    short work0;
    struct _Position v1;
    short work1;
    struct _Position v2;
    short work2;
    struct _Position v3;
    short work3;
    union {
        struct
        {
            struct _Instance *parent;
            long segment;
        } flame;
        struct
        {
            short xVel;
            short yVel;
            short zVel;
            short xAccl;
            short yAccl;
            short zAccl;
        } phys;
    } duo;
    struct
    {
        struct TextureMT3 *texMem;
        struct AniTex *aniTextures;
        short curFrame;
    } ani;
};

struct BASIC_LINE_G2
{
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    unsigned char r1;
    unsigned char g1;
    unsigned char b1;
    unsigned char p1;
    short x1;
    short y1;
};

struct _BASIC_G4
{
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    unsigned char r1;
    unsigned char g1;
    unsigned char b1;
    unsigned char pad1;
    short x1;
    short y1;
    unsigned char r2;
    unsigned char g2;
    unsigned char b2;
    unsigned char pad2;
    short x2;
    short y2;
    unsigned char r3;
    unsigned char g3;
    unsigned char b3;
    unsigned char pad3;
    short x3;
    short y3;
};

struct _BASIC_F4
{
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    short x1;
    short y1;
    short x2;
    short y2;
    short x3;
    short y3;
};

struct __BubbleParams
{
    short DisperseFrames;
    short KillScale;
    short MinSplashSize;
    short MaxSpeed;
    short MaxSpeedRange;
    short ScaleRate;
    short ScaleRateRange;
    short StartScale;
    short StartScaleRange;
    short UniqueBubbles;
};

struct _GenericParticleParams
{
    short size;
    unsigned char StartOnInit;
    unsigned char type;
    short birthRadius;
    char startSegment;
    char endSegment;
    struct _Position direction;
    unsigned char spectral_colorize;
    unsigned char absolute_direction;
    char accx;
    char accy;
    char accz;
    char useInstanceModel;
    unsigned char startColor_red;
    unsigned char startColor_green;
    unsigned char startColor_blue;
    char model;
    unsigned char endColor_red;
    unsigned char endColor_green;
    unsigned char endColor_blue;
    char texture;
    short lifeTime;
    unsigned char primLifeTime;
    char use_child;
    short startFadeValue;
    short fadeStep;
    char numberBirthParticles;
    char z_undulation_mode;
    short scaleSpeed;
    struct _Position offset;
};

struct _GenericRibbonParams
{
    char id;
    char StartOnInit;
    char startSegment;
    char endSegment;
    char type;
    char use_child;
    short ribbonLifeTime;
    short faceLifeTime;
    short startFadeValue;
    long startColor;
    long endColor;
};

struct _GenericGlowParams
{
    char StartOnInit;
    unsigned char segment;
    unsigned char segmentEnd;
    char numSegments;
    unsigned char color_num;
    char use_child;
    unsigned char numColors;
    char id;
    long atuColorCycleRate;
    short width;
    short height;
    long lifetime;
    short fadein_time;
    short fadeout_time;
};

struct _GenericLightningParams
{
    char type;
    char use_child;
    short lifeTime;
    short deg;
    short deg_inc;
    struct _Position start_offset;
    char startSeg;
    char endSeg;
    struct _Position end_offset;
    char matrixSeg;
    unsigned char segs;
    short width;
    short small_width;
    short sine_size;
    short variation;
    long color;
    long glow_color;
};

struct _GenericBlastringParams
{
    char type;
    char use_child;
    short lifeTime;
    struct _Position offset;
    short matrixSeg;
    char segment;
    char sortInWorld;
    short radius;
    short size1;
    short size2;
    short endRadius;
    short colorchange_radius;
    int vel;
    int accl;
    short height1;
    short height2;
    short height3;
    short predator_offset;
    long startColor;
    long endColor;
};

struct _GenericFlashParams
{
    short type;
    short timeToColor;
    long color;
    short timeAtColor;
    short timeFromColor;
};

union DEBUG_219fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct _StreamUnit
{
    long StreamUnitID;
    short used;
    short flags;
    struct Level *level;
    char baseAreaName[16];
    short toSignal;
    short fromSignal;
    long FrameCount;
    short eventVariables[6];
    long FogColor;
    short UnitFogFar;
    short UnitFogNear;
    short TargetFogFar;
    short TargetFogNear;
    short sfxFileHandle;
    short pad;
};

struct XAFileInfo
{
    int startPos;
};

struct CdCommand
{
    unsigned short flags;
    unsigned char unused;
    unsigned char cdCommand;
    unsigned char cdCmdParam[4];
};

struct VoiceCommand
{
    unsigned char voiceCmd;
    unsigned char nextVoiceStatus;
    unsigned short voiceCmdParam;
};

struct _LoadQueueEntry
{
    struct _LoadQueueEntry *next;
    short status;
    char relocateBinary;
    char mempackUsed;
    struct _NonBlockLoadEntry loadEntry;
    long endLoadTime;
};

struct SavedBasic
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
};

struct _SavedIntro
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
    unsigned char lightGroup;
    unsigned char specturalLightGroup;
    char name[8];
    short introUniqueID;
    short streamUnitID;
    short birthUnitID;
    unsigned short attachedUniqueID;
    struct _SmallRotation smallRotation;
    struct _Position position;
    long flags;
    long flags2;
};

struct SavedEvent
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
    short areaID;
    short eventNumber;
    short eventVariables[5];
};

struct SavedBspTree
{
    struct _Position localOffset;
    unsigned char importantFlagsSaved;
    unsigned char bspIndex;
};

struct EventBasicObject
{
    short id;
};

union DEBUG_255fake {
    struct Intro *intro;
    struct _SFXMkr *sfxMarker;
};

struct EventWildCardObject
{
    short id;
    short spad;
    long unitID;
    char *objectName;
};

struct Event
{
    short eventNumber;
    short numInstances;
    unsigned char numActions;
    unsigned char processingPuppetShow;
    short eventVariables[5];
    struct EventBasicObject **instanceList;
    struct ScriptPCode **conditionalList;
    struct ScriptPCode **actionList;
};

struct ScriptPCode
{
    unsigned short sizeOfPcodeStream;
    unsigned short conditionBits;
    short *data;
};

struct InstanceSpline
{
    struct _Instance *instance;
    struct MultiSpline *spline;
    long attribute;
    long isParent;
    long isClass;
    long splineFlags;
};

struct Vector3d
{
    short vx;
    short vy;
    short vz;
    short pad1;
    short errorx;
    short errory;
    short errorz;
    short pad2;
    long streamUnitID;
};

struct Rotation3d
{
    short vx;
    short vy;
    short vz;
    short pad1;
    short errorx;
    short errory;
    short errorz;
    short pad2;
    long attribute;
};

struct InstanceObject
{
    struct _Instance *instance;
    long attribute;
};

struct EventObject
{
    struct Event *event;
    long attribute;
};

struct SavedEventObject
{
    struct SavedBasic *savedEvent;
    long attribute;
    long areaID;
    long eventNumber;
};

struct GameObject
{
    long attribute;
};

struct SignalObject
{
    struct _MultiSignal *msignal;
    long attribute;
};

struct IntroObject
{
    struct Intro *intro;
    long attribute;
};

struct InstanceAnimate
{
    struct _Instance *instance;
    long attribute;
};

struct InstanceAnimateTexture
{
    struct _Instance *instance;
    struct AniTex *aniTextures;
    long attribute;
};

struct ListObject
{
    struct EventWildCardObject *eventInstance;
    long attribute[5];
    long numberOfAttributes;
    long lineID;
};

struct SubListObject
{
    struct _Instance **instanceList;
    long numberOfInstances;
    long numberOfAttributes;
    long attribute[5];
};

struct TGroupObject
{
    struct BSPTree *bspTree;
    struct _StreamUnit *streamUnit;
    long attribute;
    short arg[2];
};

struct ConstrictInfo
{
    struct _Instance *instance;
    long attribute;
};

struct CameraObject
{
    struct Camera *camera;
    long frames;
    long attribute;
};

struct EventVmObject
{
    struct _VMObject *vmObjectPtr;
    struct Level *level;
    long attribute;
};

struct AreaObject
{
    struct _StreamUnit *streamUnit;
    long attribute;
    long unitID;
};

struct SoundObject
{
    short flags;
    short attribute;
    long soundNumber;
    long value;
    long duration;
    union {
        struct _Instance *instance;
        struct _SFXMkr *sfxMarker;
    } data;
};

struct StackType
{
    long id;
    union {
        struct
        {
            long instanceNumber;
            long attribute;
        } Object;
        struct
        {
            struct _SavedIntro *intro;
            long attribute;
        } SavedIntroObject;
        struct InstanceSpline instanceSpline;
        struct
        {
            long currentNumber;
            long error;
            short flags;
        } Number;
        struct
        {
            short vx;
            short vy;
        } Vector2d;
        struct
        {
            char *pointer;
        } CharPointer;
        struct
        {
            short *pointer;
        } ShortPointer;
        struct
        {
            long *pointer;
        } LongPointer;
        struct AreaObject areaObject;
        struct InstanceObject instanceObject;
        struct Vector3d vector3d;
        struct Rotation3d rotation3d;
        struct SignalObject signalObject;
        struct EventObject eventObject;
        struct GameObject gameObject;
        struct ListObject listObject;
        struct IntroObject introObject;
        struct InstanceAnimate instanceAnimate;
        struct InstanceAnimateTexture instanceAniTexture;
        struct SavedEventObject savedEventObject;
        struct SubListObject subListObject;
        struct TGroupObject terrainGroup;
        struct ConstrictInfo constrictInfo;
        struct CameraObject cameraObject;
        struct EventVmObject vmObject;
        struct SoundObject soundObject;
    } data;
};

struct __ReaverSaveDat
{
    unsigned long pad;
};

enum option_ctrl_t
{
    option_ctrl_bogus = 0,
    option_ctrl_none = 1,
    option_ctrl_select = 2,
    option_ctrl_left = 3,
    option_ctrl_right = 4,
    option_ctrl_num_states = 5,
};

struct debug_dispatch_t
{
    enum DEBUG_LINE_TYPE type;
    void (*fn)();
};

struct debug_format_t
{
    int xpos;
    int ypos;
    int is_centered;
};

typedef struct POLY_F4 POLY_F4;

typedef struct _SmallRotation SmallRotation;

typedef struct Camera Camera;

typedef struct DebugMenuLine DebugMenuLine;

typedef struct _ButtonTexture ButtonTexture;

typedef struct FontChar FontChar;

typedef struct _BigFileEntry BigFileEntry;

typedef struct _BigFileDirEntry BigFileDirEntry;

typedef struct _BigFileDir BigFileDir;

typedef struct _BigFile BigFile;

typedef struct _NonBlockLoadEntry NonBlockLoadEntry;

typedef struct _ReadQueueEntry ReadQueueEntry;

typedef struct _FX_MATRIX FX_MATRIX;

typedef struct _FX_PRIM FX_PRIM;

typedef struct BASIC_LINE_G2 BASIC_LINE_G2;

typedef struct _BASIC_G4 BASIC_G4;

typedef struct _BASIC_F4 BASIC_F4;

typedef struct __BubbleParams BubbleParams;

typedef struct _GenericParticleParams GenericParticleParams;

typedef struct _GenericRibbonParams GenericRibbonParams;

typedef struct _GenericGlowParams GenericGlowParams;

typedef struct _GenericLightningParams GenericLightningParams;

typedef struct _GenericBlastringParams GenericBlastringParams;

typedef struct _GenericFlashParams GenericFlashParams;

typedef struct _StreamUnit StreamUnit;

typedef struct XAFileInfo XAFileInfo;

typedef struct CdCommand CdCommand;

typedef struct VoiceCommand VoiceCommand;

typedef struct _LoadQueueEntry LoadQueueEntry;

typedef struct _BlockVramEntry BlockVramEntry;

typedef struct SavedBasic SavedBasic;

typedef struct _SavedIntro SavedIntro;

typedef struct SavedEvent SavedEvent;

typedef struct SavedBspTree SavedBspTree;

typedef struct EventBasicObject EventBasicObject;

typedef struct EventWildCardObject EventWildCardObject;

typedef struct ScriptPCode ScriptPCode;

typedef struct Event Event;

typedef struct EventPointers EventPointers;

typedef struct InstanceSpline InstanceSpline;

typedef struct Vector3d Vector3d;

typedef struct Rotation3d Rotation3d;

typedef struct InstanceObject InstanceObject;

typedef struct EventObject EventObject;

typedef struct SavedEventObject SavedEventObject;

typedef struct GameObject GameObject;

typedef struct SignalObject SignalObject;

typedef struct IntroObject IntroObject;

typedef struct InstanceAnimate InstanceAnimate;

typedef struct InstanceAnimateTexture InstanceAnimateTexture;

typedef struct ListObject ListObject;

typedef struct SubListObject SubListObject;

typedef struct TGroupObject TGroupObject;

typedef struct ConstrictInfo ConstrictInfo;

typedef struct CameraObject CameraObject;

typedef struct EventVmObject EventVmObject;

typedef struct AreaObject AreaObject;

typedef struct SoundObject SoundObject;

typedef struct StackType StackType;

typedef struct __ReaverSaveDat ReaverSaveData;

typedef enum option_ctrl_t option_ctrl_t;

typedef struct debug_dispatch_t debug_dispatch_t;

typedef struct debug_format_t debug_format_t;

typedef void FX_PRIM_MODIFY_PROCESS();

typedef void FX_PROCESS();

typedef void FX_PARTICLE_PROCESS();

typedef void FX_GENERAL_PROCESS();

typedef void FX_SETUP();

typedef long TFract;

typedef void (*LoadReturnProc)();

typedef void (*BufferedLoadReturnProc)();

typedef void option_fn_t();

typedef int menu_fn_t();

typedef void debug_dispatch_fn_t();

struct POLY_GT3
{
    unsigned long tag;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    unsigned char u0;
    unsigned char v0;
    unsigned short clut;
    unsigned char r1;
    unsigned char g1;
    unsigned char b1;
    unsigned char p1;
    short x1;
    short y1;
    unsigned char u1;
    unsigned char v1;
    unsigned short tpage;
    unsigned char r2;
    unsigned char g2;
    unsigned char b2;
    unsigned char p2;
    short x2;
    short y2;
    unsigned char u2;
    unsigned char v2;
    unsigned short pad2;
};

struct POLY_GT4
{
    unsigned long tag;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    unsigned char u0;
    unsigned char v0;
    unsigned short clut;
    unsigned char r1;
    unsigned char g1;
    unsigned char b1;
    unsigned char p1;
    short x1;
    short y1;
    unsigned char u1;
    unsigned char v1;
    unsigned short tpage;
    unsigned char r2;
    unsigned char g2;
    unsigned char b2;
    unsigned char p2;
    short x2;
    short y2;
    unsigned char u2;
    unsigned char v2;
    unsigned short pad2;
    unsigned char r3;
    unsigned char g3;
    unsigned char b3;
    unsigned char p3;
    short x3;
    short y3;
    unsigned char u3;
    unsigned char v3;
    unsigned short pad3;
};

union DRAW_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

struct _Vector
{
    long x;
    long y;
    long z;
};

union DRAW_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct _PFace
{
    unsigned long *tag;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    unsigned char u0;
    unsigned char v0;
    short clut;
    short x1;
    short y1;
    unsigned char u1;
    unsigned char v1;
    unsigned short tpage;
    short x2;
    short y2;
    unsigned char u2;
    unsigned char v2;
    short pad1;
    long pad2;
    long pad3;
};

struct _PolytopeList
{
    long numPolytopes;
    void(*polytope[1024]);
};

struct DRAW_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct UVTYPE
{
    unsigned char u;
    unsigned char v;
    short pad;
};

struct POLY_G3_SEMITRANS
{
    unsigned long tag;
    unsigned long dr_tpage;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    unsigned char r1;
    unsigned char g1;
    unsigned char b1;
    unsigned char pad1;
    short x1;
    short y1;
    unsigned char r2;
    unsigned char g2;
    unsigned char b2;
    unsigned char pad2;
    short x2;
    short y2;
};

struct _POLY_NG4
{
    unsigned long tag;
    unsigned long drawTPage1;
    struct _BASIC_G4 p1;
};

union DRAW_207fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct _GT3ZVertexD3D_Type
{
    float x;
    float y;
    float z;
    float rhw;
    unsigned int rgba;
    float u;
    float v;
};

struct SP_SUBDIV_STRUCT
{
    struct _SVector vertex0;
    struct _SVector vertex1;
    struct _SVector vertex2;
    struct SVECTOR face_v0;
    struct SVECTOR face_v1;
    struct SVECTOR face_v2;
    struct SVECTOR face_v01;
    struct SVECTOR face_v12;
    struct SVECTOR face_v20;
    struct UVTYPE face_uv0;
    struct UVTYPE face_uv1;
    struct UVTYPE face_uv2;
    struct UVTYPE face_uv01;
    struct UVTYPE face_uv12;
    struct UVTYPE face_uv20;
    struct _ColorType color0;
    struct _ColorType color1;
    struct _ColorType color2;
    struct _ColorType color01;
    struct _ColorType color12;
    struct _ColorType color20;
    struct _Vector out[4];
    long color[4];
    long texinfo[3];
    struct DVECTOR sxy[4];
};

typedef struct POLY_GT3 POLY_GT3;

typedef struct POLY_GT4 POLY_GT4;

typedef struct _Vector Vector;

typedef struct _PFace PFace;

typedef struct _PolytopeList PolytopeList;

typedef struct UVTYPE UVTYPE;

typedef struct POLY_G3_SEMITRANS POLY_G3_SEMITRANS;

typedef struct _POLY_NG4 POLY_NG4;

typedef struct _GT3ZVertexD3D_Type GT3ZVertexD3D;

typedef struct SP_SUBDIV_STRUCT SP_SUBDIV_STRUCT;

typedef void BSPLeafFunc();

typedef void G2AppData;

struct POLY_FT4
{
    unsigned long tag;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    unsigned char u0;
    unsigned char v0;
    unsigned short clut;
    short x1;
    short y1;
    unsigned char u1;
    unsigned char v1;
    unsigned short tpage;
    short x2;
    short y2;
    unsigned char u2;
    unsigned char v2;
    unsigned short pad1;
    short x3;
    short y3;
    unsigned char u3;
    unsigned char v3;
    unsigned short pad2;
};

union FONT_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union FONT_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct FontTracker
{
    struct FontChar font_buffer[256];
    long font_xpos;
    long font_ypos;
    long font_buffIndex;
    short font_tpage;
    short font_clut;
    short font_vramU;
    short font_vramV;
    short font_width;
    short sprite_sort_push;
    short font_vramX;
    short font_vramY;
    char color_global;
    char color_local;
};

struct FONT_117fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union FONT_208fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct font_color_t
{
    int r;
    int g;
    int b;
};

struct FontPos
{
    char x;
    char y;
    char w;
    char h;
};

typedef struct POLY_FT4 POLY_FT4;

typedef struct FontTracker FontTracker;

typedef struct font_color_t font_color_t;

typedef struct FontPos FontPos;

union GAMEPAD_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union GAMEPAD_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct GAMEPAD_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union GAMEPAD_194fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct JoypadMappingStruct
{
    unsigned short psxData;
    unsigned short translation;
};

struct AnalogueData
{
    unsigned short pad;
    unsigned char xR;
    unsigned char yR;
    unsigned char xL;
    unsigned char yL;
};

struct ControllerPacket
{
    unsigned char transStatus;
    unsigned char dataFormat;
    union {
        unsigned short pad;
        unsigned short multitap[16];
        unsigned short mouse[2];
        unsigned short negcon[3];
        struct AnalogueData analogue;
    } data;
};

typedef struct JoypadMappingStruct JoypadMapping;

typedef struct AnalogueData AnalogueData;

typedef struct ControllerPacket ControllerPacket;

struct _G2EulerAngles_Type
{
    short x;
    short y;
    short z;
    short order;
};

enum _G2AnimCallbackMsg_Enum
{
    G2ANIM_MSG_DONE = 1,
    G2ANIM_MSG_LOOPPOINT = 2,
    G2ANIM_MSG_SECTION_INTERPDONE = 3,
    G2ANIM_MSG_SEGCTRLR_INTERPDONE = 4,
    G2ANIM_MSG_SWALARMSET = 5,
    G2ANIM_MSG_PLAYEFFECT = 6,
};

union INSTANCE_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union INSTANCE_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct _InstanceHandle
{
    struct _Instance *instance;
    long instanceID;
};

struct evCollideInstanceStatsData
{
    struct _Instance *instance;
    unsigned long distance;
    struct _SVector relativePosition;
    long xyDistance;
    long zDelta;
};

union INSTANCE_200fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct INICommand
{
    short command;
    short numParameters;
    long parameter[0];
};

struct PhysObProperties
{
    unsigned short version;
    unsigned short family;
    unsigned short ID;
    unsigned short Type;
};

struct PhysObSplinter
{
    long numSplintData;
    void *splinterData;
};

struct PhysObWeaponAttributes
{
    long Damage;
    long AltDamage;
    short knockBackDistance;
    char knockBackFrames;
    char dropSound;
    char Class;
    char ThrowSphere;
    char LeftHandSphere;
    char RightHandSphere;
    struct _PhysObLight *Light;
    struct PhysObSplinter splinter;
};

struct _PhysObLight
{
    unsigned char length;
    unsigned char segment;
    short speed;
    struct LightTableEntry *lightTable;
};

struct __PhysObProjectileData
{
    char model;
    char startAnim;
    char loopAnim;
    char endAnim;
    long flags;
    struct PhysObWeaponAttributes *weapon;
};

struct SwitchData
{
    short state;
    short accumulator;
};

struct LightTableEntry
{
    short r;
    short g;
    short b;
    short radius;
};

struct SavedIntroSmall
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
    short introUniqueID;
};

struct SavedIntroSpline
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
    short introUniqueID;
    short splineFlags;
    short splineKeyFrame;
    short splineClipBeg;
    short splineClipEnd;
};

struct _SavedIntroWithIntro
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
    unsigned short attachedUniqueID;
    short introOffset;
    short birthUnitID;
    short introUniqueID;
    unsigned char lightGroup;
    unsigned char specturalLightGroup;
    long flags;
    long flags2;
    struct _SmallRotation smallRotation;
    struct _Position position;
};

union INSTANCE_265fake {
    struct Intro *intro;
    struct _SFXMkr *sfxMarker;
};

typedef struct _G2EulerAngles_Type G2EulerAngles;

typedef enum _G2AnimCallbackMsg_Enum G2AnimCallbackMsg;

typedef struct _InstanceHandle InstanceHandle;

typedef struct evCollideInstanceStatsData evCollideInstanceStatsData;

typedef struct INICommand INICommand;

typedef struct PhysObProperties PhysObProperties;

typedef struct PhysObSplinter PhysObSplinter;

typedef struct PhysObWeaponAttributes PhysObWeaponAttributes;

typedef struct __PhysObProjectileData PhysObProjData;

typedef struct SwitchData SwitchData;

typedef struct LightTableEntry LightTableEntry;

typedef struct _PhysObLight PhysObLight;

typedef struct SavedIntroSmall SavedIntroSmall;

typedef struct SavedIntroSpline SavedIntroSpline;

typedef struct _SavedIntroWithIntro SavedIntroWithIntro;

union CAMERA_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union CAMERA_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct _PCollideInfo
{
    short type;
    short segment;
    void *prim;
    struct _Instance *inst;
    struct SVECTOR wNormal;
    struct SVECTOR *newPoint;
    struct SVECTOR *oldPoint;
    struct SVECTOR cldPoint;
    long collideType;
    struct _Instance *instance;
};

struct CameraCollisionInfo
{
    struct _TFace(*tfaceList[5]);
    struct _Terrain(*tfaceTerrain[5]);
    short bspTree[6];
    short lengthList[6];
    long flags;
    long line;
    long numCollided;
    long lenCenterToExtend;
    struct _Sphere *start;
    struct _Sphere *end;
    long cldLines;
};

struct _LCollideInfo
{
    struct _TFace *tface;
    struct _Terrain *terrain;
    int curTree;
};

union CAMERA_200fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

typedef struct _PCollideInfo PCollideInfo;

typedef struct CameraCollisionInfo CameraCollisionInfo;

typedef struct _LCollideInfo LCollideInfo;

union LIGHT3D_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union LIGHT3D_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct LIGHT3D_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union LIGHT3D_204fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct LIGHT3D_224fake
{
    long m[5];
};

typedef long LightFunc();

struct CdlFILE
{
    struct CdlLOC pos;
    unsigned long size;
    char name[16];
};

union LOAD3D_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union LOAD3D_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct LOAD3D_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct _LoadStatus
{
    struct _ReadQueueEntry currentQueueFile;
    long state;
    long bytesTransferred;
    long lastCheckPos;
    long cdWaitTime;
    unsigned char *compSrcAddr;
    unsigned char *compDstAddr;
    long compControlbits;
    long compControl;
    long compEndBytes;
    long decompressLen;
    long checksum;
    long *checkAddr;
    struct _BigFile bigFile;
    void *buffer1;
    void *buffer2;
    int changeDir;
    long endLoadTime;
    long currentDirLoading;
    long currentSector;
    long sectorTime;
    long seekTime;
};

struct RedirectList
{
    long numPointers;
    long *data;
};

typedef struct CdlFILE CdlFILE;

typedef struct _LoadStatus LoadStatus;

typedef struct RedirectList RedirectList;

struct DRAWENV
{
    struct RECT clip;
    short ofs[2];
    struct RECT tw;
    unsigned short tpage;
    unsigned char dtd;
    unsigned char dfe;
    unsigned char isbg;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    struct DR_ENV dr_env;
};

struct DISPENV
{
    struct RECT disp;
    struct RECT screen;
    unsigned char isinter;
    unsigned char isrgb24;
    unsigned char pad0;
    unsigned char pad1;
};

struct BLK_FILL
{
    unsigned long tag;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    unsigned short x0;
    unsigned short y0;
    unsigned short w;
    unsigned short h;
};

union MAIN_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MAIN_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct MAIN_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MAIN_208fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct MainTracker
{
    long mainState;
    long previousState;
    long movieNum;
    long done;
};

union MAIN_238fake {
    unsigned short pad;
    unsigned short multitap[16];
    unsigned short mouse[2];
    unsigned short negcon[3];
    struct AnalogueData analogue;
};

struct POLY_F4_SEMITRANS
{
    unsigned long tag;
    unsigned long dr_tpage;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    short x1;
    short y1;
    short x2;
    short y2;
    short x3;
    short y3;
};

struct InterfaceItem
{
    char name[48];
    unsigned short timeout;
    unsigned short buttonTimeout;
    short itemType;
    short nextItem;
};

typedef struct DRAWENV DRAWENV;

typedef struct DISPENV DISPENV;

typedef struct BLK_FILL BLK_FILL;

typedef struct MainTracker MainTracker;

typedef struct POLY_F4_SEMITRANS POLY_F4_SEMITRANS;

typedef struct InterfaceItem InterfaceItem;

union GAMELOOP_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union GAMELOOP_77fake {
    long color;
    struct _RGBAColor rgba;
};

union GAMELOOP_187fake {
    struct Intro *intro;
    struct _SFXMkr *sfxMarker;
};

struct _FXTracker
{
    struct _FX_MATRIX matrixPool[32];
    struct NodeType usedMatrixList;
    struct NodeType freeMatrixList;
    struct _FX_PRIM primPool[256];
    struct NodeType usedPrimList;
    struct NodeType usedPrimListSprite;
    struct NodeType freePrimList;
};

union GAMELOOP_231fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct StreamUnitPortal
{
    char tolevelname[16];
    long MSignalID;
    long streamID;
    short minx;
    short miny;
    short minz;
    short flags;
    short maxx;
    short maxy;
    short maxz;
    short pad2;
    struct _StreamUnit *toStreamUnit;
    struct _SVector t1[3];
    struct _SVector t2[3];
};

typedef struct _FXTracker FXTracker;

typedef struct StreamUnitPortal StreamUnitPortal;

typedef void GlyphProcessFunction();

union SIGNAL_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union SIGNAL_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct SIGNAL_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union SIGNAL_200fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct SignalInfo
{
    long (*signalHandleFunc)();
    short length;
    short onlyPlayer;
    void (*signalRelocateFunc)();
};

typedef struct SignalInfo SignalInfo;

typedef void SignalGlobalValueFunc();

typedef long HandleSignalFunc();

typedef long SignalHandleFunc();

typedef void RelocateSignalFunc();

union COLLIDE_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

struct _Triangle2D
{
    short x0;
    short y0;
    short x1;
    short y1;
    short x2;
    short y2;
};

union COLLIDE_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct _HNormal
{
    short x;
    short y;
    short z;
    short pad;
};

struct _HFaceInfo
{
    long flags;
    long attr;
    struct _HFace *hface;
    struct _SVector normal;
    struct _HVertex *vertex0;
    struct _HVertex *vertex1;
    struct _HVertex *vertex2;
};

struct _CollideInfo
{
    void *level;
    char flags;
    char segment;
    char type0;
    char type1;
    void *prim0;
    void *prim1;
    void *inst0;
    void *inst1;
    struct SVECTOR point0;
    struct SVECTOR point1;
    struct _Position offset;
    short bspID;
};

struct SCollideInfo
{
    struct _Sphere *sphere;
    struct SVECTOR *oldPos;
    void (*collideFunc)();
    long id;
    long segment;
    struct _Instance *instance;
    void *prim;
};

union COLLIDE_214fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union COLLIDE_241fake {
    struct Intro *intro;
    struct _SFXMkr *sfxMarker;
};

struct PandTScratch
{
    struct MATRIX posMatrix;
    struct _SVector normal;
    struct _Vector dpv;
    struct _SVector planePoint;
    long ignore_attr;
    long accept_attr;
    short *backface_flag;
    struct _SVector newPos;
    struct _SVector oldPos;
    int flags;
    int i;
    int slack;
    long in_spectral;
    short *normalList;
    struct _TVertex *vertexList;
    struct _TFace *result;
    struct _SVector line;
};

struct COLLIDE_253fake
{
    long m[3];
};

struct SandHFScratch
{
    struct _SVector normal;
    struct MATRIX posMatrix;
    struct _Vector dpv;
    struct _SVector triPoint;
    struct _SVector planePoint;
};

struct SandTScratch
{
    struct MATRIX posMatrix;
    struct _Vector dpv;
    struct _HNormal *normalList;
    struct _CollideInfo collideInfo;
    struct _HFaceInfo hfaceInfo;
    struct _SVector midPoint;
    struct _SVector spherePos;
    void (*collideFunc)();
    struct _Instance *instance;
    long edge;
    long in_spectral;
    struct _SVector oldPos;
    void *prim;
    struct _SVector normal;
    struct _Sphere sphere;
    short result;
    short i;
    long collide_ignoreAttr;
    long collide_acceptAttr;
    long midRadius;
    struct _TVertex *vertexList;
};

struct IandTScratch
{
    struct MATRIX posMatrix;
    struct _SVector normal;
    struct _Vector dpv;
    struct _SVector planePoint;
    struct _SVector line;
    struct _SVector oldPos;
    struct _SVector newPos;
    int i;
    long in_spectral;
    short *normalList;
    struct _TVertex *vertexList;
};

struct PandTFScratch
{
    struct MATRIX posMatrix;
    struct _SVector planePoint;
    struct _SVector newPos;
    struct _SVector oldPos;
    struct _SVector normal;
    struct _Vector dpv;
};

typedef struct _Triangle2D Triangle2D;

typedef struct _HNormal HNormal;

typedef struct _HFaceInfo HFaceInfo;

typedef struct _CollideInfo CollideInfo;

typedef struct SCollideInfo SCollideInfo;

typedef long CollideBoundFunc();

union TABLES_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union TABLES_72fake {
    long color;
    struct _RGBAColor rgba;
};

union VM_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union VM_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct VM_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union VM_194fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union MATH3D_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MATH3D_77fake {
    long color;
    struct _RGBAColor rgba;
};

enum MATH3D_AXIS
{
    AXIS_X = 0,
    AXIS_Y = 1,
    AXIS_Z = 2,
    AXIS_NEG_X = 3,
    AXIS_NEG_Y = 4,
    AXIS_NEG_Z = 5,
};

struct POLY_FT3
{
    unsigned long tag;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    unsigned char u0;
    unsigned char v0;
    unsigned short clut;
    short x1;
    short y1;
    unsigned char u1;
    unsigned char v1;
    unsigned short tpage;
    short x2;
    short y2;
    unsigned char u2;
    unsigned char v2;
    unsigned short pad1;
};

union PIPE3D_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PIPE3D_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct _Mirror
{
    short a;
    short b;
    short c;
    short d;
};

struct PIPE3D_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct _FXHalvePlane
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
    long diffTime;
    struct _PlaneConstants ringPlane;
    long currentColor;
    long *colorArray;
    short numColors;
    short colorBlendLife;
};

struct _FXGlowEffect
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
    unsigned long diffTime;
    long *colorArray;
    long currentColor;
    short numColors;
    short colorBlendCycle;
    short width;
    short height;
    unsigned char numSegments;
    unsigned char SegmentInc;
    short segment;
    short fadein_time;
    short fadeout_time;
};

union PIPE3D_195fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct PIPE3D_234fake
{
    long m[3];
};

struct PIPE3D_235fake
{
    long m[5];
};

struct TransformAnimatedInstanceVerticesWork_t
{
    struct MATRIX scTransform;
    struct MATRIX mirrorMatrix;
    struct MATRIX llm;
    struct _Vector vector;
};

typedef struct POLY_FT3 POLY_FT3;

typedef struct _Mirror Mirror;

typedef struct _FXHalvePlane FXHalvePlane;

typedef struct _FXGlowEffect FXGlowEffect;

typedef struct TransformAnimatedInstanceVerticesWork_t TransformAnimatedInstanceVerticesWork_t;

union SCRIPT_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union SCRIPT_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct SCRIPT_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union SCRIPT_196fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct GenericTune
{
    long flags;
    void *shatterData;
};

struct FXSplinter
{
    short flags;
    short soundFx;
    short chunkVelXY;
    short chunkVelZ;
    short chunkVelRng;
    short triVelRng;
    short lifetime;
    short faceLimit;
    short rotRateRng;
    short gravityZ;
};

typedef struct GenericTune GenericTune;

typedef struct FXSplinter FXSplinter;

union TIMER_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union TIMER_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct TIMER_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union BSP_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union BSP_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct _SBSPLeaf
{
    struct _Sphere_noSq sphere;
    struct Intro **introList;
    short numIntros;
    short flags;
    struct CDLight **lightList;
    short numLights;
    short pad;
};

struct BSP_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union BSP_204fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct BSPScratch
{
    struct MATRIX vv[2];
    struct MATRIX camMatrix;
    struct VECTOR dpv[3];
    long d[6];
    struct MATRIX boundMatrix;
    long in_spectral;
};

typedef struct _SBSPLeaf SBSPLeaf;

typedef void asm_fn();

typedef long hook_fn_1();

typedef long hook_fn_2();

typedef long hook_fn_3();

typedef long hook_fn_4();

typedef long hook_fn_5();

typedef long hook_fn_6();

typedef long hook_fn_7();

typedef long hook_fn_8();

union OBTABLE_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union OBTABLE_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct _ObjectOwnerInfo
{
    long magicnum;
    short animID;
    char objectName[0];
};

struct OBTABLE_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct ObjectAccess
{
    char *objectName;
    void *object;
};

union OBTABLE_191fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

typedef struct _ObjectOwnerInfo ObjectOwnerInfo;

typedef struct ObjectAccess ObjectAccess;

union OBTABLE2_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union OBTABLE2_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct OBTABLE2_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct ObjectFunc
{
    char *scriptName;
    void (*initFunc)();
    void (*processFunc)();
    void (*collideFunc)();
    unsigned long (*queryFunc)();
    void (*messageFunc)();
    void (*additionalCollideFunc)();
    void (*relocateTuneFunc)();
    void (*relocateInstObFunc)();
};

union OBTABLE2_204fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

typedef struct ObjectFunc ObjectFunc;

union GENERIC_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union GENERIC_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct GENERIC_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct evAnimationInstanceSwitchData
{
    struct _Instance *instance;
    int anim;
    int frame;
    int frames;
    int mode;
};

union GENERIC_196fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct evControlSaveDataData
{
    long length;
    void *data;
};

typedef struct evAnimationInstanceSwitchData evAnimationInstanceSwitchData;

typedef struct evControlSaveDataData evControlSaveDataData;

union SOUND_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union SOUND_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct SOUND_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct AadInitAttr
{
    int updateMode;
    int numSlots;
    void (*nonBlockLoadProc)();
    void (*nonBlockBufferedLoadProc)();
    void (**memoryMallocProc)();
    void (*memoryFreeProc)();
};

struct ObjectPeriodicSound
{
    unsigned char type;
    unsigned char numSfxIDs;
    unsigned char soundInst;
    unsigned char flags;
    unsigned short minVolDistance;
    short pitch;
    unsigned short pitchVariation;
    unsigned char maxVolume;
    unsigned char maxVolVariation;
    unsigned char initialDelay;
    unsigned char initialDelayVariation;
    unsigned char onTime;
    unsigned char onTimeVariation;
    unsigned char offTime;
    unsigned char offTimeVariation;
};

struct ObjectEventSound
{
    unsigned char type;
    unsigned char numSfxIDs;
    unsigned char soundInst;
    unsigned char flags;
    unsigned short minVolDistance;
    short pitch;
    unsigned short pitchVariation;
    unsigned char maxVolume;
    unsigned char maxVolVariation;
    unsigned char initialDelay;
    unsigned char initialDelayVariation;
};

struct ObjectOneShotSound
{
    unsigned char type;
    unsigned char numSfxIDs;
    unsigned char soundInst;
    unsigned char flags;
    unsigned short minVolDistance;
    short pitch;
    unsigned short pitchVariation;
    unsigned char maxVolume;
    unsigned char maxVolVariation;
    unsigned char initialDelay;
    unsigned char initialDelayVariation;
};

struct SoundEffectChannel
{
    unsigned char inUse;
    unsigned char unused;
    unsigned short unused1;
    unsigned long handle;
    short volume;
    short volumeChangeTime;
    short volumeChangeTimeSave;
    short volumeChangePerUpdate;
    short volumeChangeSign;
    short volumeChangeErrPerUpdate;
    short volumeChangeError;
    short pitch;
    short pitchChangeTime;
    short pitchChangeTimeSave;
    short pitchChangePerUpdate;
    short pitchChangeSign;
    short pitchChangeErrPerUpdate;
    short pitchChangeError;
};

union SOUND_199fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

typedef struct AadInitAttr AadInitAttr;

typedef struct ObjectPeriodicSound ObjectPeriodicSound;

typedef struct ObjectEventSound ObjectEventSound;

typedef struct ObjectOneShotSound ObjectOneShotSound;

typedef struct SoundEffectChannel SoundEffectChannel;

union SPLINE_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union SPLINE_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct DR_TPAGE
{
    unsigned long tag;
    unsigned long code[1];
};

union FX_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union FX_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct FX_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct _POLY_SG4
{
    unsigned long tag;
    unsigned long drawTPage1;
    struct _BASIC_G4 p1;
    unsigned long drawTPage2;
    struct _BASIC_F4 p2;
};

struct _FXGeneralEffect
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
};

struct _FXRibbon
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
    short numberVerts;
    short endIndex;
    struct SVECTOR *vertexPool;
    short startSegment;
    short endSegment;
    long startColor;
    long endColor;
    short colorStepValue;
    short faceLifeTime;
    short startFadeValue;
    short fadeStep;
};

struct _FXParticle
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
    struct TextureMT3 *texture;
    void *fxprim_modify_process;
    void *fxprim_process;
    short size;
    short primLifeTime;
    short birthRadius;
    short scaleSpeed;
    struct _Position direction;
    unsigned short flag_bits;
    struct _Position acceleration;
    short startScale;
    struct _Position offset;
    char startSegment;
    char z_undulate;
    long startColor;
    long endColor;
    short colorStepValue;
    char numberBirthParticles;
    char endSegment;
    short startFadeValue;
    short fadeStep;
};

struct _FXLightBeam
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
    short startSeg;
    short endSeg;
    long color;
};

struct _FXBlastringEffect
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
    struct _SVector position;
    struct MATRIX matrix;
    short segment;
    short pad;
    int radius;
    int size1;
    int size2;
    int startRadius;
    int endRadius;
    int colorchange_radius;
    int vel;
    int accl;
    int height1;
    int height2;
    int height3;
    short predator_offset;
    short sortInWorld;
    long color;
    long startColor;
    long endColor;
};

struct _FXForceFieldEffect
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
    struct _SVector offset;
    short size;
    short size_diff;
    short size_change;
    short deg;
    short deg_change;
    short start_fade;
    short end_fade;
    long color;
};

struct _FXLightning
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
    short deg;
    short deg_inc;
    struct _Position start_offset;
    short startSeg;
    struct _Instance *end_instance;
    struct _Position end_offset;
    short endSeg;
    short matrixSeg;
    short width;
    short small_width;
    short segs;
    short sine_size;
    short variation;
    long color;
    long glow_color;
};

struct _FXFlash
{
    void *next;
    void *continue_process;
    struct _Instance *instance;
    unsigned char effectType;
    unsigned char type;
    short lifeTime;
    long timeToColor;
    long timeAtColor;
    long timeFromColor;
    long currentTime;
    long color;
};

struct GenericFXObject
{
    struct _GenericParticleParams *ParticleList;
    struct _GenericRibbonParams *RibbonList;
    struct _GenericGlowParams *GlowList;
    struct _GenericLightningParams *LightningList;
    struct _GenericBlastringParams *BlastList;
    struct _GenericFlashParams *FlashList;
    long *ColorList;
};

union FX_200fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct evObjectDraftData
{
    short force;
    unsigned short radius;
    unsigned short radiusCoef;
    unsigned short height;
    unsigned short maxVelocity;
};

struct _GlyphTuneData
{
    short glyph_size;
    short glyph_darkness;
    char glyph_costs[8];
    short glyph_range[8];
    long color_array[28];
};

struct __ReaverData
{
    char ReaverPickedUp;
    char ReaverOn;
    short ReaverSize;
    short CurrentReaver;
    short ReaverDeg;
    long ReaverChargeTime;
    long ReaverShockAmount;
    long ReaverGlowColor;
    long ReaverBladeColor;
    long ReaverBladeGlowColor;
    short ReaverScale;
    short ReaverTargetScale;
    struct __ReaverSaveDat saveData;
};

struct __ReaverTuneData
{
    unsigned long spectralGlowColor;
    unsigned long materialGlowColor;
    unsigned long sunlightGlowColor;
    unsigned long waterGlowColor;
    unsigned long stoneGlowColor;
    unsigned long fireGlowColor;
    unsigned long spiritGlowColor;
    unsigned long soundGlowColor;
    unsigned long spectralInnerColor;
    unsigned long materialInnerColor;
    unsigned long sunlightInnerColor;
    unsigned long waterInnerColor;
    unsigned long stoneInnerColor;
    unsigned long fireInnerColor;
    unsigned long spiritInnerColor;
    unsigned long soundInnerColor;
    unsigned long spectralInnerGlowColor;
    unsigned long materialInnerGlowColor;
    unsigned long sunlightInnerGlowColor;
    unsigned long waterInnerGlowColor;
    unsigned long stoneInnerGlowColor;
    unsigned long fireInnerGlowColor;
    unsigned long spiritInnerGlowColor;
    unsigned long soundInnerGlowColor;
    unsigned long icon_colors[24];
};

struct _POLY_TF4
{
    unsigned long tag;
    unsigned long drawTPage;
    struct _BASIC_F4 p1;
};

struct _POLY_2G4
{
    unsigned long tag;
    struct _BASIC_G4 p1;
    struct _BASIC_G4 p2;
};

struct _POLY_2G4T
{
    unsigned long tag;
    unsigned long drawTPage1;
    struct _BASIC_G4 p1;
    struct _BASIC_G4 p2;
};

typedef struct DR_TPAGE DR_TPAGE;

typedef struct _POLY_SG4 POLY_SG4;

typedef struct _FXGeneralEffect FXGeneralEffect;

typedef struct _FXRibbon FXRibbon;

typedef struct _FXParticle FXParticle;

typedef struct _FXLightBeam FXLightBeam;

typedef struct _FXBlastringEffect FXBlastringEffect;

typedef struct _FXForceFieldEffect FXForceFieldEffect;

typedef struct _FXLightning FXLightning;

typedef struct _FXFlash FXFlash;

typedef struct GenericFXObject GenericFXObject;

typedef struct evObjectDraftData evObjectDraftData;

typedef struct _GlyphTuneData GlyphTuneData;

typedef struct __ReaverData ReaverData;

typedef struct __ReaverTuneData ReaverTuneData;

typedef struct _POLY_TF4 POLY_TF4;

typedef struct _POLY_2G4 POLY_2G4;

typedef struct _POLY_2G4T POLY_2G4T;

struct AadVolume
{
    short left;
    short right;
};

typedef struct AadVolume AadVolume;

struct NewMemTracker
{
    struct MemHeader *rootNode;
    unsigned long totalMemory;
    unsigned long currentMemoryUsed;
    char *lastMemoryAddress;
    long doingGarbageCollection;
};

union MEMPACK_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MEMPACK_72fake {
    long color;
    struct _RGBAColor rgba;
};

union MEMPACK_183fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union MEMPACK_239fake {
    struct Intro *intro;
    struct _SFXMkr *sfxMarker;
};

typedef struct NewMemTracker NewMemTracker;

union GXASSERT_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union GXASSERT_77fake {
    long color;
    struct _RGBAColor rgba;
};

union AADASSRT_117fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union AADASSRT_118fake {
    long color;
    struct _RGBAColor rgba;
};

struct AadSequenceHdr
{
    unsigned long sequenceID;
    unsigned long quarterNoteTime;
    unsigned short ppqn;
    unsigned short version;
    unsigned short numTracks;
    unsigned short unused;
};

struct AadMemoryStruct
{
    unsigned long updateCounter;
    int numSlots;
    int updateMode;
    int masterVolume;
    struct AadVolFader masterVolFader;
    int sfxMasterVol;
    int musicMasterVol;
    int flags;
    struct AadVolFader musicMasterVolFader;
    struct _AadSequenceSlot(*sequenceSlots[8]);
    struct AadSfxSlot sfxSlot;
    struct AadSynthVoice synthVoice[24];
    char voiceStatus[24];
    unsigned short voicePitchSave[24];
    unsigned long voiceKeyOffRequest;
    unsigned long voiceKeyOnRequest;
    unsigned long voiceReverbRequest;
    struct AadSoundBankHdr(*dynamicSoundBankHdr[2]);
    struct AadProgramAtr(*dynamicProgramAtr[2]);
    struct AadToneAtr(*dynamicToneAtr[2]);
    unsigned long(*dynamicWaveAddr[2]);
    unsigned char(**dynamicSequenceAddressTbl[2]);
    unsigned long(*dynamicSequenceLabelOffsetTbl[2]);
    int dynamicBankStatus[2];
    unsigned char(*dynamicSoundBankData[2]);
    unsigned long dynamicSoundBankSramData[2];
    struct AadDynamicLoadRequest loadRequestQueue[16];
    struct AadDynamicBankLoadInfo dynamicBankLoadInfo;
    void (*nonBlockLoadProc)();
    void (*nonBlockBufferedLoadProc)();
    void (**memoryMallocProc)();
    void (*memoryFreeProc)();
    int nextLoadReqIn;
    int nextLoadReqOut;
    int numLoadReqsQueued;
    struct AadDynamicSfxLoadInfo dynamicSfxLoadInfo;
    struct _AadDynSfxFileHdr *firstDynSfxFile;
    int nextFileHandle;
    struct AadSramDefragInfo sramDefragInfo;
    unsigned char sfxToneMasterList[512];
    unsigned char sfxWaveMasterList[512];
    struct AadLoadedSfxToneAttr sfxToneAttrTbl[128];
    struct AadLoadedSfxWaveAttr sfxWaveAttrTbl[120];
    int nextToneIndex;
    int nextWaveIndex;
    struct AadNewSramBlockDesc sramDescriptorTbl[128];
    int nextSramDescIndex;
    int firstSramBlockDescIndex;
    void (*controller11Callback)();
    void (*endSequenceCallback)();
    long controller11CallbackData;
    long endSequenceCallbackData;
    unsigned char userVariables[128];
};

struct AadTempo
{
    unsigned long quarterNoteTime;
    int ppqn;
};

struct AadSlotAttributes
{
    int sequenceNumberAssigned;
    int sequenceAssignedDynamicBank;
    int playingStatus;
    int channelMute;
    int slotVolume;
    int slotPan;
    int eventsInQueue[16];
};

union AADLIB_114fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union AADLIB_115fake {
    long color;
    struct _RGBAColor rgba;
};

struct AADLIB_152fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union AADLIB_185fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

typedef struct AadSequenceHdr AadSequenceHdr;

typedef struct AadMemoryStruct AadMemoryStruct;

typedef struct AadTempo AadTempo;

typedef struct AadSlotAttributes AadSlotAttributes;

struct SpuVoiceAttr
{
    unsigned long voice;
    unsigned long mask;
    struct SpuVolume volume;
    struct SpuVolume volmode;
    struct SpuVolume volumex;
    unsigned short pitch;
    unsigned short note;
    unsigned short sample_note;
    short envx;
    unsigned long addr;
    unsigned long loop_addr;
    long a_mode;
    long s_mode;
    long r_mode;
    unsigned short ar;
    unsigned short dr;
    unsigned short sr;
    unsigned short rr;
    unsigned short sl;
    unsigned short adsr1;
    unsigned short adsr2;
};

typedef struct SpuVoiceAttr SpuVoiceAttr;

struct POLY_G4
{
    unsigned long tag;
    unsigned char r0;
    unsigned char g0;
    unsigned char b0;
    unsigned char code;
    short x0;
    short y0;
    unsigned char r1;
    unsigned char g1;
    unsigned char b1;
    unsigned char pad1;
    short x1;
    short y1;
    unsigned char r2;
    unsigned char g2;
    unsigned char b2;
    unsigned char pad2;
    short x2;
    short y2;
    unsigned char r3;
    unsigned char g3;
    unsigned char b3;
    unsigned char pad3;
    short x3;
    short y3;
};

struct DR_AREA
{
    unsigned long tag;
    unsigned long code[2];
};

union STREAM_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union STREAM_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct evPositionData
{
    short x;
    short y;
    short z;
    short pad;
};

union STREAM_205fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct STracker
{
    struct _StreamUnit StreamList[16];
};

struct FaceExtents
{
    long smallx;
    long bigx;
    long smally;
    long bigy;
    long smallz;
    long bigz;
};

struct WarpRoom
{
    char name[16];
    struct _StreamUnit *streamUnit;
};

struct PlanningNode
{
    struct _Position pos;
    unsigned short flags;
    unsigned long connectionStatus;
    unsigned long connections;
    unsigned short cost;
    unsigned short parent;
    unsigned short nodeType;
    unsigned short id;
    long streamUnitID;
};

union STREAM_256fake {
    struct Intro *intro;
    struct _SFXMkr *sfxMarker;
};

struct VramBuffer
{
    long flags;
    short x;
    short y;
    short w;
    short h;
    short yOffset;
    short lengthOfLeftOverData;
    short *lineOverFlow;
};

struct STREAM_289fake
{
    int warpgate_in_use;
    char loading;
    char blocked;
    short fadeValue;
    long curTime;
    long maxTime;
    struct _Instance *warpFaceInstance;
};

typedef struct POLY_G4 POLY_G4;

typedef struct DR_AREA DR_AREA;

typedef struct evPositionData evPositionData;

typedef struct STracker STracker;

typedef struct FaceExtents FaceExtents;

typedef struct WarpRoom WarpRoom;

typedef struct PlanningNode PlanningNode;

typedef struct VramBuffer VramBuffer;

union PHYSOBS_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PHYSOBS_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct PHYSOBS_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct evObjectData
{
    short x;
    short y;
    short PathNumber;
    short LinkNode;
    struct _Instance *Force;
    int rc;
};

struct evPhysicsGravityData
{
    short UpperOffset;
    short LowerOffset;
    short x;
    short y;
    short z;
    short slipSlope;
};

struct evPhysicsSlideData
{
    struct _SVector ForwardVector;
    struct _SVector ForwardNormal;
    struct _SVector DropNormal;
    short Segment;
    short DropOffset;
    short UpperOffset;
    short Height;
    struct _Instance *UpperInstance;
    int Dot;
};

struct evObjectThrowData
{
    short type;
    short spinType;
    union {
        struct _Instance *target;
        struct _Position position;
        struct _Rotation direction;
        struct _Position throwVector;
    } data;
    struct _SVector angularVel;
    unsigned short speed;
    short gravity;
    short initialXRot;
    short zVel;
};

struct evObjectBirthProjectileData
{
    struct _Instance *instance;
    int joint;
    int type;
    struct _Instance *birthInstance;
};

struct PhysObWeaponProperties
{
    struct PhysObProperties Properties;
    struct PhysObWeaponAttributes WeaponAttributes;
};

struct PhysObInteractProperties
{
    struct PhysObProperties Properties;
    unsigned short conditions;
    unsigned short auxConditions;
    unsigned short action;
    unsigned short auxAction;
    unsigned char startAnim;
    unsigned char endAnim;
    unsigned char razielAnim;
    unsigned char razielAuxAnim;
    unsigned char frame;
    unsigned char startAnimMode;
    unsigned short distance;
    unsigned short newType;
    unsigned short newClass;
    unsigned short mode;
    unsigned short engageXYDistance;
    short engageZMinDelta;
    short engageZMaxDelta;
    unsigned char engageYCone;
    unsigned char engageZCone;
    unsigned short pad;
    struct PhysObWeaponAttributes *weapon;
};

struct __PhysObProjectileProperties
{
    struct PhysObProperties Properties;
    long totalProjectiles;
    struct __PhysObProjectileData *data;
};

struct PhysObDraftProperties
{
    struct PhysObProperties Properties;
    short force;
    unsigned short radius;
    unsigned short radiusCoef;
    short maxVelocity;
    unsigned long height;
};

struct PhysObSwitchProperties
{
    struct PhysObProperties Properties;
    short Distance;
    short Class;
    unsigned char onAnim;
    unsigned char offAnim;
    unsigned char failedOnAnim;
    unsigned char enableAnim;
    unsigned char shutAnim;
    unsigned char onWalkTimer;
    unsigned char offWalkTimer;
    unsigned char walkMode;
    unsigned char razielOnAnim;
    unsigned char razielOffAnim;
    unsigned char razielFailedOnAnim;
    unsigned char razielEnableAnim;
    unsigned char startMode;
    unsigned char startAnim;
    unsigned short engageXYDistance;
    char engageZMinDelta;
    char engageZMaxDelta;
    unsigned char engageYCone;
    unsigned char engageZCone;
};

struct PhysObCollectibleProperties
{
    struct PhysObProperties Properties;
    short collectClass;
    short collectValue;
    unsigned long distance;
    unsigned char idleAnim;
    unsigned char collectAnim;
    unsigned short spatialNode;
};

struct PhysObAnimatedProperties
{
    struct PhysObProperties Properties;
    unsigned short flags;
    unsigned short pad;
};

struct PhysObData
{
    long Mode;
    short xForce;
    short yForce;
    struct _Instance *Force;
    short LinkNode;
    short px;
    short py;
    short pz;
    short rx1;
    short ry1;
    short rz1;
    short Segment1;
    short rx2;
    short ry2;
    short rz2;
    short Segment2;
    short Steps;
    short Step;
    short PathNumber;
    short Pad1;
    struct _HInfo *RightCollision;
    struct _HInfo *LeftCollision;
    short burnAmpl;
    short throwFlags;
    short initialXRot;
    short xRotVel;
    short yRotVel;
    short zRotVel;
    struct _Instance *throwingInstance;
    int physObTimer;
};

struct BreakOffData
{
    short NewType;
    short NewClass;
};

struct ProjectileData
{
    int Type;
};

struct _PhysObSaveData
{
    struct SwitchData switchData;
    long Mode;
};

typedef struct evObjectData evObjectData;

typedef struct evPhysicsGravityData evPhysicsGravityData;

typedef struct evPhysicsSlideData evPhysicsSlideData;

typedef struct evObjectThrowData evObjectThrowData;

typedef struct evObjectBirthProjectileData evObjectBirthProjectileData;

typedef struct PhysObWeaponProperties PhysObWeaponProperties;

typedef struct PhysObInteractProperties PhysObInteractProperties;

typedef struct __PhysObProjectileProperties PhysObProjectileProperties;

typedef struct PhysObDraftProperties PhysObDraftProperties;

typedef struct PhysObSwitchProperties PhysObSwitchProperties;

typedef struct PhysObCollectibleProperties PhysObCollectibleProperties;

typedef struct PhysObAnimatedProperties PhysObAnimatedProperties;

typedef struct PhysObData PhysObData;

typedef struct BreakOffData BreakOffData;

typedef struct ProjectileData ProjectileData;

typedef struct _PhysObSaveData PhysObSaveData;

union SCRIPT2_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union SCRIPT2_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct SCRIPT2_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union SCRIPT2_198fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct LitShaftProperties
{
    short fadeValue;
    short pad;
};

typedef struct LitShaftProperties LitShaftProperties;

union EVENT_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union EVENT_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct SavedEventSmallVars
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
    short areaID;
    char eventNumber;
    char eventVariables[5];
};

struct WaterLevelProcess
{
    long flags;
    struct BSPTree *bspTree;
    struct _StreamUnit *streamUnit;
    short oldWaterZ;
    short oldGlobalOffset;
    short zValueFrom;
    short zValueTo;
    long maxSteps;
    long curStep;
};

struct EventInstanceObject
{
    short id;
    short flags;
    long unitID;
    long introUniqueID;
    struct _Instance *instance;
    union {
        struct Intro *intro;
        struct _SFXMkr *sfxMarker;
    } data;
};

struct EventEventObject
{
    short id;
    short eventNumber;
    long unitID;
    struct Event *event;
};

struct EventTGroupObject
{
    short id;
    short tgroupNumber;
    long unitID;
    struct BSPTree *bspTree;
    struct _StreamUnit *stream;
};

struct _PCodeStack
{
    long topOfStack;
    struct StackType stack[32];
};

union EVENT_213fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct EventTimer
{
    long flags;
    long time;
    struct Event *event;
    struct ScriptPCode *actionScript;
    short *scriptPos;
    struct Level *level;
    long nextEventIndex;
};

struct SignalResetStruct
{
    struct _MultiSignal *mSignal;
    long timeLeft;
};

struct HintSystemStruct
{
    short flags;
    short hintNumber;
    short stringNumber;
    short pad;
    long fadeTimer;
    long spawningUnitID;
};

typedef struct SavedEventSmallVars SavedEventSmallVars;

typedef struct WaterLevelProcess WaterLevelProcess;

typedef struct EventInstanceObject EventInstanceObject;

typedef struct EventEventObject EventEventObject;

typedef struct EventTGroupObject EventTGroupObject;

typedef struct _PCodeStack PCodeStack;

typedef struct EventTimer EventTimer;

typedef struct SignalResetStruct SignalResetStruct;

typedef struct HintSystemStruct HintSystemStruct;

union STRMLOAD_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union STRMLOAD_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct STRMLOAD_116fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union PHYSICS_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PHYSICS_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct PHYSICS_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct evPhysicsDropOffData
{
    short xOffset;
    short yOffset;
    short DropOffset;
    short slipSlope;
    int UpperOffset;
};

struct evPhysicsEdgeData
{
    short UpperOffset;
    short ForwardOffset;
    short AboveOffset;
    short XDistance;
    short YDistance;
    short ZDistance;
    struct _SVector *Normal1;
    struct _SVector *Normal2;
    struct _SVector *Delta;
    struct _Instance *instance;
    int zRot;
    int rc;
};

struct evPhysicsWallCrawlData
{
    short Segment;
    short Length;
    short ForwardOffset;
    short NormalDistance;
    struct _SVector DropNormal;
    struct _SVector ForwardNormal;
    struct _Position NewPosition;
    struct _Rotation DropRotation;
    short ForwardXRotation;
    int rc;
};

struct evPhysicsSwimData
{
    short CheckDepth;
    short SwimDepth;
    short WadeDepth;
    short TreadDepth;
    struct _SVector *iVelocity;
    short Depth;
    short WaterDepth;
    short rc;
    short pad;
    int WaterLevel;
};

struct evPhysicsDropHeightData
{
    struct _Position origin;
    short mode;
    short DropOffset;
    short result;
    struct BSPTree *bsp;
    struct _TFace *tface;
};

struct evPhysicsLinkedMoveData
{
    struct _Instance *instance;
    int segment;
    struct _SVector posDelta;
    struct _SVector rotDelta;
};

union PHYSICS_198fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

typedef struct evPhysicsDropOffData evPhysicsDropOffData;

typedef struct evPhysicsEdgeData evPhysicsEdgeData;

typedef struct evPhysicsWallCrawlData evPhysicsWallCrawlData;

typedef struct evPhysicsSwimData evPhysicsSwimData;

typedef struct evPhysicsDropHeightData evPhysicsDropHeightData;

typedef struct evPhysicsLinkedMoveData evPhysicsLinkedMoveData;

union REAVER_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union REAVER_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct REAVER_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union REAVER_209fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union HUNTER_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union HUNTER_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct HUNTER_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union HUNTER_188fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct _MonsterAnim
{
    unsigned short velocity;
    unsigned short distance;
    unsigned short playSpeed;
    unsigned char interpFrames;
    unsigned char startFrame;
    unsigned char interpOut;
    unsigned char alphaTable;
    unsigned char alphaTableOut;
    unsigned char controllingSection;
    char index[3];
    char pad;
};

struct _MonsterIdle
{
    char anim;
    char alertMod;
    char probability;
    char pad;
};

struct _MonsterBehavior
{
    char alertness;
    char idleFreq;
    char numIdles;
    char idleList[5];
};

struct _MonsterSenses
{
    short sightArc;
    short sightRadius;
    short sightElevation;
    short soundArc;
    short soundRadius;
    short soundElevation;
    unsigned short scentRadius;
    short alarmRadius;
    unsigned short allyRadius;
};

struct _MonsterAllegiances
{
    unsigned long enemies;
    unsigned long allies;
    unsigned long food;
    unsigned long gods;
};

struct _MonsterAttackAttributes
{
    short attackRange;
    short attackHeight;
    short knockBackDistance;
    char knockBackDuration;
    char damage;
    char sphereSegment;
    char sphereOnFrame;
    char sphereOnAnim;
    char sphereOffFrame;
    char sphereOffAnim;
    char turnFrames;
    char numAnims;
    char attackProbability[12];
    char animList[5];
};

struct _MonsterMissile
{
    unsigned short speed;
    unsigned short range;
    unsigned char frame;
    unsigned char anim;
    unsigned char segment;
    unsigned char damage;
    unsigned char type;
    unsigned char graphic;
    char gravity;
    char reload;
    char fireChance;
    unsigned char numAnims;
    char animList[2];
};

struct _MonsterCombatAttributes
{
    short stunTime;
    short damageTime;
    short recovery;
    short surpriseTime;
    short grabTime;
    short combatRange;
    short surpriseRange;
    short allyRange;
    short enemyAttackRange;
    short suckPower;
    short suckRange;
    short suckTime;
    char hitPoints;
    char numAttacks;
    char missileAttack;
    char ambushAttack;
    char evadeProbability[12];
    char attackList[1];
};

struct _MonsterSubAttributes
{
    char *animList;
    struct _MonsterSenses *senses;
    struct _MonsterCombatAttributes *combatAttributes;
    struct _MonsterAllegiances *allegiances;
    char *behaviorList;
    short scale;
    short fallDistance;
    short defAmbushRange;
    short fleeRange;
    short speedPivotTurn;
    short speedWalkTurn;
    short speedRunTurn;
    short speedFleeTurn;
    short forgetTime;
    unsigned char modelNum;
    unsigned char physAbility;
    unsigned char stunnable;
    unsigned char grabable;
    unsigned char numSections;
    unsigned char sectionEnd[3];
    short defPlayerAttitude;
    short defWanderRange;
    short defGuardRange;
    unsigned char defInitialBehavior;
    unsigned char defTriggeredBehavior;
    char defActiveBehavior;
    unsigned char defSpectral;
    unsigned char sunVuln;
    unsigned char fireVuln;
    unsigned char waterVuln;
    unsigned char impaleVuln;
    unsigned char soundVuln;
    unsigned char weaponVuln;
    unsigned char missileVuln;
    unsigned char bruiseRed;
    unsigned char bruiseGreen;
    unsigned char bruiseBlue;
    short minSpikeRange;
    short maxSpikeRange;
    short maxSpikeAngle;
    short minSpikeHorzSpeed;
    short maxSpikeHorzSpeed;
    short maxSpikeVertSpeed;
    short upOnGroundOffset;
    short downOnGroundOffset;
};

struct _MonsterAttributes
{
    unsigned long magicnum;
    void *tunData;
    char *auxAnimList;
    char *ambientAnimList;
    long whatAmI;
    char numAuxAnims;
    char numAmbientAnims;
    unsigned char defaultAge;
    char pupateObject;
    unsigned char damageFXSegment;
    unsigned char headSegment;
    unsigned char neckSegment;
    unsigned char leftShoulderSegment;
    unsigned char rightShoulderSegment;
    unsigned char waistSegment;
    unsigned char leftKneeSegment;
    unsigned char rightKneeSegment;
    unsigned char leftFootSegment;
    unsigned char rightFootSegment;
    unsigned char spineSegment;
    unsigned char leftWeaponSegment;
    unsigned char rightWeaponSegment;
    unsigned char grabSegment;
    unsigned char bloodImpaleFrame;
    unsigned char bloodConeFrame;
    char numSubAttributes;
    char numCombatAttributes;
    char numAttackAttributes;
    char numMissiles;
    char numAnims;
    char numIdles;
    char numBehaviors;
    char numShatters;
    struct _MonsterSubAttributes **subAttributesList;
    struct _MonsterCombatAttributes **combatAttributesList;
    struct _MonsterAttackAttributes *attackAttributesList;
    struct _MonsterMissile *missileList;
    struct _MonsterAnim *animList;
    struct _MonsterIdle *idleList;
    struct _MonsterBehavior *behaviorList;
    void *shatterList;
};

struct _MonsterVars
{
    unsigned long mvFlags;
    unsigned long auxFlags;
    struct __MessageQueue messageQueue;
    struct _MonsterIR *monsterIRList;
    struct _G2AnimInterpInfo_Type interpInfo[3];
    struct _MonsterAttackAttributes *attackType;
    struct _MonsterAnim *anim;
    void *messageData;
    struct _MonsterIR *enemy;
    struct _MonsterIR *leader;
    struct _MonsterIR *ally;
    struct _Instance *held;
    long heldID;
    long soulID;
    void *effect;
    unsigned long radarMap;
    unsigned long radarCounter;
    short radarDistance[16];
    unsigned long mode;
    unsigned long damageTimer;
    unsigned long stunTimer;
    unsigned long generalTimer;
    unsigned long effectTimer;
    struct _Position *lookAtPos;
    struct _Position destination;
    short speed;
    struct _Position lastValidPos;
    struct _Position lookAtPosData;
    short fleeMarker;
    short wanderRange;
    short guardRange;
    short ambushRange;
    short ambushArc;
    short ambushElevation;
    short hitPoints;
    short maxHitPoints;
    short soulJuice;
    short regenTime;
    short mainColorVertex;
    short lookAngleX;
    short lookAngleZ;
    unsigned short avoidMask;
    unsigned short damageType;
    char ambushMarker;
    char ambushJumpType;
    unsigned char causeOfDeath;
    char previousMainState;
    unsigned char behaviorState;
    unsigned char initialBehavior;
    unsigned char triggeredBehavior;
    char activeBehavior;
    unsigned char age;
    char attackState;
    unsigned char ambient;
    char alertness;
    char alertCount;
    char senseIndex;
    char lastSideMove;
    char chance;
    char pathSlotID;
    struct _MonsterSubAttributes *subAttr;
    struct _MonsterIR *freeIRs;
    void *extraVars;
    short validUnits[10];
    short patrolMarkers[12];
    short *currentMarker;
    long terrainImpaleID;
    short targetFade;
    short fadeRate;
};

struct _MonsterIR
{
    struct _MonsterIR *next;
    struct _Instance *instance;
    long handle;
    struct _SVector relativePosition;
    short distance;
    unsigned short mirFlags;
    unsigned short mirConditions;
    unsigned long forgetTimer;
    unsigned long idleTime;
};

struct burntTuneType
{
    int burntDist;
    int fadeDelta;
};

struct _MonsterState
{
    void (*entryFunction)();
    void (*stateFunction)();
};

struct _MonsterStateChoice
{
    int state;
    struct _MonsterState functions;
};

struct _MonsterFunctionTable
{
    void (*initFunc)();
    void (*cleanUpFunc)();
    void (*damageEffectFunc)();
    unsigned long (*queryFunc)();
    void (*messageFunc)();
    struct _MonsterStateChoice *stateFuncs;
    char *versionID;
    char *localVersionID;
};

struct _HunterVars
{
    short startIdx;
    short endIdx;
    int rem_time;
    int timer;
    short angles[16];
};

struct _HunterAttributes
{
    int timeToFire;
};

typedef struct _MonsterAnim MonsterAnim;

typedef struct _MonsterIdle MonsterIdle;

typedef struct _MonsterBehavior MonsterBehavior;

typedef struct _MonsterSenses MonsterSenses;

typedef struct _MonsterAllegiances MonsterAllegiances;

typedef struct _MonsterAttackAttributes MonsterAttackAttributes;

typedef struct _MonsterMissile MonsterMissile;

typedef struct _MonsterCombatAttributes MonsterCombatAttributes;

typedef struct _MonsterSubAttributes MonsterSubAttributes;

typedef struct _MonsterAttributes MonsterAttributes;

typedef struct _MonsterVars MonsterVars;

typedef struct _MonsterIR MonsterIR;

typedef struct burntTuneType burntTuneType;

typedef struct _MonsterState MonsterState;

typedef struct _MonsterStateChoice MonsterStateChoice;

typedef struct _MonsterFunctionTable MonsterFunctionTable;

typedef struct _HunterVars HunterVars;

typedef struct _HunterAttributes HunterAttributes;

typedef void (*processVert_t)();

typedef void (*MonsterFunc)();

typedef void (*MonsterDamageFunc)();

union MISSILE_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MISSILE_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct MISSILE_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MISSILE_191fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct MissileGraphics
{
    unsigned char object;
    unsigned char model;
};

typedef struct MissileGraphics MissileGraphics;

union MONAPI_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MONAPI_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct MONAPI_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct evMonsterHitTerrainData
{
    struct _TFace *tface;
    struct _Normal normal;
    short faceFlags;
};

struct evMonsterHitObjectData
{
    struct _Instance *instance;
    int hitType;
};

union MONAPI_196fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct evShadowSegmentData
{
    unsigned long totalShadowSegments;
    unsigned short shadowSegments[4];
};

struct _MonsterSaveInfo
{
    long mvFlags;
    long auxFlags;
    short soulID;
    short soulJuice;
    unsigned int age;
    unsigned int state;
    unsigned int behaviorState;
    unsigned int anim;
    unsigned int causeOfDeath;
};

typedef struct evMonsterHitTerrainData evMonsterHitTerrainData;

typedef struct evMonsterHitObjectData evMonsterHitObjectData;

typedef struct evShadowSegmentData evShadowSegmentData;

typedef struct _MonsterSaveInfo MonsterSaveInfo;

union RAZCNTRL_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union RAZCNTRL_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct RAZCNTRL_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union STATE_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union STATE_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct STATE_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct __CharacterState
{
    struct _Instance *CharacterInstance;
    int TotalSections;
    struct __State SectionList[3];
};

struct evMonsterHitData
{
    struct _Instance *sender;
    struct _Instance *lastHit;
    short knockBackDistance;
    short knockBackDuration;
    long power;
};

struct evMonsterThrownData
{
    struct _Instance *sender;
    struct _Rotation direction;
    short power;
};

struct evMonsterAlarmData
{
    struct _Instance *sender;
    struct _Position position;
    short type;
};

struct evMonsterSoulSuckData
{
    struct _Instance *sender;
    struct _Position Destination;
};

struct evFXHitData
{
    struct _SVector location;
    struct _SVector velocity;
    short amount;
    short type;
};

struct evAnimationControllerDoneData
{
    struct _Instance *instance;
    long segment;
    long type;
    int data;
};

struct evMonsterImpaleData
{
    struct _Instance *weapon;
    struct _Rotation direction;
    struct _Position position;
    short distance;
};

struct evObjectBreakOffData
{
    struct _Instance *force;
    unsigned short node;
    short distance;
    unsigned short animation;
    unsigned short frame;
    unsigned short type;
    unsigned short action;
};

struct evObjectAbsorbData
{
    struct _Instance *force;
    unsigned short node;
    unsigned short steps;
};

struct evObjectIdleData
{
    long mode;
    struct _Instance *instance;
};

struct evControlInitHangData
{
    struct _Instance *instance;
    int frame;
    int frames;
};

struct evControlInitIdleData
{
    int mode;
    int frame;
    int frames;
};

struct evActionLookAroundData
{
    short *rotx;
    short *rotz;
    short minx;
    short maxx;
    short minz;
    short maxz;
};

struct evActionPlayHostAnimationData
{
    struct _Instance *instance;
    struct _Instance *host;
    int newAnim;
    int newFrame;
    int frames;
    int mode;
};

typedef struct __CharacterState CharacterState;

typedef struct evMonsterHitData evMonsterHitData;

typedef struct evMonsterThrownData evMonsterThrownData;

typedef struct evMonsterAlarmData evMonsterAlarmData;

typedef struct evMonsterSoulSuckData evMonsterSoulSuckData;

typedef struct evFXHitData evFXHitData;

typedef struct evAnimationControllerDoneData evAnimationControllerDoneData;

typedef struct evMonsterImpaleData evMonsterImpaleData;

typedef struct evObjectBreakOffData evObjectBreakOffData;

typedef struct evObjectAbsorbData evObjectAbsorbData;

typedef struct evObjectIdleData evObjectIdleData;

typedef struct evControlInitHangData evControlInitHangData;

typedef struct evControlInitIdleData evControlInitIdleData;

typedef struct evActionLookAroundData evActionLookAroundData;

typedef struct evActionPlayHostAnimationData evActionPlayHostAnimationData;

union VRAM_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union VRAM_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct VRAM_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union VRAM_205fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union GLYPH_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union GLYPH_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct GLYPH_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union GLYPH_209fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct __GlyphData
{
    void (*process)();
    struct __MessageQueue messages;
    short selectedGlyph;
    short glyph_open;
    short glyph_time;
    short glyph_radius;
    short glyph_scale;
    short glyph_rotation;
    short target_glyph_rotation;
    short glyph_movement;
};

typedef struct __GlyphData GlyphData;

union HUMAN_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union HUMAN_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct HUMAN_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union HUMAN_188fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union MONMSG_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MONMSG_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct MONMSG_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MONMSG_191fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union MONSENSE_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MONSENSE_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct MONSENSE_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct evPhysicsLOSData
{
    struct _Position destination;
    short arc;
    struct _Position origin;
    short flags;
    short result;
};

union MONSENSE_191fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct RadarInfo
{
    short angle;
    short x;
    short y;
};

typedef struct evPhysicsLOSData evPhysicsLOSData;

typedef struct RadarInfo RadarInfo;

union MONSTER_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MONSTER_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct MONSTER_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MONSTER_208fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct burntMessType
{
    int closestvert;
    int closestdist;
    int closestseg;
    struct burntTuneType *burntTune;
};

struct bloodyMessType
{
    int closestvert;
    int closestdist;
    int closestseg;
    int bloodiedAVert;
    int bloodIntensity;
};

typedef struct burntMessType burntMessType;

typedef struct bloodyMessType bloodyMessType;

union MONLIB_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MONLIB_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct MONLIB_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MONLIB_202fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

enum MonsterAnim
{
    MONSTER_ANIM_HIT1 = 0,
    MONSTER_ANIM_HIT2 = 1,
    MONSTER_ANIM_WALK = 2,
    MONSTER_ANIM_RUN = 3,
    MONSTER_ANIM_GRABBED = 4,
    MONSTER_ANIM_STUNNED = 5,
    MONSTER_ANIM_JUMPFORWARD = 6,
    MONSTER_ANIM_JUMPBACK = 7,
    MONSTER_ANIM_JUMPLEFT = 8,
    MONSTER_ANIM_JUMPRIGHT = 9,
    MONSTER_ANIM_STANCE_HEALTHY = 10,
    MONSTER_ANIM_STANCE_VULNERABLE = 11,
    MONSTER_ANIM_STUNNED_RECOVERY = 12,
    MONSTER_ANIM_IMPALED = 13,
    MONSTER_ANIM_STRUGGLE = 14,
    MONSTER_ANIM_BREAKHOLD = 15,
    MONSTER_ANIM_THROWN = 16,
    MONSTER_ANIM_IMPACT = 17,
    MONSTER_ANIM_LANDONFEET = 18,
    MONSTER_ANIM_FALL = 19,
    MONSTER_ANIM_BREAKFALL = 20,
    MONSTER_ANIM_SPINLAND = 21,
    MONSTER_ANIM_IMPALEDEATH = 22,
    MONSTER_ANIM_GETUP = 23,
    MONSTER_ANIM_GENERALDEATH = 24,
    MONSTER_ANIM_MISSILEIMPALEDEATH = 25,
    MONSTER_ANIM_SURPRISED = 26,
    MONSTER_ANIM_AGONY = 27,
    MONSTER_ANIM_PUPATE = 28,
    MONSTER_ANIM_NOTICE = 29,
    MONSTER_ANIM_SOULSUCK = 30,
    MONSTER_ANIM_IMPALEHORZ = 31,
    MONSTER_ANIM_IMPALEVERT = 32,
    MONSTER_ANIM_SOULOUTGRND = 33,
    MONSTER_ANIM_SOULOUTHORZ = 34,
    MONSTER_ANIM_SOULOUTVERT = 35,
    MONSTER_ANIM_FALLOVER = 36,
    MONSTER_ANIM_EMBRACE = 37,
    MONSTER_ANIM_SHOVE = 38,
    MONSTER_ANIM_FLIPSWITCH = 39,
    MONSTER_ANIM_EVADELEFT = 40,
    MONSTER_ANIM_EVADERIGHT = 41,
    MONSTER_ANIM_ALARM = 42,
    MONSTER_ANIM_DEAF = 43,
    MONSTER_ANIM_BLIND = 44,
    MONSTER_ANIM_SUCKED = 45,
    MONSTER_NUM_ANIMS = 46,
};

enum MonsterState
{
    MONSTER_STATE_BIRTH = 0,
    MONSTER_STATE_PURSUE = 1,
    MONSTER_STATE_IDLE = 2,
    MONSTER_STATE_MISSILEHIT = 3,
    MONSTER_STATE_FALL = 4,
    MONSTER_STATE_WANDER = 5,
    MONSTER_STATE_ATTACK = 6,
    MONSTER_STATE_IMPALEDEATH = 7,
    MONSTER_STATE_HIT = 8,
    MONSTER_STATE_STUNNED = 9,
    MONSTER_STATE_GRABBED = 10,
    MONSTER_STATE_THROWN = 11,
    MONSTER_STATE_IMPACT = 12,
    MONSTER_STATE_COMBAT = 13,
    MONSTER_STATE_BREAKHOLD = 14,
    MONSTER_STATE_LANDONFEET = 15,
    MONSTER_STATE_GENERALDEATH = 16,
    MONSTER_STATE_ENVIRONMENTDAMAGE = 17,
    MONSTER_STATE_LANDINWATER = 18,
    MONSTER_STATE_FLEE = 19,
    MONSTER_STATE_HIDE = 20,
    MONSTER_STATE_SURPRISEATTACK = 21,
    MONSTER_STATE_PARRY = 22,
    MONSTER_STATE_DEAD = 23,
    MONSTER_STATE_SURPRISED = 24,
    MONSTER_STATE_NOTICE = 25,
    MONSTER_STATE_PUPATE = 26,
    MONSTER_STATE_EMBRACE = 27,
    MONSTER_STATE_PROJECTILE = 28,
    MONSTER_STATE_TERRAINIMPALEDEATH = 29,
    MONSTER_STATE_PETRIFIED = 30,
    MONSTER_NUM_STATES = 31,
};

union VWRAITH_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union VWRAITH_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct VWRAITH_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union VWRAITH_188fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union SKINNER_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union SKINNER_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct SKINNER_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union SKINNER_208fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union SLUAGH_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union SLUAGH_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct SLUAGH_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union SLUAGH_188fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union SOUL_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union SOUL_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct SOUL_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union SOUL_188fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union MONTABLE_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MONTABLE_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct MONTABLE_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MONTABLE_183fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct MONTABLE_202fake
{
    long whatAmI;
    struct _MonsterFunctionTable *table;
};

union MORLOCK_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MORLOCK_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct MORLOCK_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MORLOCK_188fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union INSTNCG2_23fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union INSTNCG2_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct INSTNCG2_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MAING2_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MAING2_72fake {
    long color;
    struct _RGBAColor rgba;
};

union MATRIXG2_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MATRIXG2_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct MATRIXG2_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MATRIXG2_195fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct _G2PoolMemPool_Type
{
    unsigned short blockSize;
    unsigned short stackTop;
    unsigned short stackSize;
    unsigned short *stack;
    struct _G2PoolMem_Type *blockPool;
};

typedef struct _G2PoolMemPool_Type G2PoolMemPool;

typedef void G2PoolMem;

union QUATG2_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union QUATG2_72fake {
    long color;
    struct _RGBAColor rgba;
};

union TIMERG2_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union TIMERG2_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct TIMERG2_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct _G2AppDataVM_Type
{
    int argc;
    int *argv;
};

typedef struct _G2AppDataVM_Type G2AppDataVM;

union WORSHIP_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union WORSHIP_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct WORSHIP_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union WORSHIP_188fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union MBMISS_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MBMISS_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct MBMISS_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union MBMISS_208fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct _walbossAttributes
{
    unsigned char segmentToAttach;
    unsigned char frameToBirth;
    unsigned char frameToExpel;
    unsigned char maxEggHits;
    short maxAngle;
    short timeForHitAgony;
    short segmentForBodyTwist;
    short timeToThornPrep;
    short timeToThornPoke;
    short timeToEggThrob;
    short timeToEggExplode;
    short razielStunTime;
    short eggIgniteDist;
    short junk;
    struct
    {
        short plusDelta;
        short minusDelta;
        short validAtHitPoint;
    } attackDeltas;
};

typedef struct _walbossAttributes WalbossAttributes;

struct _G2AnimController_Type
{
    unsigned short next;
    unsigned char type;
    unsigned char segNumber;
    void *callbackData;
    unsigned short flags;
    short duration;
    short elapsedTime;
    struct _G2AnimAlphaTable_Type *alphaTable;
    union {
        struct
        {
            unsigned long (*function)();
            void *fnData;
        } callback;
        struct
        {
            struct _G2SVector3_Type base;
            struct _G2SVector3_Type offset;
        } vector;
        struct
        {
            struct _G2Quat_Type src;
            struct _G2Quat_Type dest;
        } quat;
    } data;
};

union ANIMG2_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct ANIMG2_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union ANIMG2_195fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct _G2AnimSegKeyflagInfo_Type
{
    unsigned long *stream;
    unsigned long flags;
    int bitCount;
};

struct _G2AnimDecompressChannelInfo_Type
{
    struct _G2AnimKeylist_Type *keylist;
    unsigned short *chanData;
    int storedKey;
    int targetKey;
};

struct _G2AnimSegValue_Type
{
    union {
        struct _G2SVector3_Type rot;
        struct _G2Quat_Type quat;
    } rotQuat;
    struct _G2SVector3_Type scale;
    unsigned short pad;
    struct _G2SVector3_Type trans;
    unsigned short bIsQuat;
};

struct _G2AnimChanStatusBlockPool_Type
{
    unsigned short blockSize;
    unsigned short stackTop;
    unsigned short stackSize;
    unsigned short *stack;
    struct _G2AnimChanStatusBlock_Type *blockPool;
};

struct _G2AnimControllerPool_Type
{
    unsigned short blockSize;
    unsigned short stackTop;
    unsigned short stackSize;
    unsigned short *stack;
    struct _G2AnimController_Type *blockPool;
};

struct _G2AnimInterpStateBlockPool_Type
{
    unsigned short blockSize;
    unsigned short stackTop;
    unsigned short stackSize;
    unsigned short *stack;
    struct _G2AnimInterpStateBlock_Type *blockPool;
};

typedef struct _G2AnimController_Type G2AnimController;

typedef struct _G2AnimSegKeyflagInfo_Type G2AnimSegKeyflagInfo;

typedef struct _G2AnimDecompressChannelInfo_Type G2AnimDecompressChannelInfo;

typedef struct _G2AnimSegValue_Type G2AnimSegValue;

typedef struct _G2AnimChanStatusBlockPool_Type G2AnimChanStatusBlockPool;

typedef struct _G2AnimControllerPool_Type G2AnimControllerPool;

typedef struct _G2AnimInterpStateBlockPool_Type G2AnimInterpStateBlockPool;

typedef void (*G2AnimApplyControllerFn)();

union QUATVM_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union QUATVM_72fake {
    long color;
    struct _RGBAColor rgba;
};

union ENMYPLAN_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union ENMYPLAN_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct ENMYPLAN_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union ENMYPLAN_211fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct EnemyPlanData
{
    unsigned char nodeSkipArray[8];
    unsigned char nodeTypeArray[8];
    struct _Position wayPointArray[8];
    short goalUnitID;
    unsigned char numWayPoints;
};

struct EnemyPlanSlotData
{
    char slotInUse;
    char state;
    char wayPointBeingServoedTo;
    struct _Position startPos;
    struct _Position goalPos;
    struct _Position oldCurrentPos;
    struct EnemyPlanData planData;
    char targetType;
    short timer;
};

typedef struct EnemyPlanData EnemyPlanData;

typedef struct EnemyPlanSlotData EnemyPlanSlotData;

union PLAN_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PLAN_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct PLAN_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union PLAN_211fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct _PlanCollideInfo
{
    long StreamUnitID;
    struct _TFace *tFace;
    struct _Position collidePos;
};

typedef struct _PlanCollideInfo PlanCollideInfo;

union PLANAPI_112fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PLANAPI_113fake {
    long color;
    struct _RGBAColor rgba;
};

struct PLANAPI_150fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union PLANAPI_206fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct PoolManagementData
{
    char state;
    unsigned char numNodesInPool;
    struct _Position playerPosAtLastPlanMkrUpdate;
    struct PlanningNode *expansionNode1;
    struct PlanningNode *expansionNode2;
    unsigned short (*distanceMatrix)[32];
    unsigned short pairType;
    struct _Position peakPos;
    unsigned char currentNode;
    unsigned char currentBit;
};

typedef struct PoolManagementData PoolManagementData;

union PLANCOLL_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PLANCOLL_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct PLANCOLL_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union PLANCOLL_211fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct _fth
{
    char x;
    char y;
    char z;
    char nodeType;
};

typedef struct _fth FindTerrainHit;

union PLANDRAW_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PLANDRAW_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct PLANDRAW_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union PLANDRAW_205fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union PLANOPT_112fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PLANOPT_113fake {
    long color;
    struct _RGBAColor rgba;
};

struct PLANOPT_150fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union PLANOPT_206fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union PLANPOOL_112fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PLANPOOL_113fake {
    long color;
    struct _RGBAColor rgba;
};

struct PLANPOOL_150fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union PLANPOOL_206fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union PLANSRCH_112fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union PLANSRCH_113fake {
    long color;
    struct _RGBAColor rgba;
};

struct PLANSRCH_150fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union PLANSRCH_206fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union CONTROL_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union CONTROL_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct CONTROL_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union CONTROL_198fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct __Force
{
    int Type;
    struct _Vector LinearForce;
    short Friction;
};

struct __Idle
{
    unsigned char anim;
    unsigned char frame;
    unsigned char frames;
    unsigned char type;
};

struct __VAnim
{
    unsigned char anim0;
    unsigned char anim1;
    unsigned char anim2;
    unsigned char frames;
    unsigned char mode;
    unsigned char alpha;
    unsigned short frame;
};

struct __SAnim
{
    struct __VAnim *anim;
    struct __SAnim *nextAnim;
    short mode;
    short data;
    short speedAdjust;
    short pad;
};

struct __AttackItem
{
    unsigned char anim;
    unsigned char framesIn;
    unsigned char alphaIn;
    unsigned char framesOut;
    unsigned char switchDelay;
    unsigned char ignoreDelay;
    unsigned char segmentToGlow;
    unsigned char startCollisionFrame;
    unsigned char handsToCollide;
    unsigned char endCollisionFrame;
    unsigned char ribbonStartFrame;
    unsigned char ribbonStartSegment;
    unsigned char ribbonEndSegment;
    unsigned char ribbonLifeTime;
    unsigned char ribbonFaceLifeTime;
    unsigned char knockBackFrames;
    unsigned char glowFadeInFrames;
    unsigned char glowFadeOutFrames;
    unsigned short ribbonStartOpacity;
    unsigned long ribbonStartColor;
    unsigned long ribbonEndColor;
    unsigned long glowColor;
    unsigned short knockBackDistance;
    unsigned short hitPowerScale;
};

struct __ThrowItem
{
    unsigned char prepAnim;
    unsigned char prepAnimFramesIn;
    unsigned char prepAnimAlphaIn;
    unsigned char coilAnim;
    unsigned char coilAnimFramesIn;
    unsigned char coilAnimAlphaIn;
    unsigned char throwAnim;
    unsigned char throwAnimFramesInFactor;
    unsigned char throwFrameToLaunch;
    unsigned char framesOut;
    short launchPointX;
    short launchPointY;
    short launchPointZ;
    short maxXRotation;
    short minXRotation;
    short maxZRotation;
    short minZRotation;
    short velocity;
    short gravity;
    short coilRot;
    short pad;
};

struct __EngagedInstance
{
    struct _Instance *instance;
    unsigned long distance;
};

struct __FitPoint
{
    short x;
    short y;
};

struct __SensoryData
{
    int Flags;
    struct _SVector ForwardNormal;
    struct _SVector AboveNormal;
    struct _SVector BelowNormal;
    struct _SVector BelowPoint;
    struct _SVector Delta;
    struct _Instance *HitMonster;
    struct _Instance *CurrentAutoFace;
    struct _Instance *LastAutoFace;
    struct __EngagedInstance *EngagedList;
    unsigned long EngagedMask;
    struct _Vector lookAtPoint;
    unsigned long heldClass;
};

struct __Player
{
    int footPrint;
    struct __CharacterState State;
    int Mode;
    int Anim;
    int RotationSegment;
    struct _SVector iVelocity;
    int Magnitude;
    int input;
    int lastInput;
    int ZDirection;
    short Bearing;
    short LastBearing;
    int steeringMode;
    short steeringVelocity;
    short steeringAcceleration;
    int steeringLockRotation;
    short movementMinRate;
    short movementMaxRate;
    short movementMinAnalog;
    short movementMaxAnalog;
    struct __SensoryData Senses;
    struct _Instance *attachedPlatform;
    short dropOffHeight;
    short fallZVelocity;
    short HealthScale;
    short HealthBalls;
    int HitPoints;
    int DamageFrequency;
    int invincibleTimer;
    int Abilities;
    struct _Instance *GlyphSystem;
    unsigned short GlyphManaBalls;
    unsigned short GlyphManaMax;
    struct __FitPoint *constrictData;
    short constrictIndex;
    short constrictWaitIndex;
    struct _SVector constrictCenter;
    short constrictFlag;
    short constrictGoodCircle;
    unsigned long constrictXTotal;
    unsigned long constrictYTotal;
    struct _Instance *soulReaver;
    unsigned long currentSoulReaver;
    int CurrentPlane;
    int slipSlope;
    unsigned long idleCount;
    struct _Instance *idleInstance;
    struct __AttackItem *attack;
    int attackFlags;
    int currentAttack;
    struct _Instance *attackCurrentHit;
    struct _Instance *attackLastHit;
    struct _FXGlowEffect *glowEffect;
    struct _Instance *attackedBy;
    struct __ThrowItem *throwData;
    int throwMode;
    struct _Position throwTarget;
    struct _Instance *throwInstance;
    short throwXRot;
    short throwZRot;
    int throwReturnRot;
    struct __MessageQueue padCommands;
    void (*returnState)();
    unsigned long passedMask;
    struct _G2SVector3_Type extraRot;
    int effectsFlags;
    short effectsFadeSource;
    short effectsFadeDest;
    int effectsFadeStep;
    int effectsFadeSteps;
    short autoFaceZone;
    short autoFaceAngle;
    int autoFaceLastRootAngle;
    int autoFaceRootAngle;
    int autoFaceTrueAngle;
    int autoFaceAnim;
    int autoFaceLastAnim;
    int nothingCounter;
    int timeAccumulator;
    struct _Position puppetMoveToPoint;
    struct _Position puppetRotToPoint;
    int soundModifier;
    short alarmTable;
    short terminator;
    short swimSpeedAdjustment;
    short swimTargetSpeed;
    unsigned long soundHandle;
    long soundTimer;
    long soundTotalTime;
    unsigned long soundDistance;
    short soundStartPitch;
    short soundEndPitch;
    short soundStartVolume;
    short soundEndVolume;
    unsigned long soundHandle2;
    long soundTimer2;
    long soundTotalTime2;
    unsigned long soundDistance2;
    short soundStartPitch2;
    short soundEndPitch2;
    short soundStartVolume2;
    short soundEndVolume2;
    long soundTimerNext;
    unsigned long soundTimerData;
    unsigned long forcedGlideSpeed;
    struct _SVector collisionEdgeOffset;
    struct __SAnim *currentSAnim;
    unsigned long playerEvent;
    unsigned long playerEventHistory;
    int currentHint;
};

typedef struct __Force Force;

typedef struct __Idle Idle;

typedef struct __VAnim VAnim;

typedef struct __SAnim SAnim;

typedef struct __AttackItem AttackItem;

typedef struct __ThrowItem ThrowItem;

typedef struct __EngagedInstance EngagedInstance;

typedef struct __FitPoint FitPoint;

typedef struct __SensoryData SensoryData;

typedef struct __Player Player;

union RAZIEL_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union RAZIEL_72fake {
    long color;
    struct _RGBAColor rgba;
};

union RAZIEL_198fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union RAZIEL_252fake {
    struct Intro *intro;
    struct _SFXMkr *sfxMarker;
};

struct __CannedSound
{
    short bank;
    short sound;
    short startPitch;
    short endPitch;
    short startVolume;
    short endVolume;
    long time;
    long distance;
};

struct __AlarmData
{
    short command;
    short data;
};

struct _SoundRamp
{
    unsigned long soundHandle;
    long soundTimer;
    long soundTotalTime;
    unsigned long soundDistance;
    short soundStartPitch;
    short soundEndPitch;
    short soundStartVolume;
    short soundEndVolume;
};

struct PlayerSaveData
{
    unsigned long abilities;
    unsigned long currentPlane;
    unsigned long healthScale;
    unsigned long healthBalls;
    unsigned short manaBalls;
    unsigned short manaMax;
    unsigned long playerEventHistory;
};

struct RazielData
{
    unsigned long version;
    unsigned long nonBurningRibbonStartColor;
    unsigned long nonBurningRibbonEndColor;
    struct __Idle ***idleList;
    struct __AttackItem ***attackList;
    struct __ThrowItem **throwList;
    struct __VAnim *virtualAnimations;
    struct __VAnim *virtualAnimSingle;
    struct __SAnim **stringAnimations;
    short throwFadeValue;
    short throwFadeInRate;
    int throwFadeOutRate;
    int throwManualDistance;
    short healthMaterialRate;
    short healthSpectralRate;
    short healthInvinciblePostHit;
    short healthInvinciblePostShunt;
    short forceMinPitch;
    short forceMaxPitch;
    short forceMinVolume;
    short forceMaxVolume;
    unsigned long forceRampTime;
    int SwimPhysicsFallDamping;
    int SwimPhysicsWaterFrequency;
    int SwimPhysicsWaterAmplitude;
    int SwimPhysicsUnderDeceleration;
    int SwimPhysicsUnderKickVelocity;
    int SwimPhysicsUnderKickAccel;
    int SwimPhysicsUnderVelocity;
    int SwimPhysicsUnderKickDecel;
    int SwimPhysicsUnderStealthAdjust;
    int SwimPhysicsCoilVelocity;
    int SwimPhysicsCoilDecelerationIn;
    int SwimPhysicsCoilDecelerationOut;
    int SwimPhysicsShotVelocity;
    int SwimPhysicsShotAccelerationIn;
    int SwimPhysicsShotAccelerationOut;
    int SwimPhysicsSurfVelocity;
    int SwimPhysicsSurfAccelerationIn;
    int SwimPhysicsSurfAccelerationOut;
    int SwimPhysicsSurfKickVelocity;
    int SwimPhysicsSurfKickAccel;
    int SwimPhysicsSurfMinRotation;
    int SwimPhysicsSurfMaxRotation;
    int SwimPhysicsSurfKickDecel;
};

struct __razController
{
    unsigned short segment;
    unsigned short type;
};

typedef struct __CannedSound CannedSound;

typedef struct __AlarmData AlarmData;

typedef struct _SoundRamp SoundRamp;

typedef struct PlayerSaveData PlayerSaveData;

typedef struct RazielData RazielData;

typedef struct __razController razController;

struct DR_STP
{
    unsigned long tag;
    unsigned long code[2];
};

union UNDRWRLD_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union UNDRWRLD_77fake {
    long color;
    struct _RGBAColor rgba;
};

struct UNDRWRLD_114fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union UNDRWRLD_190fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct UW_ScreenXY
{
    short sx;
    short sy;
    short dx;
    short dy;
};

typedef struct DR_STP DR_STP;

typedef struct UW_ScreenXY UW_ScreenXY;

struct cinema_fn_table_t
{
    int (*play)();
    char *versionID;
};

union CINEPSX_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union CINEPSX_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct CINEPSX_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

union CINEPSX_183fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

union CINEPSX_206fake {
    unsigned short pad;
    unsigned short multitap[16];
    unsigned short mouse[2];
    unsigned short negcon[3];
    struct AnalogueData analogue;
};

typedef struct cinema_fn_table_t cinema_fn_table_t;

typedef int PlayCinematic_t();

enum language_t
{
    language_default = -1,
    language_english = 0,
    language_french = 1,
    language_german = 2,
    language_italian = 3,
    language_spanish = 4,
    language_num_states = 5,
};

enum localstr_t
{
    LOCALSTR_BOGUS = 0,
    LOCALSTR_format_card = 1,
    LOCALSTR_accessing_card = 2,
    LOCALSTR_back = 3,
    LOCALSTR_cancel = 4,
    LOCALSTR_choose_load_file = 5,
    LOCALSTR_choose_save_file = 6,
    LOCALSTR_confirm = 7,
    LOCALSTR_continue = 8,
    LOCALSTR_controller = 9,
    LOCALSTR_create_file = 10,
    LOCALSTR_creating = 11,
    LOCALSTR_demos = 12,
    LOCALSTR_do_not_remove_card = 13,
    LOCALSTR_done = 14,
    LOCALSTR_exit_game = 15,
    LOCALSTR_formatting = 16,
    LOCALSTR_go_back = 17,
    LOCALSTR_insert_card = 18,
    LOCALSTR_insert_card_free = 19,
    LOCALSTR_invalid_card = 20,
    LOCALSTR_load_failed = 21,
    LOCALSTR_load_game = 22,
    LOCALSTR_loading = 23,
    LOCALSTR_music = 24,
    LOCALSTR_new_game = 25,
    LOCALSTR_no = 26,
    LOCALSTR_no_card = 27,
    LOCALSTR_card_full = 28,
    LOCALSTR_card_not_enough_blocks = 29,
    LOCALSTR_ok = 30,
    LOCALSTR_options = 31,
    LOCALSTR_overwrite_game = 32,
    LOCALSTR_paused = 33,
    LOCALSTR_press_start = 34,
    LOCALSTR_query_format_card = 35,
    LOCALSTR_query_overwrite = 36,
    LOCALSTR_query_quit = 37,
    LOCALSTR_quit_game = 38,
    LOCALSTR_resume_game = 39,
    LOCALSTR_save_failed = 40,
    LOCALSTR_save_game = 41,
    LOCALSTR_save_ok = 42,
    LOCALSTR_saving = 43,
    LOCALSTR_sound = 44,
    LOCALSTR_start_game = 45,
    LOCALSTR_start_new_game = 46,
    LOCALSTR_try_card_again = 47,
    LOCALSTR_unformatted_card = 48,
    LOCALSTR_vibration_off = 49,
    LOCALSTR_vibration_on = 50,
    LOCALSTR_voice = 51,
    LOCALSTR_warning_one = 52,
    LOCALSTR_warning_two = 53,
    LOCALSTR_yes = 54,
    LOCALSTR_Hint0 = 55,
    LOCALSTR_Hint1 = 56,
    LOCALSTR_Hint2 = 57,
    LOCALSTR_Hint3 = 58,
    LOCALSTR_Hint4 = 59,
    LOCALSTR_Hint5 = 60,
    LOCALSTR_Hint6 = 61,
    LOCALSTR_Hint7 = 62,
    LOCALSTR_Hint8 = 63,
    LOCALSTR_Hint9 = 64,
    LOCALSTR_Hint10 = 65,
    LOCALSTR_Hint11 = 66,
    LOCALSTR_Hint12 = 67,
    LOCALSTR_Hint13 = 68,
    LOCALSTR_Hint14 = 69,
    LOCALSTR_Hint15 = 70,
    LOCALSTR_Hint16 = 71,
    LOCALSTR_Hint17 = 72,
    LOCALSTR_Hint18 = 73,
    LOCALSTR_Hint19 = 74,
    LOCALSTR_Hint20 = 75,
    LOCALSTR_Hint21 = 76,
    LOCALSTR_Hint22 = 77,
    LOCALSTR_Hint23 = 78,
    LOCALSTR_Hint24 = 79,
    LOCALSTR_Hint25 = 80,
    LOCALSTR_Hint26 = 81,
    LOCALSTR_Hint27 = 82,
    LOCALSTR_Hint28 = 83,
    LOCALSTR_Hint29 = 84,
    LOCALSTR_Hint30 = 85,
    LOCALSTR_Hint31 = 86,
    LOCALSTR_Hint32 = 87,
    LOCALSTR_Hint33 = 88,
    LOCALSTR_Hint34 = 89,
    LOCALSTR_Hint35 = 90,
    LOCALSTR_Hint36 = 91,
    LOCALSTR_Hint37 = 92,
    LOCALSTR_Hint38 = 93,
    LOCALSTR_Hint39 = 94,
    LOCALSTR_Hint40 = 95,
    LOCALSTR_Hint41 = 96,
    LOCALSTR_Hint42 = 97,
    LOCALSTR_Hint43 = 98,
    LOCALSTR_Hint44 = 99,
    LOCALSTR_Hint45 = 100,
    LOCALSTR_Hint46 = 101,
    LOCALSTR_Hint47 = 102,
    LOCALSTR_Hint48 = 103,
    LOCALSTR_Hint49 = 104,
    LOCALSTR_Hint50 = 105,
    LOCALSTR_Hint51 = 106,
    LOCALSTR_Hint52 = 107,
    LOCALSTR_EndOfHintStrings = 108,
    LOCALSTR_no_controller = 109,
    LOCALSTR_NUM_ITEMS = 110,
};

struct XAVoiceListEntry
{
    unsigned short length;
};

struct LocalizationHeader
{
    enum language_t language;
    int numXAfiles;
    int XATableOffset;
    int numStrings;
};

typedef enum language_t language_t;

typedef enum localstr_t localstr_t;

typedef struct XAVoiceListEntry XAVoiceListEntry;

typedef struct LocalizationHeader LocalizationHeader;

enum menu_ctrl_t
{
    menu_ctrl_none = 0,
    menu_ctrl_up = 1,
    menu_ctrl_down = 2,
    menu_ctrl_left = 3,
    menu_ctrl_right = 4,
    menu_ctrl_engage = 5,
    menu_ctrl_cancel = 6,
    menu_ctrl_start = 7,
    menu_ctrl_num_items = 8,
};

enum menu_sound_t
{
    menu_sound_none = 0,
    menu_sound_default = 1,
    menu_sound_select = 2,
    menu_sound_adjust = 3,
    menu_sound_engage = 4,
    menu_sound_pop = 5,
};

struct menu_t
{
    int nmenus;
    int nitems;
    int nbytes;
    struct menu_stack_t stack[5];
    struct menu_item_t items[12];
    char bytes[512];
    void (*drawfn)();
    void *opaque;
};

union MENU_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MENU_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct MENU_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct menu_format_t
{
    int xpos;
    int ypos;
    int lineskip;
    int itemskip;
    int width;
    int center;
    int border;
};

struct menu_stack_t
{
    int (*fn)();
    int index;
    struct menu_format_t format;
};

struct menu_item_t
{
    char *text;
    int (*fn)();
    long parameter;
    long flags;
};

struct Extents2d
{
    int xmin;
    int xmax;
    int ymin;
    int ymax;
};

typedef enum menu_ctrl_t menu_ctrl_t;

typedef enum menu_sound_t menu_sound_t;

typedef struct menu_t menu_t;

typedef struct menu_format_t menu_format_t;

typedef struct menu_stack_t menu_stack_t;

typedef struct menu_item_t menu_item_t;

typedef struct Extents2d Extents2d;

typedef int menu_item_fn_t();

typedef void menu_draw_fn_t();

union MENUUTIL_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MENUUTIL_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct MENUUTIL_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct menu_sound_entry_t
{
    enum menu_sound_t sound;
    int sfx;
};

typedef struct menu_sound_entry_t menu_sound_entry_t;

union MENUDEFS_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MENUDEFS_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct MENUDEFS_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

enum sfx_t
{
    sfx_sound = 0,
    sfx_music = 1,
    sfx_voice = 2,
    sfx_error = 3,
};

typedef enum sfx_t sfx_t;

union SAVEINFO_76fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union SAVEINFO_77fake {
    long color;
    struct _RGBAColor rgba;
};

union SAVEINFO_191fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct SavedInfoTracker
{
    char *MemoryCardBuffer;
    char *InfoStart;
    char *InfoEnd;
    char *EndOfMemory;
};

struct SavedLevel
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
    short areaID;
    short waterZ;
    short numberBSPTreesSaved;
};

struct ActualSavedLevel
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
    short areaID;
    short waterZ;
    short numberBSPTreesSaved;
    struct SavedBspTree bspTreeArray[1];
};

struct SavedDeadDeadBits
{
    unsigned char savedID;
    unsigned char shiftedSaveSize;
    char deadDeadBits[832];
};

struct _GlobalSaveTracker
{
    short savedID;
    short saveSize;
    short flags;
    short saveVersion;
    unsigned long currentTime;
    short humanOpinionOfRaziel;
    char numRegens;
    struct _MONAPI_Regenerator regenEntries[10];
    struct gSoundData sound;
    short sizeUsedInBlock;
    short CurrentBirthID;
};

union SAVEINFO_218fake {
    struct Intro *intro;
    struct _SFXMkr *sfxMarker;
};

typedef struct SavedInfoTracker SavedInfoTracker;

typedef struct SavedLevel SavedLevel;

typedef struct ActualSavedLevel ActualSavedLevel;

typedef struct SavedDeadDeadBits SavedDeadDeadBits;

typedef struct _GlobalSaveTracker GlobalSaveTracker;

struct CdlFILTER
{
    unsigned char file;
    unsigned char chan;
    unsigned short pad;
};

struct SpuCommonAttr
{
    unsigned long mask;
    struct SpuVolume mvol;
    struct SpuVolume mvolmode;
    struct SpuVolume mvolx;
    struct SpuExtAttr cd;
    struct SpuExtAttr ext;
};

union VOICEXA_85fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union VOICEXA_86fake {
    long color;
    struct _RGBAColor rgba;
};

struct VOICEXA_169fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct XAVoiceTracker
{
    struct CdlLOC currentPos;
    int currentSector;
    int endSector;
    void (*prevCallback)();
    unsigned char cdResult[8];
    struct CdCommand cdCmdQueue[8];
    unsigned short requestQueue[4];
    struct VoiceCommand voiceCmdQueue[16];
    unsigned char cdCmdIn;
    unsigned char cdCmdOut;
    unsigned char cdCmdsQueued;
    unsigned char reqIn;
    unsigned char reqOut;
    unsigned char reqsQueued;
    unsigned char voiceCmdIn;
    unsigned char voiceCmdOut;
    unsigned char voiceCmdsQueued;
    unsigned char unused1;
    unsigned char voiceStatus;
    unsigned char cdStatus;
    short fileNum;
    short unused2;
    struct XAFileInfo xaFileInfo[30];
};

typedef struct CdlFILTER CdlFILTER;

typedef struct SpuCommonAttr SpuCommonAttr;

typedef struct XAVoiceTracker XAVoiceTracker;

typedef void (*VoiceCmdProc)();

union MENUFACE_71fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MENUFACE_72fake {
    long color;
    struct _RGBAColor rgba;
};

struct MENUFACE_109fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct menuface_t
{
    short x;
    short y;
    char w;
    char h;
    char frames;
    char curFrame;
    char transitionDir;
    unsigned char delay;
    unsigned char loaded;
    char pad;
};

typedef struct menuface_t menuface_t;

struct mcpsx_t
{
    struct
    {
        enum mcpsx_mode_t mode;
        enum mcpsx_func_t func;
        enum mcpsx_sync_t sync;
        enum mcpsx_err_t err;
        int observed;
    } state;
    struct
    {
        long channel;
        char *filename;
        void *buffer;
        long offset;
        long nbytes;
        long nblocks;
        struct mcpsx_directory_t *directory;
        long *nfilesptr;
    } params;
    void *opaque;
};

struct mcpsx_directory_t
{
    char name[20];
    int nbytes;
};

enum mcpsx_err_t
{
    mcpsx_err_none = 0,
    mcpsx_err_card_not_exist = 1,
    mcpsx_err_card_invalid = 2,
    mcpsx_err_new_card = 3,
    mcpsx_err_not_format = 4,
    mcpsx_err_file_not_exist = 5,
    mcpsx_err_already_exists = 6,
    mcpsx_err_block_full = 7,
    mcpsx_err_busy = 8,
    mcpsx_err_num_items = 9,
};

enum mcpsx_func_t
{
    func_none = 0,
    func_exist = 1,
    func_accept = 2,
    func_read_file = 3,
    func_write_file = 4,
    func_create_file = 5,
    func_delete_file = 6,
    func_format = 7,
    func_unformat = 8,
    func_directory = 9,
    func_num_items = 10,
};

enum mcpsx_sync_t
{
    sync_idle = -1,
    sync_busy = 0,
    sync_done = 1,
    sync_func = 2,
    sync_num_items = 3,
};

enum mcpsx_mode_t
{
    mode_bogus = 0,
    mode_initialized = 1,
    mode_running = 2,
    mode_terminated = 3,
    mode_num_items = 4,
};

struct mcard_t
{
    struct
    {
        enum mcpsx_err_t err;
        enum state_t fsm;
        enum mcard_status_t status;
        int not_exists;
    } state;
    struct
    {
        long parameter;
        long *nfilesptr;
        struct mcpsx_directory_t *directory;
        char *filename;
        void *buffer;
        int nbytes;
        int nblocks;
    } params;
    struct mcpsx_t *mcpsx;
    void *opaque;
};

enum state_t
{
    fsmcard_card_not_exist = 0,
    fsmcard_card_invalid = 1,
    fsmcard_not_format = 2,
    fsmcard_new_card = 3,
    fsmcard_directory = 4,
    fsmcard_ready = 5,
    fsmcard_format = 6,
    fsmcard_unformat = 7,
    fsmcard_delete = 8,
    fsmcard_create = 9,
    fsmcard_write = 10,
    fsmcard_read = 11,
    fsmcard_error = 12,
    fsmcard_num_items = 13,
};

enum mcard_status_t
{
    mcard_status_card_not_exist = 0,
    mcard_status_card_invalid = 1,
    mcard_status_not_format = 2,
    mcard_status_new_card = 3,
    mcard_status_ready = 4,
    mcard_status_accessing = 5,
    mcard_status_error = 6,
    mcard_status_num_items = 7,
};

enum fsm_t
{
    fsm_card_not_exist = 0,
    fsm_card_invalid = 1,
    fsm_not_format = 2,
    fsm_new_card = 3,
    fsm_ready = 4,
    fsm_format = 5,
    fsm_start = 6,
    fsm_loading = 7,
    fsm_query_overwrite = 8,
    fsm_overwrite = 9,
    fsm_saving = 10,
    fsm_create = 11,
    fsm_save_complete = 12,
    fsm_num_items = 13,
};

struct mcmenu_t
{
    struct
    {
        enum fsm_t fsm;
        enum fsm_t fsm_prev;
        enum mcard_status_t status;
        int running;
        int slot;
    } state;
    struct
    {
        int nblocks;
        int nbytes;
        void *buffer;
        struct mcpsx_directory_t directory[15];
        long nfiles;
    } params;
    struct mcard_t *mcard;
    void *opaque;
};

struct mcmenu_table_t
{
    int (*data_size)();
    void (*initialize)();
    void (*terminate)();
    void (*begin)();
    void (*end)();
    int (*set_buffer)();
    int (*main)();
    int (*pause)();
    char *versionID;
};

union MEMCARD_79fake {
    struct
    {
        unsigned long (*function)();
        void *fnData;
    } callback;
    struct
    {
        struct _G2SVector3_Type base;
        struct _G2SVector3_Type offset;
    } vector;
    struct
    {
        struct _G2Quat_Type src;
        struct _G2Quat_Type dest;
    } quat;
};

union MEMCARD_80fake {
    long color;
    struct _RGBAColor rgba;
};

struct MEMCARD_117fake
{
    struct
    {
        struct MultiSpline *posSpline;
        struct MultiSpline *targetSpline;
        struct _SVector lastSplinePos;
        short splinePointAhead;
        short cinema_done;
        int splinecam_currkey;
        int splinecam_helpkey;
    } Cinematic;
    struct
    {
        struct _Position offset;
        struct _Rotation rotation;
        long focusDistance;
    } Idle;
    struct
    {
        struct _TFace *tface;
        struct _TFace *oldTFace;
        struct _SVector oldTargetRot;
        long timer;
        struct _SVector oldFocusInstancePos;
    } Behind;
    struct
    {
        long stopTimer;
        long stopHit;
        struct _TFace *tface;
        struct _TFace *oldTFace;
        long hit;
    } Follow;
};

struct memcard_t
{
    struct Object *object;
    struct mcmenu_table_t *table;
    struct mcmenu_t *mcmenu;
    short running;
    short wrongVerison;
};

union MEMCARD_191fake {
    struct _Instance *target;
    struct _Position position;
    struct _Rotation direction;
    struct _Position throwVector;
};

struct MEMCARD_211fake
{
    struct mcmenu_t dummy1;
    struct mcard_t dummy2;
    struct mcpsx_t dummy3;
	struct mcpsx_t dummy3; 
};

typedef struct mcpsx_t mcpsx_t;

typedef struct mcpsx_directory_t mcpsx_directory_t;

typedef enum mcpsx_err_t mcpsx_err_t;

typedef enum mcpsx_func_t mcpsx_func_t;

typedef enum mcpsx_sync_t mcpsx_sync_t;

typedef enum mcpsx_mode_t mcpsx_mode_t;

typedef struct mcard_t mcard_t;

typedef enum state_t fsmcard_t;

typedef enum mcard_status_t mcard_status_t;

typedef enum fsm_t fsm_t;

typedef struct mcmenu_t mcmenu_t;

typedef struct mcmenu_table_t mcmenu_table_t;

typedef struct memcard_t memcard_t;

typedef int mcard_filename_fn_t();


#endif
